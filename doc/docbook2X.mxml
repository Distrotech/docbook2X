<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<manpageset xmlns="http://docbook2x.sourceforge.net/xmlns/Man-XML"><manpage sect="1" h1="docbook2man" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="docbook2man" preprocessors=""><SH>NAME</SH><refnameline><refname><b>docbook2man</b></refname><refpurpose>Convert DocBook to man pages</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>docbook2man</b> </TPtag><TPitem><para> [<i>options</i>]  <i>xml-document</i> </para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>docbook2man</b> converts the given DocBook XML document into man pages.
By default, the man pages will be output to the current directory.
</para><para>

Only the <tt>refentry</tt> content
in the DocBook document is converted.
(To convert content outside of a <tt>refentry</tt>,
stylesheet customization is required.  See the docbook2X
package for details.)
</para><para>
The <b>docbook2man</b> command is a wrapper script
for a two-step conversion process.
See the section “CONVERSION PROCESS” below
for details.
</para><SH>OPTIONS</SH><para>
The available options are essentially the union of the options
from <b><b>db2x_xsltproc</b></b>(1) and <b><b>db2x_manxml</b></b>(1).
</para><para>
Some commonly-used options are listed below:
</para><TP><TPtag><tt><b>--encoding=</b></tt><i>encoding</i></TPtag><TPitem><para>
        Sets the character encoding of the output.
      </para></TPitem></TP><TP><TPtag><tt><b>--string-param </b></tt><i>parameter</i><tt><b>=</b></tt><i>value</i></TPtag><TPitem><para>
        Sets a stylesheet parameter (options that affect how the output looks).
        See “Stylesheet parameters” below for the parameters that
        can be set.
      </para></TPitem></TP><TP><TPtag><tt><b>--sgml</b></tt></TPtag><TPitem><para>
        Accept an SGML source document as input instead of XML.
      </para></TPitem></TP><TP><TPtag><tt><b>--solinks</b></tt></TPtag><TPitem><para>
        Make stub pages for alternate names for an output man page.
      </para></TPitem></TP><SS>STYLESHEET PARAMETERS</SS><TP><TPtag><tt>uppercase-headings</tt></TPtag><TPitem><para><b>Brief</b>. Make headings uppercase?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
Headings in man page content should be or should not be uppercased.
</para></TPitem></TP><TP><TPtag><tt>manvolnum-cite-numeral-only</tt></TPtag><TPitem><para><b>Brief</b>. Man page section citation should use only the number</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
When citing other man pages, the man-page section is either given as is,
or has the letters stripped from it, citing only the number of the
section (e.g. section <tt>3x</tt> becomes
<tt>3</tt>).  This option specifies which style. 
</para></TPitem></TP><TP><TPtag><tt>quotes-on-literals</tt></TPtag><TPitem><para><b>Brief</b>. Display quotes on <tt>literal</tt>
elements?</para><para><b>Default setting</b>. <tt>0</tt> (boolean false)</para><para>
If true, render <tt>literal</tt> elements
with quotes around them.
</para></TPitem></TP><TP><TPtag><tt>show-comments</tt></TPtag><TPitem><para><b>Brief</b>. Display <tt>comment</tt> elements?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>If true, comments will be displayed, otherwise they are suppressed.
Comments here refers to the <tt>comment</tt> element,
which will be renamed <tt>remark</tt> in DocBook V4.0,
not XML comments (&lt;-- like this --&gt;) which are unavailable.
</para></TPitem></TP><TP><TPtag><tt>function-parens</tt></TPtag><TPitem><para><b>Brief</b>. Generate parentheses after a function?</para><para><b>Default setting</b>. <tt>0</tt> (boolean false)</para><para>If true, the formatting of
a <tt>&lt;function&gt;</tt> element will include
generated parenthesis.
</para></TPitem></TP><TP><TPtag><tt>xref-on-link</tt></TPtag><TPitem><para><b>Brief</b>. Should <tt>link</tt> generate a
cross-reference?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
Man pages cannot render the hypertext links created by <tt>link</tt>.  If this option is set, then the
stylesheet renders a cross reference to the target of the link.
(This may reduce clutter).  Otherwise, only the content of the <tt>link</tt> is rendered and the actual link itself is
ignored.
</para></TPitem></TP><TP><TPtag><tt>header-3</tt></TPtag><TPitem><para><b>Brief</b>. Third header text</para><para><b>Default setting</b>. (blank)</para><para>
Specifies the text of the third header of a man page,
typically the date for the man page.  If empty, the <tt>date</tt> content for the <tt>refentry</tt> is used.
</para></TPitem></TP><TP><TPtag><tt>header-4</tt></TPtag><TPitem><para><b>Brief</b>. Fourth header text</para><para><b>Default setting</b>. (blank)</para><para>
Specifies the text of the fourth header of a man page.
If empty, the <tt>refmiscinfo</tt> content for
the <tt>refentry</tt> is used.
</para></TPitem></TP><TP><TPtag><tt>header-5</tt></TPtag><TPitem><para><b>Brief</b>. Fifth header text</para><para><b>Default setting</b>. (blank)</para><para>
Specifies the text of the fifth header of a man page.
If empty, the ‘manual name’, that is, the title of the
<tt>book</tt> or <tt>reference</tt> container is used.
</para></TPitem></TP><TP><TPtag><tt>default-manpage-section</tt></TPtag><TPitem><para><b>Brief</b>. Default man page section</para><para><b>Default setting</b>. <tt>1</tt></para><para>
The source document usually indicates the sections that each man page
should belong to (with <tt>manvolnum</tt> in
<tt>refmeta</tt>).  In case the source
document does not indicate man-page sections, this option specifies the
default.
</para></TPitem></TP><TP><TPtag><tt>custom-localization-file</tt></TPtag><TPitem><para><b>Brief</b>. URI of XML document containing custom localization data</para><para><b>Default setting</b>. (blank)</para><para>
This parameter specifies the URI of a XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.
</para><para>
The text translations pointed to by this parameter always
override the default text translations 
(from the internal parameter <tt>localization-file</tt>).
If a particular translation is not present here,
the corresponding default translation 
is used as a fallback.
</para><para>
This parameter is primarily for changing certain
punctuation characters used in formatting the source document.
The settings for punctuation characters are often specific
to the source document, but can also be dependent on the locale.
</para><para>
To not use custom text translations, leave this parameter 
as the empty string.
</para></TPitem></TP><TP><TPtag><tt>custom-l10n-data</tt></TPtag><TPitem><para><b>Brief</b>. XML document containing custom localization data</para><para><b>Default setting</b>. <tt>document($custom-localization-file)</tt></para><para>
This parameter specifies the XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.
</para><para>
This parameter is internal to the stylesheet.
To point to an external XML document with a URI or a file name, 
you should use the <tt>custom-localization-file</tt>
parameter instead.
</para><para>
However, inside a custom stylesheet 
(<i>not on the command-line</i>)
this paramter can be set to the XPath expression
<tt>document('')</tt>,
which will cause the custom translations 
directly embedded inside the custom stylesheet to be read.
</para></TPitem></TP><TP><TPtag><tt>author-othername-in-middle</tt></TPtag><TPitem><para><b>Brief</b>. Is <tt>othername</tt> in <tt>author</tt> a
middle name?</para><para><b>Default setting</b>. <tt>1</tt></para><para>If true, the <tt>othername</tt> of an <tt>author</tt>
appears between the <tt>firstname</tt> and
<tt>surname</tt>.  Otherwise, <tt>othername</tt>
is suppressed.
</para></TPitem></TP><SH>EXAMPLES</SH><verbatim><tt><b>$ </b>docbook2man --solinks manpages.xml
<b>$ </b>docbook2man --solinks --encoding=utf-8//TRANSLIT manpages.xml
<b>$ </b>docbook2man --string-param header-4="Free Recode 3.6" document.xml
</tt></verbatim><SH>CONVERSION PROCESS</SH><SS>Converting to man pages</SS><para>
DocBook documents are converted to man pages in two steps:

<TP indent="0.4i"><TPtag>1.</TPtag><TPitem><para>
The DocBook source is converted by a XSLT stylesheet into an 
intermediate XML format, Man-XML.</para><para>
Man-XML is simpler than DocBook and closer to the man page format;
it is intended to make the stylesheets’ job easier.
</para><para>
The stylesheet for this purpose is in
<tt><i>xslt/man/docbook.xsl</i></tt>.
For portability, it should always be referred to
by the following URI:
<verbatim>http://docbook2x.sourceforge.net/latest/xslt/man/docbook.xsl
</verbatim>
</para><para>
Run this stylesheet with <b><b>db2x_xsltproc</b></b>(1).
</para><para><b>Customizing</b>. 
You can also customize the output by
creating your own XSLT stylesheet —
changing parameters or adding new templates —
and importing <tt><i>xslt/man/docbook.xsl</i></tt>.
</para></TPitem></TP><TP indent="0.4i"><TPtag>2.</TPtag><TPitem><para>
Man-XML is converted to the actual man pages by <b><b>db2x_manxml</b></b>(1).
</para></TPitem></TP>
</para><para>
The <b>docbook2man</b> command does both steps automatically,
but if any problems occur, you can see the errors more clearly
if you do each step separately:

<verbatim><tt><b>$ </b>db2x_xsltproc -s man <i>mydoc</i>.xml -o <i>mydoc</i>.mxml
<b>$ </b>db2x_manxml <i>mydoc</i>.mxml
</tt></verbatim>

</para><para>
Options to the conversion stylesheet are described in
the man-pages stylesheets
reference.
</para><para><b>Pure XSLT conversion</b>. 
An alternative to the <b>db2x_manxml</b> Perl script is the XSLT
stylesheet in 
<tt><i>xslt/backend/db2x_manxml.xsl</i></tt>.
This stylesheet performs a similar function
of converting Man-XML to actual man pages.
It is useful if you desire a pure XSLT
solution to man-page conversion.
Of course, the quality of the conversion using this stylesheet
will never be as good as the Perl <b>db2x_manxml</b>,
and it runs slower.  
In particular, the pure XSLT version
currently does not support tables in man pages,
but its Perl counterpart does.

</para><SS>Character set conversion</SS><para>
When translating XML to legacy ASCII-based formats
with poor support for Unicode, such as man pages and Texinfo,
there is always the problem that Unicode characters in
the source document also have to be translated somehow.
</para><para>
A straightforward character set conversion from Unicode 
does not suffice,
because the target character set, usually US-ASCII or ISO Latin-1,
do not contain common characters such as 
dashes and directional quotation marks that are widely
used in XML documents.  But document formatters (man and Texinfo)
allow such characters to be entered by a markup escape:
for example, <tt>\(lq</tt> for the left directional quote 
<tt>“</tt>.
And if a markup-level escape is not available,
an ASCII transliteration might be used: for example,
using the ASCII less-than sign <tt>&lt;</tt> for 
the angle quotation mark <tt>〈</tt>.
</para><para>
So the Unicode character problem can be solved in two steps:
</para><TP indent="0.4i"><TPtag>1.</TPtag><TPitem><para>
<b><b>utf8trans</b></b>(1), a program included in docbook2X, maps
Unicode characters to markup-level escapes or transliterations.
</para><para>
Since there is not necessarily a fixed, official mapping of Unicode characters,
<b>utf8trans</b> can read in user-modifiable character mappings 
expressed in text files and apply them.  (Unlike most character
set converters.)
</para><para>
In <tt><i>charmaps/man/roff.charmap</i></tt>
and <tt><i>charmaps/man/texi.charmap</i></tt>
are character maps that may be used for man-page and Texinfo conversion.
The programs <b><b>db2x_manxml</b></b>(1) and <b><b>db2x_texixml</b></b>(1) will apply
these character maps, or another character map specified by the user,
automatically.
</para></TPitem></TP><TP indent="0.4i"><TPtag>2.</TPtag><TPitem><para>
The rest of the Unicode text is converted to some other character set 
(encoding).
For example, a French document with accented characters 
(such as <tt>é</tt>) might be converted to ISO Latin 1.
</para><para>
This step is applied after <b>utf8trans</b> character mapping,
using the 
<b><b>iconv</b></b>(1) encoding conversion tool.
Both <b><b>db2x_manxml</b></b>(1) and <b><b>db2x_texixml</b></b>(1) can call

<b><b>iconv</b></b>(1) automatically when producing their output.
</para></TPitem></TP><SH>FILES</SH><para><tt><i>/usr/local/share/docbook2X/xslt/man/docbook.xsl</i></tt><br/><tt><i>/usr/local/share/docbook2X/xslt/backend/db2x_manxml.xsl</i></tt><br/><tt><i>/usr/local/share/docbook2X/xslt/catalog.xml</i></tt><br/><tt><i>/usr/local/share/docbook2X/charmaps/roff.charmap</i></tt><br/><tt><i>/usr/local/share/docbook2X/charmaps/roff.charmap.xml</i></tt></para><para>
The above files are distributed and installed by the docbook2X package.
</para><SH>NOTES</SH><para>
The <b>docbook2man</b> or the <b>docbook2texi</b> 
command described in this manual page
come from the docbook2X package.
It should not be confused with the command of the same
name from the obsoleted docbook-utils package.
</para><SH>LIMITATIONS</SH><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
      Internally there is one long pipeline of programs which your 
      document goes through.  If any segment of the pipeline fails
      (even trivially, like from mistyped program options), 
      the resulting errors can be difficult to decipher —
      in this case, try running the components of docbook2X
      separately.
    </para></TPitem></TP><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para><b><b>db2x_xsltproc</b></b>(1), <b><b>db2x_manxml</b></b>(1), <b><b>utf8trans</b></b>(1)</para><para>
The docbook2X manual (in Texinfo or HTML format) fully describes
how to convert DocBook to man pages and Texinfo.
</para><para>
Up-to-date information about this program
can be found 
at the 
<ulink url="http://docbook2x.sourceforge.net/">docbook2X Web site</ulink>.
</para></manpage><manpage sect="1" h1="db2x_manxml" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="db2x_manxml" preprocessors=""><SH>NAME</SH><refnameline><refname><b>db2x_manxml</b></refname><refpurpose>Make man pages from Man-XML</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>db2x_manxml</b> </TPtag><TPitem><para> [<i>options</i>] [<i>xml-document</i>]</para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>db2x_manxml</b> converts a Man-XML document into one or 
more man pages.  They are written in the current directory.
</para><para>
If <i>xml-document</i> is not given, then the document
to convert is read from standard input.  
</para><SH>OPTIONS</SH><TP><TPtag><tt><b>--encoding=</b></tt><i>encoding</i></TPtag><TPitem><para>
Select the character encoding used for the output files.
The available encodings are those of 
<b><b>iconv</b></b>(1). 
The default encoding is <tt>us-ascii</tt>.  
</para><para>
The XML source may contain characters that are not representable in the encoding that
you select;  in this case the program will bomb out during processing, and you should 
choose another encoding.
(This is guaranteed not to happen with any Unicode encoding such as 
UTF-8, but unfortunately not everyone is able to 
process Unicode texts.)
</para><para>
If you are using GNU’s version of 
<b><b>iconv</b></b>(1), you can affix 
<tt>//TRANSLIT</tt> to the end of the encoding name
to attempt transliterations of any unconvertible characters in the output.
Beware, however, that the really inconvertible characters will be turned
into another of those damned question marks.  (Aren’t you sick of this?)
</para><para>
The suffix <tt>//TRANSLIT</tt> applied
to a Unicode encoding — in particular, <tt>utf-8//TRANSLIT</tt> —
means that the output files are to remain in Unicode,
but markup-level character translations using <b>utf8trans</b> 
are still to be done.  So in most cases, an English-language
document, converted using 
<tt><b>--encoding=</b></tt><tt><b><tt>utf-8//TRANSLIT</tt></b></tt>
will actually end up as a US-ASCII document,
but any untranslatable characters 
will remain as UTF-8 without any warning whatsoever.
(Note: strictly speaking this is not “transliteration”.)
This method of conversion is a compromise over strict
<tt><b>--encoding=</b></tt><tt><b><tt>us-ascii</tt></b></tt>
processing, which aborts if any untranslatable characters are 
encountered.
</para><para>
Note that man pages and Texinfo documents 
in non-ASCII encodings (including UTF-8)
may not be portable to older (non-internationalized) systems,
which is why the default value for this option is 
<tt>us-ascii</tt>.
</para><para>
To suppress any automatic character mapping or encoding conversion
whatsoever, pass the option 
<tt><b>--encoding=</b></tt><tt><b><tt>utf-8</tt></b></tt>.
</para></TPitem></TP><TP><TPtag><tt><b>--list-files</b></tt></TPtag><TPitem><para>
Write a list of all the output files to standard output,
in addition to normal processing.
</para></TPitem></TP><TP><TPtag><tt><b>--output-dir=</b></tt><i>dir</i></TPtag><TPitem><para>
Specify the directory where the output files are placed.
The default is the current working directory.
</para><para>
This option is ignored if the output is to be written
to standard output (triggered by the 
option <tt><b>--to-stdout</b></tt>).
</para></TPitem></TP><TP><TPtag><tt><b>--to-stdout</b></tt></TPtag><TPitem><para>
Write the output to standard output instead of to individual files.
</para><para>
If this option is used even when there are supposed to be multiple
output documents, then everything is concatenated to standard output.
But beware that most other programs will not accept this concatenated
output.
</para><para>
This option is incompatible with <tt><b>--list-files</b></tt>,
obviously.
</para></TPitem></TP><TP><TPtag><tt><b>--help</b></tt></TPtag><TPitem><para>Show brief usage information and exit.</para></TPitem></TP><TP><TPtag><tt><b>--version</b></tt></TPtag><TPitem><para>Show version and exit.</para></TPitem></TP><para>Some man pages may be referenced under two or more
names, instead of just one.  For example, 
<b>strcpy</b>(3)
and
<b>strncpy</b>(3)
often point to the same man page which describes the two functions together.
Choose one of the following options to select
how such man pages are to be generated:
</para><TP><TPtag><tt><b>--symlinks</b></tt></TPtag><TPitem><para>For each of all the alternate names for a man page,
erect symbolic links to the file that contains the real man page content.
</para></TPitem></TP><TP><TPtag><tt><b>--solinks</b></tt></TPtag><TPitem><para>Generate stub pages (using <tt>.so</tt> roff requests)
for the alternate names, pointing them to the real man page content.</para></TPitem></TP><TP><TPtag><tt><b>--no-links</b></tt></TPtag><TPitem><para>Do not make any alternative names available.
The man page can only be referenced under its principal name.
</para></TPitem></TP><para>
This program uses certain other programs for its operation.
If they are not in their default installed locations, then use
the following options to set their location:

<TP><TPtag><tt><b>--utf8trans-program=</b></tt><i>path</i>, <tt><b>--utf8trans-map=</b></tt><i>charmap</i></TPtag><TPitem><para>Use the character map <i>charmap</i>
with the <b><b>utf8trans</b></b>(1) program, included with docbook2X, found
under <i>path</i>.</para></TPitem></TP><TP><TPtag><tt><b>--iconv-program=</b></tt><i>path</i></TPtag><TPitem><para>The location of the 
<b><b>iconv</b></b>(1) program, used for encoding
conversions.</para></TPitem></TP></para><SH>NOTES</SH><para>
The man pages produced should be compatible
with most troff implementations and other tools
that process man pages.
Some backwards-compatible 
<b><b>groff</b></b>(1) extensions
are used to make the output look nicer.
</para><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para>
The docbook2X manual (in Texinfo or HTML format) fully describes
how to convert DocBook to man pages and Texinfo.
</para><para>
Up-to-date information about this program
can be found 
at the 
<ulink url="http://docbook2x.sourceforge.net/">docbook2X Web site</ulink>.
</para><para>
The input to <b>db2x_manxml</b> is defined by the XML DTD
present at <tt><i>dtd/Man-XML</i></tt> in the docbook2X
distribution.
</para></manpage><manpage sect="1" h1="docbook2texi" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="docbook2texi" preprocessors=""><SH>NAME</SH><refnameline><refname><b>docbook2texi</b></refname><refpurpose>Convert DocBook to Texinfo</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>docbook2texi</b> </TPtag><TPitem><para> [<i>options</i>]  <i>xml-document</i> </para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>docbook2texi</b> converts the given 
DocBook XML document into one or more Texinfo documents.
By default, these Texinfo documents will be output to the current
directory.
</para><para>
The <b>docbook2texi</b> command is a wrapper script
for a two-step conversion process.
See the section “CONVERSION PROCESS” below
for details.
</para><SH>OPTIONS</SH><para>
The available options are essentially the union of the options
for <b><b>db2x_xsltproc</b></b>(1) and <b><b>db2x_texixml</b></b>(1).
</para><para>
Some commonly-used options are listed below:
</para><TP><TPtag><tt><b>--encoding=</b></tt><i>encoding</i></TPtag><TPitem><para>
        Sets the character encoding of the output.
      </para></TPitem></TP><TP><TPtag><tt><b>--string-param </b></tt><i>parameter</i><tt><b>=</b></tt><i>value</i></TPtag><TPitem><para>
        Sets a stylesheet parameter (options that affect how the output looks).
        See “Stylesheet parameters” below for the parameters that
        can be set.
      </para></TPitem></TP><TP><TPtag><tt><b>--sgml</b></tt></TPtag><TPitem><para>
        Accept an SGML source document as input instead of XML.
      </para></TPitem></TP><SS>STYLESHEET PARAMETERS</SS><TP><TPtag><tt>captions-display-as-headings</tt></TPtag><TPitem><para><b>Brief</b>. Use heading markup for minor captions?</para><para><b>Default setting</b>. <tt>0</tt> (boolean false)</para><para>If true, <tt>title</tt>
content in some (formal) objects are rendered with the Texinfo
<tt>@<i>heading</i></tt> commands.
</para><para>
If false, captions are rendered as an emphasized paragraph.
</para></TPitem></TP><TP><TPtag><tt>links-use-pxref</tt></TPtag><TPitem><para><b>Brief</b>. Translate <tt>link</tt> using
<tt>@pxref</tt></para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
If true, <tt>link</tt> is translated
with the hypertext followed by the cross reference in parentheses.
</para><para>
Otherwise, the hypertext content serves as the cross-reference name
marked up using <tt>@ref</tt>.  Typically info displays this
contruct badly.
</para></TPitem></TP><TP><TPtag><tt>explicit-node-names</tt></TPtag><TPitem><para><b>Brief</b>. Insist on manually constructed Texinfo node
names</para><para><b>Default setting</b>. <tt>0</tt> (boolean false)</para><para>
Elements in the source document can influence the Texinfo node name
generation specifying either a <tt>xreflabel</tt>, or for the sectioning elements,
a <tt>title</tt> with <tt>role='texinfo-node'</tt> in the 
<tt><i>*</i>info</tt> container.
</para><para>
However, for the majority of source documents, explicit Texinfo node
names are not available, and the stylesheet tries to generate a
reasonable one instead, e.g. from the normal title of an element.  
The generated name may not be optimal.  If this option is set and the
stylesheet needs to generate a name, a warning is emitted and 
<tt><b>generate-id</b></tt> is always used for the name.
</para><para>
When the hashtable extension is not available, the stylesheet cannot
check for node name collisions, and in this case, setting this option
and using explicit node names are recommended.  
</para><para>
This option is not set (i.e. false) by default.
</para><indent><para><b>Note</b></para><para>The absolute fallback for generating node names is using the XSLT
function <tt><b>generate-id</b></tt>, and the stylesheet always
emits a warning in this case regardless of the setting of
<tt>explicit-node-names</tt>.</para></indent></TPitem></TP><TP><TPtag><tt>show-comments</tt></TPtag><TPitem><para><b>Brief</b>. Display <tt>comment</tt> elements?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>If true, comments will be displayed, otherwise they are suppressed.
Comments here refers to the <tt>comment</tt> element,
which will be renamed <tt>remark</tt> in DocBook V4.0,
not XML comments (&lt;-- like this --&gt;) which are unavailable.
</para></TPitem></TP><TP><TPtag><tt>funcsynopsis-decoration</tt></TPtag><TPitem><para><b>Brief</b>. Decorate elements of a FuncSynopsis?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>If true, elements of the FuncSynopsis will be decorated (e.g. bold or
italic).  The decoration is controlled by functions that can be redefined
in a customization layer.
</para></TPitem></TP><TP><TPtag><tt>function-parens</tt></TPtag><TPitem><para><b>Brief</b>. Generate parentheses after a function?</para><para><b>Default setting</b>. <tt>0</tt> (boolean false)</para><para>If true, the formatting of
a <tt>&lt;function&gt;</tt> element will include
generated parenthesis.
</para></TPitem></TP><TP><TPtag><tt>refentry-display-name</tt></TPtag><TPitem><para><b>Brief</b>. Output NAME header before 'RefName'(s)?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>If true, a "NAME" section title is output before the list
of 'RefName's.
</para></TPitem></TP><TP><TPtag><tt>manvolnum-in-xref</tt></TPtag><TPitem><para><b>Brief</b>. Output <tt>manvolnum</tt> as part of
<tt>refentry</tt> cross-reference?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>if true, the <tt>manvolnum</tt> is used when cross-referencing
<tt>refentry</tt>s, either with <tt>xref</tt>
or <tt>citerefentry</tt>.
</para></TPitem></TP><TP><TPtag><tt>prefer-textobjects</tt></TPtag><TPitem><para><b>Brief</b>. Prefer <tt>textobject</tt>
over <tt>imageobject</tt>?
</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
If true, the 
<tt>textobject</tt>
in a <tt>mediaobject</tt>
is preferred over any
<tt>imageobject</tt>.
</para><para>
(Of course, for output formats other than Texinfo, you usually
want to prefer the <tt>imageobject</tt>,
but Info is a text-only format.)
</para><para>
In addition to the values true and false, this parameter
may be set to <tt>2</tt> to indicate that
both the text and the images should be output.
You may want to do this because some Texinfo viewers
can read images.  Note that the Texinfo <tt>@image</tt>
command has its own mechanism for switching between text
and image output — but we do not use this here.
</para><para>
The default is true.
</para></TPitem></TP><TP><TPtag><tt>semantic-decorations</tt></TPtag><TPitem><para><b>Brief</b>. Use Texinfo semantic inline markup?</para><para><b>Default setting</b>. <tt>1</tt> (boolean true)</para><para>
If true, the semantic inline markup of DocBook is translated into
(the closest) Texinfo equivalent.  This is the default.
</para><para>
However, because the Info format is limited to plain text,
the semantic inline markup is often distinguished by using 
explicit quotes, which may not look good.  
You can set this option to false to suppress these.
(For finer control over the inline formatting, you can
use your own stylesheet.)
</para></TPitem></TP><TP><TPtag><tt>custom-localization-file</tt></TPtag><TPitem><para><b>Brief</b>. URI of XML document containing custom localization data</para><para><b>Default setting</b>. (blank)</para><para>
This parameter specifies the URI of a XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.
</para><para>
The text translations pointed to by this parameter always
override the default text translations 
(from the internal parameter <tt>localization-file</tt>).
If a particular translation is not present here,
the corresponding default translation 
is used as a fallback.
</para><para>
This parameter is primarily for changing certain
punctuation characters used in formatting the source document.
The settings for punctuation characters are often specific
to the source document, but can also be dependent on the locale.
</para><para>
To not use custom text translations, leave this parameter 
as the empty string.
</para></TPitem></TP><TP><TPtag><tt>custom-l10n-data</tt></TPtag><TPitem><para><b>Brief</b>. XML document containing custom localization data</para><para><b>Default setting</b>. <tt>document($custom-localization-file)</tt></para><para>
This parameter specifies the XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.
</para><para>
This parameter is internal to the stylesheet.
To point to an external XML document with a URI or a file name, 
you should use the <tt>custom-localization-file</tt>
parameter instead.
</para><para>
However, inside a custom stylesheet 
(<i>not on the command-line</i>)
this paramter can be set to the XPath expression
<tt>document('')</tt>,
which will cause the custom translations 
directly embedded inside the custom stylesheet to be read.
</para></TPitem></TP><TP><TPtag><tt>author-othername-in-middle</tt></TPtag><TPitem><para><b>Brief</b>. Is <tt>othername</tt> in <tt>author</tt> a
middle name?</para><para><b>Default setting</b>. <tt>1</tt></para><para>If true, the <tt>othername</tt> of an <tt>author</tt>
appears between the <tt>firstname</tt> and
<tt>surname</tt>.  Otherwise, <tt>othername</tt>
is suppressed.
</para></TPitem></TP><TP><TPtag><tt>output-file</tt></TPtag><TPitem><para><b>Brief</b>. Name of the Info file</para><para><b>Default setting</b>. (blank)</para><para>This parameter specifies the name of the final Info file,
overriding the setting in the document itself and the automatic
selection in the stylesheet.  If the document is a <tt>set</tt>, this parameter has no effect. </para><indent><para><b>Important</b></para><para>
Do <i>not</i> include the <tt>.info</tt>
extension in the name.
</para></indent><para>
(Note that this parameter has nothing to do with the name of
the <i>Texi-XML output</i> by the XSLT processor you 
are running this stylesheet from.)
</para></TPitem></TP><TP><TPtag><tt>directory-category</tt></TPtag><TPitem><para><b>Brief</b>. The categorization of the document in the Info directory</para><para><b>Default setting</b>. (blank)</para><para>
This is set to the category that the document
should go under in the Info directory of installed Info files.
For example, <tt>General Commands</tt>.
</para><indent><para><b>Note</b></para><para>
Categories may also be set directly in the source document.
But if this parameter is not empty, then it always overrides the 
setting in the source document.
</para></indent></TPitem></TP><TP><TPtag><tt>directory-description</tt></TPtag><TPitem><para><b>Brief</b>. The description of the document in the Info directory</para><para><b>Default setting</b>. (blank)</para><para>
This is a short description of the document that appears in
the Info directory of installed Info files.
For example, <tt>An Interactive Plotting Program.</tt>
</para><indent><para><b>Note</b></para><para>
Menu descriptions may also be set directly in the source document.
But if this parameter is not empty, then it always overrides the 
setting in the source document.
</para></indent></TPitem></TP><TP><TPtag><tt>index-category</tt></TPtag><TPitem><para><b>Brief</b>. The Texinfo index to use</para><para><b>Default setting</b>. <tt>cp</tt></para><para>The Texinfo index for <tt>indexterm</tt>
and <tt>index</tt> is specified using the
<tt>role</tt> attribute.  If the above
elements do not have a <tt>role</tt>, then
the default specified by this parameter is used.
</para><para>
The predefined indices are:

<indent><TP><TPtag><tt>c</tt>, <tt>cp</tt></TPtag><TPitem><para>Concept index</para></TPitem></TP><TP><TPtag><tt>f</tt>, <tt>fn</tt></TPtag><TPitem><para>Function index</para></TPitem></TP><TP><TPtag><tt>v</tt>, <tt>vr</tt></TPtag><TPitem><para>Variable index</para></TPitem></TP><TP><TPtag><tt>k</tt>, <tt>ky</tt></TPtag><TPitem><para>Keystroke index</para></TPitem></TP><TP><TPtag><tt>p</tt>, <tt>pg</tt></TPtag><TPitem><para>Program index</para></TPitem></TP><TP><TPtag><tt>d</tt>, <tt>tp</tt></TPtag><TPitem><para>Data type index</para></TPitem></TP></indent>

User-defined indices are not yet supported.
</para></TPitem></TP><TP><TPtag><tt>qanda-defaultlabel</tt></TPtag><TPitem><para><b>Brief</b>. Sets the default for defaultlabel on QandASet.</para><para><b>Default setting</b>. <tt/></para><para>If no defaultlabel attribute is specified on a QandASet, this
value is used. It must be one of the legal values for the defaultlabel
attribute.
</para></TPitem></TP><TP><TPtag><tt>qandaset-generate-toc</tt></TPtag><TPitem><para><b>Brief</b>. Is a Table of Contents created for QandASets?</para><para><b>Default setting</b>. <tt/></para><para>If true, a ToC is constructed for QandASets.
</para></TPitem></TP><SH>EXAMPLES</SH><verbatim><tt><b>$ </b>docbook2texi tdg.xml
<b>$ </b>docbook2texi --encoding=utf-8//TRANSLIT tdg.xml
<b>$ </b>docbook2texi --string-param semantic-decorations=0 tdg.xml
</tt></verbatim><SH>CONVERSION PROCESS</SH><SS>Converting to Texinfo</SS><para>
DocBook documents are converted to Texinfo in two steps:

<TP indent="0.4i"><TPtag>1.</TPtag><TPitem><para>
The DocBook source is converted by a XSLT stylesheet into an intermediate
XML format, Texi-XML.</para><para>
Texi-XML is simpler than DocBook and closer to the Texinfo format;
it is intended to make the stylesheets’ job easier.
</para><para>
The stylesheet for this purpose is in
<tt><i>xslt/texi/docbook.xsl</i></tt>.
For portability, it should always be referred to
by the following URI:
<verbatim>http://docbook2x.sourceforge.net/latest/xslt/texi/docbook.xsl
</verbatim>
</para><para>
Run this stylesheet with <b><b>db2x_xsltproc</b></b>(1).
</para><para><b>Customizing</b>. 
You can also customize the output by
creating your own XSLT stylesheet —
changing parameters or adding new templates —
and importing <tt><i>xslt/texi/docbook.xsl</i></tt>.
</para></TPitem></TP><TP indent="0.4i"><TPtag>2.</TPtag><TPitem><para>
Texi-XML is converted to the actual Texinfo files by <b><b>db2x_texixml</b></b>(1).
</para></TPitem></TP>

</para><para>
The <b>docbook2texi</b> command does both steps automatically,
but if any problems occur, you can see the errors more clearly
if you do each step separately:

<verbatim><tt><b>$ </b>db2x_xsltproc -s texi <i>mydoc</i>.xml -o <i>mydoc</i>.txml
<b>$ </b>db2x_texixml <i>mydoc</i>.txml
</tt></verbatim>

</para><para>
Options to the conversion stylesheet are described
in the Texinfo stylesheets
reference.
</para><SS>Character set conversion</SS><para>
When translating XML to legacy ASCII-based formats
with poor support for Unicode, such as man pages and Texinfo,
there is always the problem that Unicode characters in
the source document also have to be translated somehow.
</para><para>
A straightforward character set conversion from Unicode 
does not suffice,
because the target character set, usually US-ASCII or ISO Latin-1,
do not contain common characters such as 
dashes and directional quotation marks that are widely
used in XML documents.  But document formatters (man and Texinfo)
allow such characters to be entered by a markup escape:
for example, <tt>\(lq</tt> for the left directional quote 
<tt>“</tt>.
And if a markup-level escape is not available,
an ASCII transliteration might be used: for example,
using the ASCII less-than sign <tt>&lt;</tt> for 
the angle quotation mark <tt>〈</tt>.
</para><para>
So the Unicode character problem can be solved in two steps:
</para><TP indent="0.4i"><TPtag>1.</TPtag><TPitem><para>
<b><b>utf8trans</b></b>(1), a program included in docbook2X, maps
Unicode characters to markup-level escapes or transliterations.
</para><para>
Since there is not necessarily a fixed, official mapping of Unicode characters,
<b>utf8trans</b> can read in user-modifiable character mappings 
expressed in text files and apply them.  (Unlike most character
set converters.)
</para><para>
In <tt><i>charmaps/man/roff.charmap</i></tt>
and <tt><i>charmaps/man/texi.charmap</i></tt>
are character maps that may be used for man-page and Texinfo conversion.
The programs <b><b>db2x_manxml</b></b>(1) and <b><b>db2x_texixml</b></b>(1) will apply
these character maps, or another character map specified by the user,
automatically.
</para></TPitem></TP><TP indent="0.4i"><TPtag>2.</TPtag><TPitem><para>
The rest of the Unicode text is converted to some other character set 
(encoding).
For example, a French document with accented characters 
(such as <tt>é</tt>) might be converted to ISO Latin 1.
</para><para>
This step is applied after <b>utf8trans</b> character mapping,
using the 
<b><b>iconv</b></b>(1) encoding conversion tool.
Both <b><b>db2x_manxml</b></b>(1) and <b><b>db2x_texixml</b></b>(1) can call

<b><b>iconv</b></b>(1) automatically when producing their output.
</para></TPitem></TP><SH>FILES</SH><para><tt><i>/usr/local/share/docbook2X/xslt/texi/docbook.xsl</i></tt><br/><tt><i>/usr/local/share/docbook2X/xslt/backend/db2x_texixml.xsl</i></tt><br/><tt><i>/usr/local/share/docbook2X/xslt/catalog.xml</i></tt><br/><tt><i>/usr/local/share/docbook2X/charmaps/texi.charmap.xml</i></tt><br/><tt><i>/usr/local/share/docbook2X/charmaps/texi.charmap.xml</i></tt></para><para>
The above files are distributed and installed by the docbook2X package.
</para><SH>NOTES</SH><para>
The <b>docbook2man</b> or the <b>docbook2texi</b> 
command described in this manual page
come from the docbook2X package.
It should not be confused with the command of the same
name from the obsoleted docbook-utils package.
</para><SH>LIMITATIONS</SH><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
      Internally there is one long pipeline of programs which your 
      document goes through.  If any segment of the pipeline fails
      (even trivially, like from mistyped program options), 
      the resulting errors can be difficult to decipher —
      in this case, try running the components of docbook2X
      separately.
    </para></TPitem></TP><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para><b><b>db2x_xsltproc</b></b>(1), <b><b>db2x_texixml</b></b>(1), <b><b>utf8trans</b></b>(1)</para><para>
The docbook2X manual (in Texinfo or HTML format) fully describes
how to convert DocBook to man pages and Texinfo.
</para><para>
Up-to-date information about this program
can be found 
at the 
<ulink url="http://docbook2x.sourceforge.net/">docbook2X Web site</ulink>.
</para></manpage><manpage sect="1" h1="db2x_texixml" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="db2x_texixml" preprocessors=""><SH>NAME</SH><refnameline><refname><b>db2x_texixml</b></refname><refpurpose>Make Texinfo files from Texi-XML</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>db2x_texixml</b> </TPtag><TPitem><para> [options]… [<i>xml-document</i>]</para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>db2x_texixml</b> converts a Texi-XML document into one or 
more Texinfo documents.
</para><para>
If <i>xml-document</i> is not given, then the document
to convert comes from standard input.  
</para><para>
The filenames of the Texinfo documents are determined by markup in the
Texi-XML source.  (If the filenames are not specified in the markup,
then <b>db2x_texixml</b> attempts to deduce them from the name of the input
file.  However, the Texi-XML source should specify the filename, because
it does not work when there are multiple output files or when the
Texi-XML source comes from standard input.)
</para><SH>OPTIONS</SH><TP><TPtag><tt><b>--encoding=</b></tt><i>encoding</i></TPtag><TPitem><para>
Select the character encoding used for the output files.
The available encodings are those of 
<b><b>iconv</b></b>(1). 
The default encoding is <tt>us-ascii</tt>.  
</para><para>
The XML source may contain characters that are not representable in the encoding that
you select;  in this case the program will bomb out during processing, and you should 
choose another encoding.
(This is guaranteed not to happen with any Unicode encoding such as 
UTF-8, but unfortunately not everyone is able to 
process Unicode texts.)
</para><para>
If you are using GNU’s version of 
<b><b>iconv</b></b>(1), you can affix 
<tt>//TRANSLIT</tt> to the end of the encoding name
to attempt transliterations of any unconvertible characters in the output.
Beware, however, that the really inconvertible characters will be turned
into another of those damned question marks.  (Aren’t you sick of this?)
</para><para>
The suffix <tt>//TRANSLIT</tt> applied
to a Unicode encoding — in particular, <tt>utf-8//TRANSLIT</tt> —
means that the output files are to remain in Unicode,
but markup-level character translations using <b>utf8trans</b> 
are still to be done.  So in most cases, an English-language
document, converted using 
<tt><b>--encoding=</b></tt><tt><b><tt>utf-8//TRANSLIT</tt></b></tt>
will actually end up as a US-ASCII document,
but any untranslatable characters 
will remain as UTF-8 without any warning whatsoever.
(Note: strictly speaking this is not “transliteration”.)
This method of conversion is a compromise over strict
<tt><b>--encoding=</b></tt><tt><b><tt>us-ascii</tt></b></tt>
processing, which aborts if any untranslatable characters are 
encountered.
</para><para>
Note that man pages and Texinfo documents 
in non-ASCII encodings (including UTF-8)
may not be portable to older (non-internationalized) systems,
which is why the default value for this option is 
<tt>us-ascii</tt>.
</para><para>
To suppress any automatic character mapping or encoding conversion
whatsoever, pass the option 
<tt><b>--encoding=</b></tt><tt><b><tt>utf-8</tt></b></tt>.
</para></TPitem></TP><TP><TPtag><tt><b>--list-files</b></tt></TPtag><TPitem><para>
Write a list of all the output files to standard output,
in addition to normal processing.
</para></TPitem></TP><TP><TPtag><tt><b>--output-dir=</b></tt><i>dir</i></TPtag><TPitem><para>
Specify the directory where the output files are placed.
The default is the current working directory.
</para><para>
This option is ignored if the output is to be written
to standard output (triggered by the 
option <tt><b>--to-stdout</b></tt>).
</para></TPitem></TP><TP><TPtag><tt><b>--to-stdout</b></tt></TPtag><TPitem><para>
Write the output to standard output instead of to individual files.
</para><para>
If this option is used even when there are supposed to be multiple
output documents, then everything is concatenated to standard output.
But beware that most other programs will not accept this concatenated
output.
</para><para>
This option is incompatible with <tt><b>--list-files</b></tt>,
obviously.
</para></TPitem></TP><TP><TPtag><tt><b>--info</b></tt></TPtag><TPitem><para>Pipe the Texinfo output to 
<b><b>makeinfo</b></b>(1),
            creating Info files directly instead of
            Texinfo files.</para></TPitem></TP><TP><TPtag><tt><b>--plaintext</b></tt></TPtag><TPitem><para>Pipe the Texinfo output to <b>makeinfo
            <tt><b>--no-headers</b></tt></b>, thereby creating
            plain text files.</para></TPitem></TP><TP><TPtag><tt><b>--help</b></tt></TPtag><TPitem><para>Show brief usage information and exit.</para></TPitem></TP><TP><TPtag><tt><b>--version</b></tt></TPtag><TPitem><para>Show version and exit.</para></TPitem></TP><para>
This program uses certain other programs for its operation.
If they are not in their default installed locations, then use
the following options to set their location:

<TP><TPtag><tt><b>--utf8trans-program=</b></tt><i>path</i>, <tt><b>--utf8trans-map=</b></tt><i>charmap</i></TPtag><TPitem><para>Use the character map <i>charmap</i>
with the <b><b>utf8trans</b></b>(1) program, included with docbook2X, found
under <i>path</i>.</para></TPitem></TP><TP><TPtag><tt><b>--iconv-program=</b></tt><i>path</i></TPtag><TPitem><para>The location of the 
<b><b>iconv</b></b>(1) program, used for encoding
conversions.</para></TPitem></TP></para><SH>NOTES</SH><para><b>Texinfo language compatibility</b>. 
    
    The Texinfo files generated by <b>db2x_texixml</b> sometimes require
    Texinfo version 4.7 (the latest version) to work properly.
    In particular:
    
    <TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>   
        <b>db2x_texixml</b> relies on <b>makeinfo</b>
        to automatically add punctuation after a <tt>@ref</tt>
        if it it not already there.  Otherwise the hyperlink will 
        not work in the Info reader (although
        <b>makeinfo</b> will not emit any error).
      </para></TPitem></TP><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
        The new <tt>@comma{}</tt> command is used for commas
        (<tt>,</tt>) occurring inside argument lists to 
        Texinfo commands, to disambiguate it from the comma used
        to separate different arguments.  The only alternative 
        otherwise would be to translate <tt>,</tt> to 
        <tt>.</tt>
        which is obviously undesirable (but earlier docbook2X versions
        did this).</para><para>If you cannot use version 4.7 of
        <b>makeinfo</b>, you can still use a
        <b>sed</b> script to perform manually the procedure 
        just outlined.</para></TPitem></TP>
  </para><para><b>Relation of Texi-XML with the XML output format of <b>makeinfo</b></b>. 
    The Texi-XML format used by docbook2X is <i>different</i>
    and incompatible with the XML format generated by 
<b><b>makeinfo</b></b>(1)
    with its <tt><b>--xml</b></tt> option.
    This situation arose partly because the Texi-XML format
    of docbook2X was designed and implemented independently 
    before the appearance
    of <b>makeinfo</b>’s XML format.
    Also Texi-XML is very much geared towards being 
    <i>machine-generated from other XML formats</i>,
    while there seems to be no non-trivial applications
    of <b>makeinfo</b>’s XML format.
    So there is no reason at this point for docbook2X
    to adopt <b>makeinfo</b>’s XML format
    in lieu of Texi-XML.
  </para><SH>BUGS</SH><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
      Text wrapping in menus is utterly broken for non-ASCII text.
      It is probably also broken everywhere else in the output, but 
      that would be <b>makeinfo</b>’s fault.
    </para></TPitem></TP><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
      <tt><b>--list-files</b></tt> might not work correctly
      with <tt><b>--info</b></tt>.  Specifically, when the output
      Info file get too big, <b>makeinfo</b> will decide
      to split it into parts named 
      <tt><i><i>abc</i>.info-1</i></tt>,
      <tt><i><i>abc</i>.info-2</i></tt>,
      <tt><i><i>abc</i>.info-3</i></tt>, etc.
      <b>db2x_texixml</b> does not know exactly how many of these files
      there are, though you can just do an <b>ls</b> 
      to find out.
    </para></TPitem></TP><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para>
The docbook2X manual (in Texinfo or HTML format) fully describes
how to convert DocBook to man pages and Texinfo.
</para><para>
Up-to-date information about this program
can be found 
at the 
<ulink url="http://docbook2x.sourceforge.net/">docbook2X Web site</ulink>.
</para><para>
The input to <b>db2x_texixml</b> is defined by the XML DTD
present at <tt><i>dtd/Texi-XML</i></tt> in the docbook2X
distribution.
</para></manpage><manpage sect="1" h1="db2x_xsltproc" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="db2x_xsltproc" preprocessors=""><SH>NAME</SH><refnameline><refname><b>db2x_xsltproc</b></refname><refpurpose>XSLT processor invocation wrapper</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>db2x_xsltproc</b> </TPtag><TPitem><para> [<i>options</i>]  <i>xml-document</i> </para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>db2x_xsltproc</b> invokes the XSLT 1.0 processor for docbook2X.
</para><para>
This command applies the XSLT stylesheet 
(usually given by the <tt><b>--stylesheet</b></tt> option)
to the XML document in the file <i>xml-document</i>.
The result is written to standard output (unless changed with 
<tt><b>--output</b></tt>).  
</para><para>
To read the source XML document from standard input,
specify <tt>-</tt> as the input document.
</para><SH>OPTIONS</SH><TP><TPtag><tt><b>--version</b></tt></TPtag><TPitem><para>
Display the docbook2X version.
</para></TPitem></TP><SS>TRANSFORMATION OUTPUT OPTIONS</SS><TP><TPtag><tt><b>--output </b></tt><i>file</i>, <tt><b>-o </b></tt><i>file</i></TPtag><TPitem><para>
Write output to the given file (or URI), instead of standard output.
</para></TPitem></TP><SS>SOURCE DOCUMENT OPTIONS</SS><TP><TPtag><tt><b>--xinclude</b></tt>, <tt><b>-I</b></tt></TPtag><TPitem><para>
Process XInclude directives in the source document.
</para></TPitem></TP><TP><TPtag><tt><b>--sgml</b></tt>, <tt><b>-S</b></tt></TPtag><TPitem><para>
Indicate that the input document is SGML instead of XML.
You need this set this option if <i>xml-document</i>
is actually a SGML file.
</para><para>
SGML parsing is implemented by conversion to XML via 
<b><b>sgml2xml</b></b>(1) from the
SP package (or 
<b><b>osx</b></b>(1) from the OpenSP package).  All tag names in the
SGML file will be normalized to lowercase (i.e. the <tt><b>-xlower</b></tt>
option of 
<b><b>sgml2xml</b></b>(1) is used).  ID attributes are available
for the stylesheet (i.e. option <tt><b>-xid</b></tt>).  In addition,
any ISO SDATA entities used in the SGML document are automatically converted
to their XML Unicode equivalents.  (This is done by a
<b>sed</b> filter.)
</para><para>
The encoding of the SGML document, if it is not
<tt>us-ascii</tt>, must be specified with the standard
SP environment variables: <tt><b>SP_CHARSET_FIXED=1
SP_ENCODING=<i>encoding</i></b></tt>.
(Note that XML files specify their encoding with the XML declaration
<tt><b>&lt;?xml version="1.0" encoding="<i>encoding"</i> ?&gt;</b></tt>
at the top of the file.)
</para><para>
The above conversion options cannot be changed.  If you desire different
conversion options, you should invoke 
<b><b>sgml2xml</b></b>(1) manually, and then pass
the results of that conversion to this program.
</para></TPitem></TP><SS>RETRIEVAL OPTIONS</SS><TP><TPtag><tt><b>--catalogs </b></tt><i>catalog-files</i>, <tt><b>-C </b></tt><i>catalog-files</i></TPtag><TPitem><para>
Specify additional XML catalogs to use for resolving Formal
Public Identifiers or URIs.  SGML catalogs are not supported.
</para><para>
These catalogs are <i>not</i> used for parsing an SGML
document under the <tt><b>--sgml</b></tt> option.  Use
the environment variable <b>SGML_CATALOG_FILES</b> instead 
to specify the catalogs for parsing the SGML document.
</para></TPitem></TP><TP><TPtag><tt><b>--network</b></tt>, <tt><b>-N</b></tt></TPtag><TPitem><para>
<b>db2x_xsltproc</b> will normally refuse to load
external resources from the network, for security reasons.  
If you do want to load from the network, set this option.
</para><para>
Usually you want to have installed locally the relevent DTDs and other
files, and set up catalogs for them, rather than load them automatically
from the network.
</para></TPitem></TP><SS>STYLESHEET OPTIONS</SS><TP><TPtag><tt><b>--stylesheet </b></tt><i>file</i>, <tt><b>-s </b></tt><i>file</i></TPtag><TPitem><para>
Specify the filename (or URI) of the stylesheet to use.  
The special values <tt>man</tt> and <tt>texi</tt> 
are accepted as abbreviations, to specify that
<i>xml-document</i> is in DocBook and
should be converted to man pages or Texinfo (respectively).
</para></TPitem></TP><TP><TPtag><tt><b>--param </b></tt><i>name</i><tt><b>=</b></tt><i>expr</i>, <tt><b>-p </b></tt><i>name</i><tt><b>=</b></tt><i>expr</i></TPtag><TPitem><para>
Add or modify a parameter to the stylesheet.
<i>name</i> is a XSLT parameter name, and
<i>expr</i> is an XPath expression that evaluates to
the desired value for the parameter.  (This means that strings must be
quoted, <i>in addition</i> to the usual quoting of shell
arguments; use <tt><b>--string-param</b></tt> to avoid this.)
</para></TPitem></TP><TP><TPtag><tt><b>--string-param </b></tt><i>name</i><tt><b>=</b></tt><i>string</i>, <tt><b>-g </b></tt><i>name</i><tt><b>=</b></tt><i>string</i></TPtag><TPitem><para>
Add or modify a string-valued parameter to the stylesheet.
</para><para>
The string must be encoded in UTF-8 (regardless of the locale 
character encoding).
</para></TPitem></TP><SS>DEBUGGING AND PROFILING</SS><TP><TPtag><tt><b>--debug</b></tt>, <tt><b>-d</b></tt></TPtag><TPitem><para>
Display, to standard error, logs of what is happening during the 
XSL transformation.
</para></TPitem></TP><TP><TPtag><tt><b>--nesting-limit </b></tt><i>n</i>, <tt><b>-D </b></tt><i>n</i></TPtag><TPitem><para>
Change the maximum number of nested calls to XSL templates, used to
detect potential infinite loops.  
If not specified, the limit is 500 (libxslt’s default).
</para></TPitem></TP><TP><TPtag><tt><b>--profile</b></tt>, <tt><b>-P</b></tt></TPtag><TPitem><para>
Display profile information: the total number of calls to each template
in the stylesheet and the time taken for each.  This information is
output to standard error.
</para></TPitem></TP><TP><TPtag><tt><b>--xslt-processor </b></tt><i>processor</i>, <tt><b>-X </b></tt><i>processor</i></TPtag><TPitem><para>
Select the underlying XSLT processor used.  The possible choices for
<i>processor</i> are: <tt>libxslt</tt>, <tt>saxon</tt>, <tt>xalan-j</tt>.
</para><para>
The default processor is whatever was set when docbook2X was built.
libxslt is recommended (because it is lean and fast),
but SAXON is much more robust and would be more helpful when
debugging stylesheets.
</para><para>
All the processors have XML catalogs support enabled.
(docbook2X requires it.)
But note that not all the options above work with processors
other than the libxslt one.
</para></TPitem></TP><SH>ENVIRONMENT</SH><TP><TPtag><b>XML_CATALOG_FILES</b></TPtag><TPitem><para>Specify XML Catalogs.
If not specified, the standard catalog
(<tt><i>/etc/xml/catalog</i></tt>) is loaded, if available.
</para></TPitem></TP><TP><TPtag><b>DB2X_XSLT_PROCESSOR</b></TPtag><TPitem><para>Specify the XSLT processor to use.
The effect is the same as the <tt><b>--xslt-processor</b></tt>
option.  The primary use of this variable is to allow you to quickly 
test different XSLT processors without having to add 
<tt><b>--xslt-processor</b></tt> to every script or make file in 
your documentation build system.
</para></TPitem></TP><SH>CONFORMING TO</SH><para>
<ulink url="http://www.w3.org/TR/xslt">XML Stylesheet Language – Transformations (XSLT), version
1.0</ulink>, a W3C Recommendation.
</para><SH>NOTES</SH><para>
In its earlier versions (&lt; 0.8.4),
docbook2X required XSLT extensions to run, and
<b>db2x_xsltproc</b> was a special libxslt-based processor that had these
extensions compiled-in. When the requirement for XSLT extensions
was dropped, <b>db2x_xsltproc</b> became a Perl script which translates
the options to <b>db2x_xsltproc</b> to conform to the format accepted by
the stock 
<b><b>xsltproc</b></b>(1) which comes with libxslt.
</para><para>The prime reason for the existence of this script
is backward compatibility with any scripts
or make files that invoke docbook2X.  However,
it also became easy to add in support for invoking
other XSLT processors with a unified command-line interface.
Indeed, there is nothing special in this script to docbook2X, 
or even to DocBook, and it may be used for running other sorts of
stylesheets if you desire.  Certainly the author prefers using this
command, because its invocation format is sane and is easy to 
use.  (e.g. no typing long class names for the Java-based processors!)
</para><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para>
The docbook2X manual (in Texinfo or HTML format) fully describes
how to convert DocBook to man pages and Texinfo.
</para><para>
Up-to-date information about this program
can be found 
at the 
<ulink url="http://docbook2x.sourceforge.net/">docbook2X Web site</ulink>.
</para><para>
You may wish to consult the documentation that comes
with libxslt, SAXON, or Xalan.  The W3C XSLT 1.0 specification
would be useful for writing stylesheets.
</para></manpage><manpage sect="1" h1="sgml2xml-isoent" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="sgml2xml-isoent" preprocessors=""><SH>NAME</SH><refnameline><refname><b>sgml2xml-isoent</b></refname><refpurpose>Convert SGML to XML with support for ISO
entities</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>sgml2xml-isoent</b> </TPtag><TPitem><para> [<i>sgml-document</i>]</para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>sgml2xml-isoent</b> converts an SGML document to XML,
with support for the ISO entities.
This is done by using 
<b><b>sgml2xml</b></b>(1) from the
SP package (or 
<b><b>osx</b></b>(1) from the OpenSP package),
and the declaration for the XML version of the ISO entities
is added to the output.
This means that the output of this conversion
should work as-is with any XML tool.
</para><para>
This program is often used for processing SGML DocBook documents
with XML-based tools.  In particular, <b><b>db2x_xsltproc</b></b>(1)
calls this program as part of its <tt><b>--sgml</b></tt>
option.  On the other hand, it is probably not helpful for 
migrating a source SGML text file to XML, since the conversion 
mangles the original formatting.
</para><para>
Since the XML version of the ISO entities 
are referred to directly, not via a DTD, this tool 
also works with document types other than DocBook.
</para><SH>NOTES</SH><para>
The ISO entities are referred using the public identifiers 
<tt>ISO 8879:1986//ENTITIES//<i>…</i>//EN//XML</tt>.  
The catalogs used when parsing the converted document should 
resolve these entities to the appropriate place (on the local
filesystem).  If the entities are not resolved in the catalog, 
then the fallback is to get the entity files
from the <tt>http://www.docbook.org/</tt> Web site.
</para><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para><SH>SEE ALSO</SH><para>

<b><b>sgml2xml</b></b>(1), 
<b><b>osx</b></b>(1)
</para></manpage><manpage sect="1" h1="utf8trans" h2="1" h3="3 March 2007" h4="docbook2X 0.8.8" h5="docbook2X" title="utf8trans" preprocessors=""><SH>NAME</SH><refnameline><refname><b>utf8trans</b></refname><refpurpose>Transliterate UTF-8 characters according to a table</refpurpose></refnameline><SH>SYNOPSIS</SH><nh><TPauto align="l"><TPtag><b>utf8trans</b> </TPtag><TPitem><para>  <i>charmap</i>  [<i>file</i>]…</para></TPitem></TPauto></nh><SH>DESCRIPTION</SH><para>
<b>utf8trans</b> transliterates characters in the specified files (or 
standard input, if they are not specified) and writes the output to
standard output.  All input and output is in the UTF-8 encoding.  
</para><para>
This program is usually used to render characters in Unicode text files
as some markup escapes or ASCII transliterations.
(It is not intended for general charset conversions.)
It provides functionality similar to the character maps
in XSLT 2.0 (XML Stylesheet Language – Transformations, version 2.0).
</para><SH>OPTIONS</SH><TP><TPtag><tt><b>-m</b></tt>, <tt><b>--modify</b></tt></TPtag><TPitem><para>
        Modifies the given files in-place with their transliterated output,
        instead of sending it to standard output.
      </para><para>
        This option is useful for efficient transliteration of many files
        at once.
      </para></TPitem></TP><TP><TPtag><tt><b>--help</b></tt></TPtag><TPitem><para>Show brief usage information and exit.</para></TPitem></TP><TP><TPtag><tt><b>--version</b></tt></TPtag><TPitem><para>Show version and exit.</para></TPitem></TP><SH>USAGE</SH><para>
The translation is done according to the rules in the ‘character
map’, named in the file <i>charmap</i>.  It
has the following format:

<TP indent="0.4i"><TPtag>1.</TPtag><TPitem><para>Each line represents a translation entry, except for
blank lines and comment lines, which are ignored.</para></TPitem></TP><TP indent="0.4i"><TPtag>2.</TPtag><TPitem><para>Any amount of whitespace (space or tab) may precede 
the start of an entry.</para></TPitem></TP><TP indent="0.4i"><TPtag>3.</TPtag><TPitem><para>Comment lines begin with <tt>#</tt>.
Everything on the same line is ignored.</para></TPitem></TP><TP indent="0.4i"><TPtag>4.</TPtag><TPitem><para>Each entry consists of the Unicode codepoint of the
character to translate, in hexadecimal, followed
<i>one</i> space or tab, followed by the translation
string, up to the end of the line.</para></TPitem></TP><TP indent="0.4i"><TPtag>5.</TPtag><TPitem><para>The translation string is taken literally, including any
leading and trailing spaces (except the delimeter between the codepoint
and the translation string), and all types of characters.  The newline
at the end is not included.  </para></TPitem></TP>
</para><para>
The above format is intended to be restrictive, to keep
<b>utf8trans</b> simple.  But if a XML-based format is desired,
there is a <tt><i>xmlcharmap2utf8trans</i></tt> script that 
comes with the docbook2X distribution, that converts character
maps in XSLT 2.0 format to the <b>utf8trans</b> format.
</para><SH>LIMITATIONS</SH><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
<b>utf8trans</b> does not work with binary files, because malformed
UTF-8 sequences in the input are substituted with
U+FFFD characters.  However, null characters in the input
are handled correctly. This limitation may be removed in the future.
</para></TPitem></TP><TP indent="0.2i"><TPtag>•</TPtag><TPitem><para>
There is no way to include a newline or null in the substitution string.
</para></TPitem></TP><SH>AUTHOR</SH><para>
Steve Cheng &lt;<tt>stevecheng@users.sourceforge.net</tt>&gt;.
</para></manpage></manpageset>
