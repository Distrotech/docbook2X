\input texinfo
@setfilename docbook2texi-xslt.info
@documentencoding us-ascii
@settitle docbook2X Texinfo Stylesheets Reference
@dircategory Document Preparation
@direntry
* docbook2X Texinfo Stylesheets Reference: (docbook2texi-xslt).
                                                  .
@end direntry

@node Top, Guide to the stylesheet reference, , (dir)
@top docbook2X Texinfo Stylesheets Reference

@menu
* docbook2X Texinfo Stylesheets Reference: Guide to the stylesheet reference.
* common/l10n::
* common/messages::
* common/labels::
* common/titles::
* param::                       Stylesheet parameters
* texifile::                    Handle multiple files in Texinfo
* texinode::                    Nodal elements and their node names
* texinode-base::               Low-level Texinfo node handling
* chunk::                       Output the preamble
* autotoc::                     Texinfo menus and directory entries
* menudescrip::                 Texinfo menu descriptions
* index::                       Texinfo Indices
* sectioning::                  Mapping of DocBook sections into Texinfo
                                  sections
* division::                    DocBook divisions
* sections::                    DocBook sectioning elements
* refentry::                    refentry markup
* admon::                       Admonitions
* block::                       Block-level objects
* caption::                     Captions (really headings)
* formal::                      DocBook formal objects
* synop::                       Synopses
* verbatim::                    Verbatim environments
* footnote::                    Footnotes
* force-inline::                Process only inline content
* inline::                      Inline markup
* math::                        Equations
* qandaset::                    Question-and-answer markup
* table::                       Table support
* xref::                        Handle cross references and links
* glossary::                    Glossaries
* lists::                       All sorts of lists
* callout::                     Call-outs
* graphics::                    Graphics and media objects
* biblio::                      Bibliographies
* info::                        The *info wrappers
* keywords::                    Keyword and subject meta-data
* toc::                         User-defined table of contents (toc markup)
* beginpage::                   beginpage element
* pi::                          Handle processing instructions
* docbook::                     Texinfo XSLT stylesheets driver

@detailmenu
--- The Detailed Node Listing ---

common/l10n

* [P] localization-file::       (URI of) XML document containing
                                  localization data
* [V] l10n-data::               XML element node containing
                                  localization-data
* [P] default-document-language::   Assumed language of the input document
                                      when it is not specified in the source
* [T] l10n-match-language::     Determine the language to translate to
* [T] l10n-xml-language::       Determine the language of the given XML
                                  fragment
* [T] l10n-xml-actual-language::   Undocumented
* [M] l10n-substitution::       Output localized text, substituting
                                  parameters if necessary
* [t l10n-substitution] text(): [t l10n-substitution] text[].

common/messages

* [P] message-language::        Undocumented
* [T] l10n-message-choose-language::   Undocumented
* [t l10n-substitution] l;a1::
* [t l10n-substitution] l;a2::
* [t l10n-substitution] l;a3::
* [t l10n-substitution] l;a4::
* [t l10n-substitution] l;a5::
* [T] user-message::            Emit a user message
* [T] print-node-line-number::  Display file name and line number of a node
* [T] print-node-xpath::        Display the path of a node
* [t print-node-xpath] text(): [t print-node-xpath] text[].
* [t print-node-xpath] @@*::
* [t print-node-xpath] *[@@id != '']::
* [t print-node-xpath] *::
* [t print-node-xpath] /::

common/labels

* [M] for-label::               Provides access to element labels
* [t for-label] *[@@label!='']::
* [t for-label] *::
* [t for-label] qandaentry::
* [t for-label] question::
* [t for-label] answer::
* [t label] *::
* [t label] text(): [t label] text[].

common/titles

* [M] for-title::               Provides access to element titles
* [t title] title::
* [t title] *::
* [t title] text(): [t title] text[].
* [t for-title] set::
* [t for-title] *::
* [t for-title] book::
* [t for-title] part::
* [t for-title] preface|chapter|appendix::
* [t for-title] partintro::
* [t for-title] dedication::
* [t for-title] colophon::
* [t for-title] article::
* [t for-title] reference::
* [t for-title] refentry::
* [t for-title] refsynopsisdiv::
* [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect::
* [t for-title] bibliography::
* [t for-title] glossary::
* [t for-title] index::
* [t for-title] figure|table|example|equation::
* [t for-title] qandaset|qandadiv::
* [t for-title] abstract::
* [t for-title] caution|tip|warning|important|note::
* [t no-anchors] *::
* [t no-anchors] footnote::
* [t no-anchors] anchor::
* [t no-anchors] ulink::
* [t no-anchors] link::
* [t no-anchors] olink::
* [t no-anchors] indexterm::
* [t no-anchors] xref::

param

* [P] user-message-prefix::     Undocumented
* [P] captions-display-as-headings::   Use heading markup for minor
                                         captions?
* [P] links-use-pxref::         Translate link using @@pxref
* [P] explicit-node-names::     Insist on manually constructed Texinfo node
                                  names
* [P] show-comments::           Display comment elements?
* [P] funcsynopsis-decoration:: Decorate elements of a FuncSynopsis?
* [P] function-parens::         Generate parentheses after a function?
* [P] refentry-display-name::   Output NAME header before 'RefName'(s)?
* [P] manvolnum-in-xref::       Output manvolnum as part of refentry
                                  cross-reference?
* [P] prefer-textobjects::      Prefer textobject over imageobject? 
* [P] semantic-decorations::    Use Texinfo semantic inline markup?
* [P] custom-localization-file::   URI of XML document containing custom
                                     localization data
* [P] custom-l10n-data::        XML document containing custom localization
                                  data
* [P] author-othername-in-middle::   Is othername in author a middle name?
* [P] output-file::             Name of the Info file
* [P] directory-category::      The categorization of the document in the
                                  Info directory
* [P] directory-description::   The description of the document in the Info
                                  directory
* [P] index-category::          The Texinfo index to use
* [P] qanda-defaultlabel::      Sets the default for defaultlabel on
                                  QandASet.
* [P] qandaset-generate-toc::   Is a Table of Contents created for
                                  QandASets?

texifile

* [t texinfo-file-name] *::
* [t texinfo-file-name] text(): [t texinfo-file-name] text[].
* [t for-texinfo-file-name] set/book::
* [t for-texinfo-file-name] /refentry::
* [t for-texinfo-file-name] /*::
* [t for-texinfo-file-name] /set/book//*::
* [t for-texinfo-file-name] node(): [t for-texinfo-file-name] node[].
* [T] get-texinfo-file-name::   Find the file that contains the result

texinode

* [M] is-texinfo-node::         Determine if given element is a Texinfo
                                  node
* [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article::
* [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect::
* [t is-texinfo-node] refentry::
* [t is-texinfo-node] *::
* [t is-texinfo-node] part::
* [t is-texinfo-node] partintro|partintro//*::
* [t is-texinfo-node] book::
* [t is-texinfo-node] index|bibliography|glossary::
* [M] for-texinfo-node-name::   Return a suggested nodename
* [t for-texinfo-node-name] *[@@xreflabel]::
* [t for-texinfo-node-name] *[child;;title]::
* [t for-texinfo-node-name] *::
* [t for-texinfo-node-name] book|/*::
* [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3::
* [t for-texinfo-node-name] article::
* [t for-texinfo-node-name] refentry::
* [t for-texinfo-node-name] part::
* [t for-texinfo-node-name] varlistentry::
* [t for-texinfo-node-name] index::
* [t is-texinfo-top-node] book|/*::
* [t is-texinfo-top-node] *::
* [t texinfo-node-name] *::
* [t texinfo-node-name] text(): [t texinfo-node-name] text[].

texinode-base

* [T] make-nodenamemap::        Undocumented
* [t nodenamemap] *::
* [t nodenamemap] text(): [t nodenamemap] text[].
* [T] make-texinfo-node::       Output node element
* [T] make-texinfo-nontop-node::   Undocumented
* [T] make-texinfo-top-node::   Undocumented
* [T] make-texinfo-top-node-firstchild::   Undocumented

chunk

* [t] /::
* [M] top-chunk::               Process a top-level chunk
* [t top-chunk] *::

autotoc

* [M] texinfo-menu::            Make Texinfo menus
* [V] make-detailed-menus::     Undocumented
* [t texinfo-menu] *::
* [t texinfo-menu] book|/*::
* [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*::
* [t texinfo-detail-menu-entry] book/part::
* [t texinfo-detail-menu-entry] *::
* [t texinfo-menu-entry] part::
* [T] make-texinfo-menu-entry:: Undocumented
* [T] make-texinfo-directory::  Make a Texinfo directory entry
* [t for-menu-title] node(): [t for-menu-title] node[].

menudescrip

* [M] for-menu-description::    Return description for Texinfo node
* [t for-menu-description] refentry::
* [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book::
* [t for-menu-description] *::
* [T] get-texinfo-directory-description::   Undocumented
* [M] for-directory-category::  Return Info directory category
* [T] get-texinfo-directory-category::   Undocumented
* [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry::
* [t for-directory-category] *::

index

* [t] index::
* [t] indexdiv::
* [t] indexterm::
* [t] primary::
* [t] secondary|tertiary::
* [t] see|seealso::
* [t] indexentry::
* [t] primaryie|secondaryie|tertiaryie|seeie|seealsoie::

sectioning

* [T] get-texinfo-section-level::   Give Texinfo structuring command for
                                      given section level 
* [T] make-texinfo-section::    Make Texinfo section
* [T] section::                 Standard template for section structures

division

* [t top-chunk] set::
* [t] book::
* [t] part::
* [t] partintro::

sections

* [t] sect1|sect2|sect3|sect4|sect5|simplesect|section::
* [t] bridgehead::
* [t] title::
* [t] titleabbrev::
* [t] subtitle::

refentry

* [t] reference::
* [t] refentry::
* [t] refmeta::
* [t] manvolnum::
* [t no-inline-markup] manvolnum::
* [t] refmiscinfo::
* [t] refentrytitle::
* [t] refnamediv::
* [t] refname::
* [t] refpurpose::
* [t] refdescriptor::
* [t] refclass::
* [t] refsynopsisdiv::
* [t] refsect1|refsect2|refsect3::

admon

* [T] admonition-title::        Undocumented
* [t] note|important|warning|caution|tip::

block

* [T] block-object::            Undocumented
* [t] para|simpara::
* [t] formalpara::
* [t] formalpara/title::
* [t] formalpara/para::
* [t] blockquote::
* [t] blockquote/title::
* [t] attribution::
* [t blockquote-attribution] attribution::
* [t] epigraph::
* [t] sidebar::
* [t] abstract::
* [t] msgset::
* [t] msgentry::
* [t] simplemsgentry::
* [t] msg::
* [t] msgmain::
* [t] msgmain/title::
* [t] msgsub::
* [t] msgsub/title::
* [t] msgrel::
* [t] msgrel/title::
* [t] msgtext::
* [t] msginfo::
* [t] msglevel|msgorig|msgaud::
* [t] msgexplan::
* [t] msgexplan/title::
* [t] revhistory::
* [t] revhistory/revision::
* [t] revision/revnumber::
* [t] revision/date::
* [t] revision/authorinitials::
* [t] revision/authorinitials[1]::
* [t] revision/revremark::
* [t] revision/revdescription::
* [t] ackno::

caption

* [T] make-caption::            Render as a `caption'

formal

* [T] formal-object::           Undocumented
* [T] formal-object-title::     Undocumented
* [T] informal-object::         Undocumented
* [T] semiformal-object::       Undocumented
* [t] figure|table|example::
* [t] equation::
* [t] informalfigure::
* [t] informalexample::
* [t] informaltable::
* [t] informalequation::

synop

* [M] no-inline-markup::        Plain text synopses
* [t] synopsis::
* [t no-inline-markup] *::
* [t no-inline-markup] text(): [t no-inline-markup] text[].
* [t] cmdsynopsis::
* [t cmdsynopsis] *::
* [t cmdsynopsis] sbr::
* [t cmdsynopsis] command::
* [t cmdsynopsis] group|arg::
* [t cmdsynopsis] group/*::
* [t cmdsynopsis] group/group::
* [t cmdsynopsis] group/option::
* [t cmdsynopsis] group/arg::
* [t cmdsynopsis] synopfragment|synopfragmentref::
* [t] funcsynopsis::
* [t funcsynopsis] *::
* [t funcsynopsis] funcsynopsisinfo::
* [T] funcprototype::           Undocumented
* [t funcsynopsis] modifier::
* [t funcsynopsis] funcdef::
* [t funcsynopsis] function::
* [t funcsynopsis] void::
* [t funcsynopsis] varargs::
* [t funcsynopsis] paramdef::
* [t funcsynopsis] paramdef/parameter::
* [t funcsynopsis] funcparams::

verbatim

* [t] literallayout[@@class='monospaced']::
* [t] literallayout::
* [t] programlisting|screen::
* [t] address::

footnote

* [t] footnote::
* [t] footnoteref::

force-inline

* [M] coerce-into-inline::      Process only inline content
* [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset::
* [t coerce-into-inline] para|simpara::
* [t coerce-into-inline] *|text(): [t coerce-into-inline] *|text[].

inline

* [T] inline-plain::            Undocumented
* [T] inline-monospace::        Undocumented
* [T] inline-bold::             Undocumented
* [T] inline-italic::           Undocumented
* [T] inline-roman::            Undocumented
* [T] inline-superscript::      Undocumented
* [T] inline-subscript::        Undocumented
* [T] inline-markup-emph::      Undocumented
* [T] inline-markup-code::      Undocumented
* [T] inline-markup-samp::      Undocumented
* [T] inline-markup-cite::      Undocumented
* [T] inline-markup-email::     Undocumented
* [T] inline-markup-dfn::       Undocumented
* [T] inline-markup-env::       Undocumented
* [T] inline-markup-file::      Undocumented
* [T] inline-markup-sc::        Undocumented
* [T] inline-markup-acronym::   Undocumented
* [T] inline-markup-strong::    Undocumented
* [T] inline-markup-key::       Undocumented
* [T] inline-markup-kbd::       Undocumented
* [T] inline-markup-var::       Undocumented
* [t] personname::
* [t] author|editor|othercredit|authorinitials::
* [t] accel::
* [t] action::
* [t] application::
* [t] classname::
* [t] exceptionname::
* [t] interfacename::
* [t] methodname::
* [t] command::
* [t] computeroutput::
* [t] constant::
* [t] database::
* [t] errorcode::
* [t] errorname::
* [t] errortype::
* [t] errortext::
* [t] envar::
* [t] filename::
* [t] refentrytitle/function::
* [t] function::
* [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu::
* [t] hardware::
* [t] interface::
* [t] interfacedefinition::
* [t] keycap::
* [t] keycode::
* [t] keysym::
* [t] literal::
* [t] medialabel::
* [t] shortcut::
* [t] mousebutton::
* [t] option::
* [t] parameter::
* [t] property::
* [t] prompt::
* [t] replaceable::
* [t] returnvalue::
* [t] structfield::
* [t] structname::
* [t] symbol::
* [t] systemitem::
* [t] token::
* [t] type::
* [t] userinput::
* [t] abbrev::
* [t] acronym::
* [t] citerefentry::
* [t] citetitle::
* [t] code::
* [t] emphasis[@@role='strong' or @@role='bold' or parent;;emphasis]::
* [t] emphasis::
* [t] foreignphrase::
* [t] markup::
* [t] phrase::
* [t] quote::
* [t] varname::
* [t] wordasword::
* [t] lineannotation::
* [t] superscript::
* [t] subscript::
* [t] trademark::
* [t] firstterm::
* [t] glossterm::
* [t] sgmltag::
* [T] format-sgmltag::          Undocumented
* [t] email::
* [t] keycombo::
* [t] menuchoice::
* [T] format-menuchoice::       Undocumented
* [t] optional::
* [t] citation::
* [t] comment|remark::
* [t] productname|productnumber::
* [t] pob|street|city|state|postcode|country|phone|fax|otheraddr::
* [t] firstname|surname|lineage|othername|honorific::

math

* [t] inlineequation::
* [t] alt::

qandaset

* [t] question|answer::
* [t] qandaentry::
* [t] qandaset|qandadiv::
* [t] label::

table

* [t] tgroup::
* [t] colspec::
* [t] spanspec::
* [t] thead|tfoot|tbody::
* [t] thead/colspec::
* [t] tfoot/colspec::
* [t] row::
* [t] entry::
* [T] get-proportional-colwidth::   Get the proportional width as specified
                                      in the given colspec 

xref

* [T] anchor::                  Undocumented
* [t] anchor::
* [T] check-xref::              Undocumented
* [t] xref::
* [t] link::
* [t] ulink::
* [t] olink::
* [M] xref-to::                 Give cross-reference markup
* [t xref-to] *::
* [t xref-to] co::

glossary

* [t] glossary::
* [t] glosslist::
* [t] glossdiv::
* [t] glossentry::
* [t] glossentry/glossterm::
* [t] glossentry/acronym::
* [t] glossentry/abbrev::
* [t] glossentry/revhistory::
* [t] glossentry/glossdef::
* [t] glossentry/glosssee|glossseealso::
* [t glosssee-xref] glossentry::
* [t glosssee-xref] glossentry/glossterm[1]::
* [t glosssee-xref] *::

lists

* [t] itemizedlist::
* [t] orderedlist::
* [t] variablelist::
* [t] listitem::
* [t] varlistentry::
* [t] varlistentry/term::
* [t] varlistentry/listitem::
* [t] simplelist[@@type='horiz']::
* [t] simplelist::
* [t] simplelist[@@type='inline']::
* [T] simplelist-horiz::        Undocumented
* [T] simplelist-horiz-row::    Undocumented
* [T] simplelist-vert::         Undocumented
* [T] simplelist-vert-row::     Undocumented
* [t] member::
* [t] simplelist[@@type='inline']/member::
* [t] simplelist[@@type='inline']/member[1]::
* [t] procedure::
* [t] substeps::
* [t] step::
* [t] segmentedlist::
* [t] segtitle::
* [t segtitle-in-seg] segtitle::
* [t] seglistitem::
* [t] seg::

callout

* [t] programlistingco|screenco::
* [t] areaspec|areaset|area::
* [t no-inline-markup] co::
* [t] co::
* [t co] co::
* [T] callout-bug::             Undocumented
* [t] coref::
* [T] check-co::                Undocumented
* [t] calloutlist::
* [t] callout::
* [T] callout-process-arearefs::   Undocumented
* [T] callout-arearef::         Undocumented

graphics

* [t] screenshot::
* [t] screeninfo::
* [T] imagedata::               Undocumented
* [t] graphic::
* [t] inlinegraphic::
* [T] select-mediaobject::      Undocumented
* [t] mediaobject::
* [t] inlinemediaobject::
* [t] objectinfo::
* [t] imageobject::
* [t] textobject::
* [t] caption::

biblio

* [t] bibliography::
* [T] biblio-item-separator::   Undocumented
* [t] bibliodiv::
* [t] biblioentry::
* [t] bibliomixed::
* [t bibliography] *::
* [t bibliography] abbrev::
* [t bibliography] abstract::
* [t bibliography] address::
* [t bibliography] affiliation::
* [t bibliography] shortaffil::
* [t bibliography] jobtitle::
* [t bibliography] artheader::
* [t bibliography] artpagenums::
* [t bibliography] author::
* [t bibliography] authorblurb::
* [t bibliography] authorgroup::
* [t bibliography] authorinitials::
* [t bibliography] bibliomisc::
* [t bibliography] bibliomset::
* [t bibliography] biblioset::
* [t bibliography] biblioset/title|biblioset/citetitle::
* [t bibliography] bookbiblio::
* [t bibliography] citetitle::
* [t bibliography] collab::
* [t bibliography] collabname::
* [t bibliography] confgroup::
* [t bibliography] confdates::
* [t bibliography] conftitle::
* [t bibliography] confnum::
* [t bibliography] confsponsor::
* [t bibliography] contractnum::
* [t bibliography] contractsponsor::
* [t bibliography] contrib::
* [t bibliography] copyright::
* [t bibliography] year::
* [t bibliography] year[position()=last()]: [t bibliography] year[position[]=last[]].
* [t bibliography] holder::
* [t bibliography] corpauthor::
* [t bibliography] corpname::
* [t bibliography] date::
* [t bibliography] edition::
* [t bibliography] editor::
* [t bibliography] personname::
* [t bibliography] firstname::
* [t bibliography] honorific::
* [t bibliography] indexterm::
* [t bibliography] invpartnumber::
* [t bibliography] isbn::
* [t bibliography] issn::
* [t bibliography] issuenum::
* [t bibliography] lineage::
* [t bibliography] orgname::
* [t bibliography] orgdiv::
* [t bibliography] othercredit::
* [t bibliography] othername::
* [t bibliography] pagenums::
* [t bibliography] printhistory::
* [t bibliography] productname::
* [t bibliography] productnumber::
* [t bibliography] pubdate::
* [t bibliography] publisher::
* [t bibliography] publishername::
* [t bibliography] pubsnumber::
* [t bibliography] releaseinfo::
* [t bibliography] revhistory::
* [t bibliography] seriesinfo::
* [t bibliography] seriesvolnums::
* [t bibliography] subtitle::
* [t bibliography] surname::
* [t bibliography] title::
* [t bibliography] titleabbrev::
* [t bibliography] volumenum::
* [t bibliomixed] *::
* [t bibliomixed] abbrev::
* [t bibliomixed] abstract::
* [t bibliomixed] address::
* [t bibliomixed] affiliation::
* [t bibliomixed] artpagenums::
* [t bibliomixed] author::
* [t bibliomixed] authorblurb::
* [t bibliomixed] authorgroup::
* [t bibliomixed] authorinitials::
* [t bibliomixed] bibliomisc::
* [t bibliomixed] bibliomset::
* [t bibliomixed] bibliomset/title|bibliomset/citetitle::
* [t bibliomixed] biblioset::
* [t bibliomixed] citetitle::
* [t bibliomixed] collab::
* [t bibliomixed] confgroup::
* [t bibliomixed] contractnum::
* [t bibliomixed] contractsponsor::
* [t bibliomixed] contrib::
* [t bibliomixed] copyright::
* [t bibliomixed] corpauthor::
* [t bibliomixed] corpname::
* [t bibliomixed] date::
* [t bibliomixed] edition::
* [t bibliomixed] editor::
* [t bibliomixed] firstname::
* [t bibliomixed] honorific::
* [t bibliomixed] indexterm::
* [t bibliomixed] invpartnumber::
* [t bibliomixed] isbn::
* [t bibliomixed] issn::
* [t bibliomixed] issuenum::
* [t bibliomixed] lineage::
* [t bibliomixed] orgname::
* [t bibliomixed] othercredit::
* [t bibliomixed] othername::
* [t bibliomixed] pagenums::
* [t bibliomixed] printhistory::
* [t bibliomixed] productname::
* [t bibliomixed] productnumber::
* [t bibliomixed] pubdate::
* [t bibliomixed] publisher::
* [t bibliomixed] publishername::
* [t bibliomixed] pubsnumber::
* [t bibliomixed] releaseinfo::
* [t bibliomixed] revhistory::
* [t bibliomixed] seriesvolnums::
* [t bibliomixed] subtitle::
* [t bibliomixed] surname::
* [t bibliomixed] title::
* [t bibliomixed] titleabbrev::
* [t bibliomixed] volumenum::

info

* [t] corpauthor::
* [t] jobtitle::
* [t] orgname::
* [t] orgdiv::
* [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo::
* [t] bookinfo|setinfo|seriesinfo::
* [t] partinfo::
* [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo::
* [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo::
* [t] objectinfo: [t] objectinfo <1>.
* [t info-wrapper] node(): [t info-wrapper] node[].

keywords

* [t] keywordset::
* [t] subjectset::

toc

* [t toc] *::
* [t] toc::
* [t] tocpart|tocchap|tocfront|tocback|tocentry::
* [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5::
* [t] lot|lotentry::

beginpage

* [t] beginpage::

pi

* [t] processing-instruction(): [t] processing-instruction[].

docbook

* [t] *::
* [t] text(): [t] text[].

@end detailmenu
@end menu

@node Guide to the stylesheet reference, common/l10n, Top, Top
@chapter docbook2X Texinfo Stylesheets Reference

For the most part, this reference assumes knowledge of XSLT.
But if you are not familiar with XSLT, you can still look
at the page of stylesheet parameters; they are the commonly
used options to the stylesheets that may be directly 
set from the command line.  Also take a look at the 
introductory text to each XSL file, which gives some
general advice to tweaking the output of the stylesheets.

In the lists of stylesheet items, the following symbols are 
prefixed before each item to indicate their type:

@table @asis

@item [P]
A global parameter.

The synopsis for the parameter 
shows its default value.

@item [V]
A global variable.

@item [M]
A template mode.

@item [T]
A named template.

@item [t @var{mode}]
A template with a 
@code{match} attribute,
for the given mode.  If @var{mode}
is omitted, that means the default mode.

These usually have no description; they are just
listed so that you know the template exists.
@end table

@node common/l10n, common/messages, Guide to the stylesheet reference, Top
@chapter common/l10n

@menu
* [P] localization-file::       (URI of) XML document containing
                                  localization data
* [V] l10n-data::               XML element node containing
                                  localization-data
* [P] default-document-language::   Assumed language of the input document
                                      when it is not specified in the source
* [T] l10n-match-language::     Determine the language to translate to
* [T] l10n-xml-language::       Determine the language of the given XML
                                  fragment
* [T] l10n-xml-actual-language::   Undocumented
* [M] l10n-substitution::       Output localized text, substituting
                                  parameters if necessary
* [t l10n-substitution] text(): [t l10n-substitution] text[].
@end menu

@node [P] localization-file, [V] l10n-data, , common/l10n
@section [P] localization-file
@subheading Name

[P] localization-file --- (URI of) XML document containing localization data
@subheading Synopsis

@example
<xsl:param name="localization-file" select="'text/l10n-set.xml'" />
@end example
@subheading Description

This parameter specifies the URI of the localization-set document.
This document, written in XML, describes all the text translations
(and other locale-specific information) used by the stylesheet.

You do not need to change this parameter unless you want to use
custom localization data.

@node [V] l10n-data, [P] default-document-language, [P] localization-file, common/l10n
@section [V] l10n-data
@subheading Name

[V] l10n-data --- XML element node containing localization-data
@subheading Synopsis

@example
<xsl:variable name="l10n-data" select="document($localization-file)/l:localization-set" />
@end example
@subheading Description

This is just @samp{document($localization-file)/l:localization-set}.
There is no need to change this.

@node [P] default-document-language, [T] l10n-match-language, [V] l10n-data, common/l10n
@section [P] default-document-language
@subheading Name

[P] default-document-language --- Assumed language of the input document when it is not specified in the source
@subheading Synopsis

@example
<xsl:param name="default-document-language" select="'en'" />
@end example
@subheading Description

If the source document does not specify what language
it is written in using the @code{lang}
or @code{xml:lang} attribute.
then it is assumed to be in the language this parameter is set
to.  If these attributes are present (and in effect, whenever
the stylesheet needs language information), the language
specified in this parameter is ignored.

You rarely need to change this parameter; 
it is better to change the source document instead,
adding the @code{lang} 
or the @code{xml:lang} attribute.

The format of the value of this parameter is the usual
@samp{@var{language_code}-@var{country_code}}.  For example, @samp{zh-TW}.
The hyphen (@samp{-}) may also be an 
underscore (@samp{_}).

@node [T] l10n-match-language, [T] l10n-xml-language, [P] default-document-language, common/l10n
@section [T] l10n-match-language
@subheading Name

[T] l10n-match-language --- Determine the language to translate to
@subheading Synopsis

@example
<xsl:template name="l10n-match-language">
  <xsl:param name="lang" /></xsl:template>
@end example
@subheading Description

Given a language code @code{lang} 
(usually obtained from 
@code{l10n-xml-language}),
match it with a language code in the localization data file.
The new language code may in fact be the same language code,
or it could be the language code with the country-code part
stripped.  If the localization data file does not contain
the language @code{lang}, then some default
language that does exist is returned.
@subheading Parameters

@table @asis

@item @code{lang}
The original language code.
@end table

@node [T] l10n-xml-language, [T] l10n-xml-actual-language, [T] l10n-match-language, common/l10n
@section [T] l10n-xml-language
@subheading Name

[T] l10n-xml-language --- Determine the language of the given XML fragment
@subheading Synopsis

@example
<xsl:template name="l10n-xml-language">
  <xsl:param name="target" select="." /></xsl:template>
@end example
@subheading Description

Returns the language of the XML content at the given node,
as determined by the @code{lang}
or @code{xml:lang} attribute.

The result is always given in a normalized form:
@samp{@var{language_code}-@var{country_code}}, with the @var{language_code}
and @var{country_code} always in lower case.
The @samp{-@var{country_code}} 
may be missing.

No checking is done to make sure the language code is valid.
@subheading Parameters

@table @asis

@item @code{target}
The (element) node to find out the language for.
Defaults to the context node.
@end table

@node [T] l10n-xml-actual-language, [M] l10n-substitution, [T] l10n-xml-language, common/l10n
@section [T] l10n-xml-actual-language
@subheading Name

[T] l10n-xml-actual-language --- Undocumented
@subheading Synopsis

@example
<xsl:template name="l10n-xml-actual-language">
  <xsl:param name="target" select="." /></xsl:template>
@end example

@node [M] l10n-substitution, [t l10n-substitution] text[], [T] l10n-xml-actual-language, common/l10n
@section [M] l10n-substitution
@subheading Name

[M] l10n-substitution --- Output localized text, substituting parameters if necessary
@subheading Description

A piece of the translated text is processed with this mode
to perform any substitutions of parameters like
chapter numbers, etc.  Text nodes are echoed through in
this mode.

@node [t l10n-substitution] text[], , [M] l10n-substitution, common/l10n
@section [t l10n-substitution] text()
@subheading Name

[t l10n-substitution] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="l10n-substitution" />
@end example

@node common/messages, common/labels, common/l10n, Top
@chapter common/messages

@menu
* [P] message-language::        Undocumented
* [T] l10n-message-choose-language::   Undocumented
* [t l10n-substitution] l;a1::
* [t l10n-substitution] l;a2::
* [t l10n-substitution] l;a3::
* [t l10n-substitution] l;a4::
* [t l10n-substitution] l;a5::
* [T] user-message::            Emit a user message
* [T] print-node-line-number::  Display file name and line number of a node
* [T] print-node-xpath::        Display the path of a node
* [t print-node-xpath] text(): [t print-node-xpath] text[].
* [t print-node-xpath] @@*::
* [t print-node-xpath] *[@@id != '']::
* [t print-node-xpath] *::
* [t print-node-xpath] /::
@end menu

@node [P] message-language, [T] l10n-message-choose-language, , common/messages
@section [P] message-language
@subheading Name

[P] message-language --- Undocumented
@subheading Synopsis

@example
<xsl:param name="message-language" select="'en'" />
@end example

@node [T] l10n-message-choose-language, [t l10n-substitution] l;a1, [P] message-language, common/messages
@section [T] l10n-message-choose-language
@subheading Name

[T] l10n-message-choose-language --- Undocumented
@subheading Synopsis

@example
<xsl:template name="l10n-message-choose-language">
  <xsl:param name="key" />
  <xsl:param name="languages" select="$message-language" /></xsl:template>
@end example

@node [t l10n-substitution] l;a1, [t l10n-substitution] l;a2, [T] l10n-message-choose-language, common/messages
@section [t l10n-substitution] l:a1
@subheading Name

[t l10n-substitution] l:a1
@subheading Synopsis

@example
<xsl:template match="l:a1" mode="l10n-substitution">
  <xsl:param name="arg-1" /></xsl:template>
@end example

@node [t l10n-substitution] l;a2, [t l10n-substitution] l;a3, [t l10n-substitution] l;a1, common/messages
@section [t l10n-substitution] l:a2
@subheading Name

[t l10n-substitution] l:a2
@subheading Synopsis

@example
<xsl:template match="l:a2" mode="l10n-substitution">
  <xsl:param name="arg-2" /></xsl:template>
@end example

@node [t l10n-substitution] l;a3, [t l10n-substitution] l;a4, [t l10n-substitution] l;a2, common/messages
@section [t l10n-substitution] l:a3
@subheading Name

[t l10n-substitution] l:a3
@subheading Synopsis

@example
<xsl:template match="l:a3" mode="l10n-substitution">
  <xsl:param name="arg-3" /></xsl:template>
@end example

@node [t l10n-substitution] l;a4, [t l10n-substitution] l;a5, [t l10n-substitution] l;a3, common/messages
@section [t l10n-substitution] l:a4
@subheading Name

[t l10n-substitution] l:a4
@subheading Synopsis

@example
<xsl:template match="l:a4" mode="l10n-substitution">
  <xsl:param name="arg-4" /></xsl:template>
@end example

@node [t l10n-substitution] l;a5, [T] user-message, [t l10n-substitution] l;a4, common/messages
@section [t l10n-substitution] l:a5
@subheading Name

[t l10n-substitution] l:a5
@subheading Synopsis

@example
<xsl:template match="l:a5" mode="l10n-substitution">
  <xsl:param name="arg-5" /></xsl:template>
@end example

@node [T] user-message, [T] print-node-line-number, [t l10n-substitution] l;a5, common/messages
@section [T] user-message
@subheading Name

[T] user-message --- Emit a user message
@subheading Synopsis

@example
<xsl:template name="user-message">
  <xsl:param name="node" select="." />
  <xsl:param name="trace-node" select="true()" />
  <xsl:param name="arg-1" />
  <xsl:param name="arg-2" />
  <xsl:param name="arg-3" />
  <xsl:param name="arg-4" />
  <xsl:param name="arg-5" />
  <xsl:param name="key" />
  <xsl:param name="content" /></xsl:template>
@end example
@subheading Description

This template is used in place of @code{xsl:message}.
It traces the path of the given node to help in debugging and allows
messages to be localized.
@subheading Parameters

@table @asis

@item @code{node}
The node to get to trace the path to.
Default is the context node.

@item @code{arg}
Additional string argument to message, if any.

@item @code{key}
The standard message text.  If a localization/customization
exists, it is keyed under this text and displayed instead
of the standard message text.
@end table

@node [T] print-node-line-number, [T] print-node-xpath, [T] user-message, common/messages
@section [T] print-node-line-number
@subheading Name

[T] print-node-line-number --- Display file name and line number of a node
@subheading Synopsis

@example
<xsl:template name="print-node-line-number">
  <xsl:param name="node" select="." /></xsl:template>
@end example
@subheading Description

This template displays the file name and 
the line number in that file that contains the given node.
In addition the name of the given node is shown in parentheses
(usually the element name).
The output is suitable for diagnostics to the user.

(``filename'' means the ``filename'' part of the URI of the 
containing entity.)  
@subheading Parameters

@table @asis

@item @code{node}
The node to get to print the information for.
Default is the context node.
@end table

@node [T] print-node-xpath, [t print-node-xpath] text[], [T] print-node-line-number, common/messages
@section [T] print-node-xpath
@subheading Name

[T] print-node-xpath --- Display the path of a node
@subheading Synopsis

@example
<xsl:template name="print-node-xpath">
  <xsl:param name="node" select="." /></xsl:template>
@end example
@subheading Description

This template displays the address of the given node in 
XPath notation, in a compact yet unambiguous form
suitable for diagnostics to the user.

It assumes that ID attributes are named 
@code{id}, and if an element
has an ID defined, then the element will be addressed using
that ID, instead of a long XPath starting from the root.
@subheading Parameters

@table @asis

@item @code{node}
The node to get to trace the path to.
Default is the context node.
@end table

@node [t print-node-xpath] text[], [t print-node-xpath] @@*, [T] print-node-xpath, common/messages
@section [t print-node-xpath] text()
@subheading Name

[t print-node-xpath] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="print-node-xpath" />
@end example

@node [t print-node-xpath] @@*, [t print-node-xpath] *[@@id != ''], [t print-node-xpath] text[], common/messages
@section [t print-node-xpath] @@*
@subheading Name

[t print-node-xpath] @@*
@subheading Synopsis

@example
<xsl:template match="@@*" mode="print-node-xpath" />
@end example

@node [t print-node-xpath] *[@@id != ''], [t print-node-xpath] *, [t print-node-xpath] @@*, common/messages
@section [t print-node-xpath] *[@@id != '']
@subheading Name

[t print-node-xpath] *[@@id != '']
@subheading Synopsis

@example
<xsl:template match="*[@@id != '']" mode="print-node-xpath" />
@end example

@node [t print-node-xpath] *, [t print-node-xpath] /, [t print-node-xpath] *[@@id != ''], common/messages
@section [t print-node-xpath] *
@subheading Name

[t print-node-xpath] *
@subheading Synopsis

@example
<xsl:template match="*" mode="print-node-xpath" />
@end example

@node [t print-node-xpath] /, , [t print-node-xpath] *, common/messages
@section [t print-node-xpath] /
@subheading Name

[t print-node-xpath] /
@subheading Synopsis

@example
<xsl:template match="/" mode="print-node-xpath" />
@end example

@node common/labels, common/titles, common/messages, Top
@chapter common/labels

@menu
* [M] for-label::               Provides access to element labels
* [t for-label] *[@@label!='']::
* [t for-label] *::
* [t for-label] qandaentry::
* [t for-label] question::
* [t for-label] answer::
* [t label] *::
* [t label] text(): [t label] text[].
@end menu

@node [M] for-label, [t for-label] *[@@label!=''], , common/labels
@section [M] for-label
@subheading Name

[M] for-label --- Provides access to element labels
@subheading Description

Processing an element in the
@samp{for-label} mode produces the
element label.

@node [t for-label] *[@@label!=''], [t for-label] *, [M] for-label, common/labels
@section [t for-label] *[@@label!='']
@subheading Name

[t for-label] *[@@label!='']
@subheading Synopsis

@example
<xsl:template match="*[@@label!='']" priority="2.0" mode="for-label" />
@end example

@node [t for-label] *, [t for-label] qandaentry, [t for-label] *[@@label!=''], common/labels
@section [t for-label] *
@subheading Name

[t for-label] *
@subheading Synopsis

@example
<xsl:template match="*" mode="for-label" />
@end example

@node [t for-label] qandaentry, [t for-label] question, [t for-label] *, common/labels
@section [t for-label] qandaentry
@subheading Name

[t for-label] qandaentry
@subheading Synopsis

@example
<xsl:template match="qandaentry" mode="for-label" />
@end example

@node [t for-label] question, [t for-label] answer, [t for-label] qandaentry, common/labels
@section [t for-label] question
@subheading Name

[t for-label] question
@subheading Synopsis

@example
<xsl:template match="question" mode="for-label" />
@end example

@node [t for-label] answer, [t label] *, [t for-label] question, common/labels
@section [t for-label] answer
@subheading Name

[t for-label] answer
@subheading Synopsis

@example
<xsl:template match="answer" mode="for-label" />
@end example

@node [t label] *, [t label] text[], [t for-label] answer, common/labels
@section [t label] *
@subheading Name

[t label] *
@subheading Synopsis

@example
<xsl:template match="*" mode="label">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t label] text[], , [t label] *, common/labels
@section [t label] text()
@subheading Name

[t label] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="label" />
@end example

@node common/titles, param, common/labels, Top
@chapter common/titles

@menu
* [M] for-title::               Provides access to element titles
* [t title] title::
* [t title] *::
* [t title] text(): [t title] text[].
* [t for-title] set::
* [t for-title] *::
* [t for-title] book::
* [t for-title] part::
* [t for-title] preface|chapter|appendix::
* [t for-title] partintro::
* [t for-title] dedication::
* [t for-title] colophon::
* [t for-title] article::
* [t for-title] reference::
* [t for-title] refentry::
* [t for-title] refsynopsisdiv::
* [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect::
* [t for-title] bibliography::
* [t for-title] glossary::
* [t for-title] index::
* [t for-title] figure|table|example|equation::
* [t for-title] qandaset|qandadiv::
* [t for-title] abstract::
* [t for-title] caution|tip|warning|important|note::
* [t no-anchors] *::
* [t no-anchors] footnote::
* [t no-anchors] anchor::
* [t no-anchors] ulink::
* [t no-anchors] link::
* [t no-anchors] olink::
* [t no-anchors] indexterm::
* [t no-anchors] xref::
@end menu

@node [M] for-title, [t title] title, , common/titles
@section [M] for-title
@subheading Name

[M] for-title --- Provides access to element titles
@subheading Description

Processing an element in the
@samp{title} mode produces the
title of the element. This does not include the label.

@node [t title] title, [t title] *, [M] for-title, common/titles
@section [t title] title
@subheading Name

[t title] title
@subheading Synopsis

@example
<xsl:template match="title" mode="title" />
@end example

@node [t title] *, [t title] text[], [t title] title, common/titles
@section [t title] *
@subheading Name

[t title] *
@subheading Synopsis

@example
<xsl:template match="*" mode="title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t title] text[], [t for-title] set, [t title] *, common/titles
@section [t title] text()
@subheading Name

[t title] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="title" />
@end example

@node [t for-title] set, [t for-title] *, [t title] text[], common/titles
@section [t for-title] set
@subheading Name

[t for-title] set
@subheading Synopsis

@example
<xsl:template match="set" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] *, [t for-title] book, [t for-title] set, common/titles
@section [t for-title] *
@subheading Name

[t for-title] *
@subheading Synopsis

@example
<xsl:template match="*" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" />
  <xsl:param name="suppress-error" select="false()" /></xsl:template>
@end example

@node [t for-title] book, [t for-title] part, [t for-title] *, common/titles
@section [t for-title] book
@subheading Name

[t for-title] book
@subheading Synopsis

@example
<xsl:template match="book" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] part, [t for-title] preface|chapter|appendix, [t for-title] book, common/titles
@section [t for-title] part
@subheading Name

[t for-title] part
@subheading Synopsis

@example
<xsl:template match="part" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] preface|chapter|appendix, [t for-title] partintro, [t for-title] part, common/titles
@section [t for-title] preface|chapter|appendix
@subheading Name

[t for-title] preface|chapter|appendix
@subheading Synopsis

@example
<xsl:template match="preface|chapter|appendix" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] partintro, [t for-title] dedication, [t for-title] preface|chapter|appendix, common/titles
@section [t for-title] partintro
@subheading Name

[t for-title] partintro
@subheading Synopsis

@example
<xsl:template match="partintro" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] dedication, [t for-title] colophon, [t for-title] partintro, common/titles
@section [t for-title] dedication
@subheading Name

[t for-title] dedication
@subheading Synopsis

@example
<xsl:template match="dedication" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] colophon, [t for-title] article, [t for-title] dedication, common/titles
@section [t for-title] colophon
@subheading Name

[t for-title] colophon
@subheading Synopsis

@example
<xsl:template match="colophon" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] article, [t for-title] reference, [t for-title] colophon, common/titles
@section [t for-title] article
@subheading Name

[t for-title] article
@subheading Synopsis

@example
<xsl:template match="article" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] reference, [t for-title] refentry, [t for-title] article, common/titles
@section [t for-title] reference
@subheading Name

[t for-title] reference
@subheading Synopsis

@example
<xsl:template match="reference" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] refentry, [t for-title] refsynopsisdiv, [t for-title] reference, common/titles
@section [t for-title] refentry
@subheading Name

[t for-title] refentry
@subheading Synopsis

@example
<xsl:template match="refentry" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] refsynopsisdiv, [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect, [t for-title] refentry, common/titles
@section [t for-title] refsynopsisdiv
@subheading Name

[t for-title] refsynopsisdiv
@subheading Synopsis

@example
<xsl:template match="refsynopsisdiv" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect, [t for-title] bibliography, [t for-title] refsynopsisdiv, common/titles
@section [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect
@subheading Name

[t for-title] section                      |sect1|sect2|sect3|sect4|sect5                      |refsect1|refsect2|refsect3                      |simplesect
@subheading Synopsis

@example
<xsl:template match="section                      |sect1|sect2|sect3|sect4|sect5                      |refsect1|refsect2|refsect3                      |simplesect" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] bibliography, [t for-title] glossary, [t for-title] section |sect1|sect2|sect3|sect4|sect5 |refsect1|refsect2|refsect3 |simplesect, common/titles
@section [t for-title] bibliography
@subheading Name

[t for-title] bibliography
@subheading Synopsis

@example
<xsl:template match="bibliography" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] glossary, [t for-title] index, [t for-title] bibliography, common/titles
@section [t for-title] glossary
@subheading Name

[t for-title] glossary
@subheading Synopsis

@example
<xsl:template match="glossary" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] index, [t for-title] figure|table|example|equation, [t for-title] glossary, common/titles
@section [t for-title] index
@subheading Name

[t for-title] index
@subheading Synopsis

@example
<xsl:template match="index" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] figure|table|example|equation, [t for-title] qandaset|qandadiv, [t for-title] index, common/titles
@section [t for-title] figure|table|example|equation
@subheading Name

[t for-title] figure|table|example|equation
@subheading Synopsis

@example
<xsl:template match="figure|table|example|equation" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] qandaset|qandadiv, [t for-title] abstract, [t for-title] figure|table|example|equation, common/titles
@section [t for-title] qandaset|qandadiv
@subheading Name

[t for-title] qandaset|qandadiv
@subheading Synopsis

@example
<xsl:template match="qandaset|qandadiv" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] abstract, [t for-title] caution|tip|warning|important|note, [t for-title] qandaset|qandadiv, common/titles
@section [t for-title] abstract
@subheading Name

[t for-title] abstract
@subheading Synopsis

@example
<xsl:template match="abstract" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t for-title] caution|tip|warning|important|note, [t no-anchors] *, [t for-title] abstract, common/titles
@section [t for-title] caution|tip|warning|important|note
@subheading Name

[t for-title] caution|tip|warning|important|note
@subheading Synopsis

@example
<xsl:template match="caution|tip|warning|important|note" mode="for-title">
  <xsl:param name="allow-anchors" select="false()" /></xsl:template>
@end example

@node [t no-anchors] *, [t no-anchors] footnote, [t for-title] caution|tip|warning|important|note, common/titles
@section [t no-anchors] *
@subheading Name

[t no-anchors] *
@subheading Synopsis

@example
<xsl:template match="*" mode="no-anchors" />
@end example

@node [t no-anchors] footnote, [t no-anchors] anchor, [t no-anchors] *, common/titles
@section [t no-anchors] footnote
@subheading Name

[t no-anchors] footnote
@subheading Synopsis

@example
<xsl:template match="footnote" mode="no-anchors" />
@end example

@node [t no-anchors] anchor, [t no-anchors] ulink, [t no-anchors] footnote, common/titles
@section [t no-anchors] anchor
@subheading Name

[t no-anchors] anchor
@subheading Synopsis

@example
<xsl:template match="anchor" mode="no-anchors" />
@end example

@node [t no-anchors] ulink, [t no-anchors] link, [t no-anchors] anchor, common/titles
@section [t no-anchors] ulink
@subheading Name

[t no-anchors] ulink
@subheading Synopsis

@example
<xsl:template match="ulink" mode="no-anchors" />
@end example

@node [t no-anchors] link, [t no-anchors] olink, [t no-anchors] ulink, common/titles
@section [t no-anchors] link
@subheading Name

[t no-anchors] link
@subheading Synopsis

@example
<xsl:template match="link" mode="no-anchors" />
@end example

@node [t no-anchors] olink, [t no-anchors] indexterm, [t no-anchors] link, common/titles
@section [t no-anchors] olink
@subheading Name

[t no-anchors] olink
@subheading Synopsis

@example
<xsl:template match="olink" mode="no-anchors" />
@end example

@node [t no-anchors] indexterm, [t no-anchors] xref, [t no-anchors] olink, common/titles
@section [t no-anchors] indexterm
@subheading Name

[t no-anchors] indexterm
@subheading Synopsis

@example
<xsl:template match="indexterm" mode="no-anchors" />
@end example

@node [t no-anchors] xref, , [t no-anchors] indexterm, common/titles
@section [t no-anchors] xref
@subheading Name

[t no-anchors] xref
@subheading Synopsis

@example
<xsl:template match="xref" mode="no-anchors" />
@end example

@node param, texifile, common/titles, Top
@chapter param
@section param

Stylesheet parameters influence various aspects of the rendering.  They
can be set from the command line (the exact syntax depends on the XSLT
processor), or in a custom stylesheet.  

To set them in a custom stylesheet, simply copy the definition here and
change the @code{select} attribute to
something else.

If a parameter for what you want to change does not exist, you can write
templates in the custom stylesheet instead.

@menu
* [P] user-message-prefix::     Undocumented
* [P] captions-display-as-headings::   Use heading markup for minor
                                         captions?
* [P] links-use-pxref::         Translate link using @@pxref
* [P] explicit-node-names::     Insist on manually constructed Texinfo node
                                  names
* [P] show-comments::           Display comment elements?
* [P] funcsynopsis-decoration:: Decorate elements of a FuncSynopsis?
* [P] function-parens::         Generate parentheses after a function?
* [P] refentry-display-name::   Output NAME header before 'RefName'(s)?
* [P] manvolnum-in-xref::       Output manvolnum as part of refentry
                                  cross-reference?
* [P] prefer-textobjects::      Prefer textobject over imageobject? 
* [P] semantic-decorations::    Use Texinfo semantic inline markup?
* [P] custom-localization-file::   URI of XML document containing custom
                                     localization data
* [P] custom-l10n-data::        XML document containing custom localization
                                  data
* [P] author-othername-in-middle::   Is othername in author a middle name?
* [P] output-file::             Name of the Info file
* [P] directory-category::      The categorization of the document in the
                                  Info directory
* [P] directory-description::   The description of the document in the Info
                                  directory
* [P] index-category::          The Texinfo index to use
* [P] qanda-defaultlabel::      Sets the default for defaultlabel on
                                  QandASet.
* [P] qandaset-generate-toc::   Is a Table of Contents created for
                                  QandASets?
@end menu

@node [P] user-message-prefix, [P] captions-display-as-headings, , param
@section [P] user-message-prefix
@subheading Name

[P] user-message-prefix --- Undocumented
@subheading Synopsis

@example
<xsl:param name="user-message-prefix" select="'docbook2texi:'" />
@end example

@node [P] captions-display-as-headings, [P] links-use-pxref, [P] user-message-prefix, param
@section [P] captions-display-as-headings
@subheading Name

[P] captions-display-as-headings --- Use heading markup for minor captions?
@subheading Synopsis

@example
<xsl:param name="captions-display-as-headings" select="false()" />
@end example
@subheading Description

If true, @code{title}
content in some (formal) objects are rendered with the Texinfo
@code{@@@var{heading}} commands.

If false, captions are rendered as an emphasized paragraph.

@node [P] links-use-pxref, [P] explicit-node-names, [P] captions-display-as-headings, param
@section [P] links-use-pxref
@subheading Name

[P] links-use-pxref --- Translate @code{link} using
@code{@@pxref}
@subheading Synopsis

@example
<xsl:param name="links-use-pxref" select="true()" />
@end example
@subheading Description

If true, @code{link} is translated
with the hypertext followed by the cross reference in parentheses.

Otherwise, the hypertext content serves as the cross-reference name
marked up using @code{@@ref}.  Typically info displays this
contruct badly.

@node [P] explicit-node-names, [P] show-comments, [P] links-use-pxref, param
@section [P] explicit-node-names
@subheading Name

[P] explicit-node-names --- Insist on manually constructed Texinfo node
names
@subheading Synopsis

@example
<xsl:param name="explicit-node-names" select="false()" />
@end example
@subheading Description

Elements in the source document can influence the Texinfo node name
generation specifying either a @code{xreflabel}, or for the sectioning elements,
a @code{title} with @code{role='texinfo-node'} in the 
@code{@var{*}info} container.

However, for the majority of source documents, explicit Texinfo node
names are not available, and the stylesheet tries to generate a
reasonable one instead, e.g. from the normal title of an element.  
The generated name may not be optimal.  If this option is set and the
stylesheet needs to generate a name, a warning is emitted and 
@code{generate-id} is always used for the name.

When the hashtable extension is not available, the stylesheet cannot
check for node name collisions, and in this case, setting this option
and using explicit node names are recommended.  

This option is not set (i.e. false) by default.

@quotation

@strong{Note}

The absolute fallback for generating node names is using the XSLT
function @code{generate-id}, and the stylesheet always
emits a warning in this case regardless of the setting of
@code{explicit-node-names}.
@end quotation

@node [P] show-comments, [P] funcsynopsis-decoration, [P] explicit-node-names, param
@section [P] show-comments
@subheading Name

[P] show-comments --- Display @code{comment} elements?
@subheading Synopsis

@example
<xsl:param name="show-comments" select="true()" />
@end example
@subheading Description

If true, comments will be displayed, otherwise they are suppressed.
Comments here refers to the @code{comment} element,
which will be renamed @code{remark} in DocBook V4.0,
not XML comments (<-- like this -->) which are unavailable.

@node [P] funcsynopsis-decoration, [P] function-parens, [P] show-comments, param
@section [P] funcsynopsis-decoration
@subheading Name

[P] funcsynopsis-decoration --- Decorate elements of a FuncSynopsis?
@subheading Synopsis

@example
<xsl:param name="funcsynopsis-decoration" select="true()" />
@end example
@subheading Description

If true, elements of the FuncSynopsis will be decorated (e.g. bold or
italic).  The decoration is controlled by functions that can be redefined
in a customization layer.

@node [P] function-parens, [P] refentry-display-name, [P] funcsynopsis-decoration, param
@section [P] function-parens
@subheading Name

[P] function-parens --- Generate parentheses after a function?
@subheading Synopsis

@example
<xsl:param name="function-parens" select="false()" />
@end example
@subheading Description

If true, the formatting of
a @code{<function>} element will include
generated parenthesis.

@node [P] refentry-display-name, [P] manvolnum-in-xref, [P] function-parens, param
@section [P] refentry-display-name
@subheading Name

[P] refentry-display-name --- Output NAME header before 'RefName'(s)?
@subheading Synopsis

@example
<xsl:param name="refentry-display-name" select="true()" />
@end example
@subheading Description

If true, a "NAME" section title is output before the list
of 'RefName's.

@node [P] manvolnum-in-xref, [P] prefer-textobjects, [P] refentry-display-name, param
@section [P] manvolnum-in-xref
@subheading Name

[P] manvolnum-in-xref --- Output @code{manvolnum} as part of
@code{refentry} cross-reference?
@subheading Synopsis

@example
<xsl:param name="manvolnum-in-xref" select="true()" />
@end example
@subheading Description

if true, the @code{manvolnum} is used when cross-referencing
@code{refentry}s, either with @code{xref}
or @code{citerefentry}.

@node [P] prefer-textobjects, [P] semantic-decorations, [P] manvolnum-in-xref, param
@section [P] prefer-textobjects
@subheading Name

[P] prefer-textobjects --- Prefer @code{textobject}
over @code{imageobject}?
@subheading Synopsis

@example
<xsl:param name="prefer-textobjects" select="true()" />
@end example
@subheading Description

If true, the 
@code{textobject}
in a @code{mediaobject}
is preferred over any
@code{imageobject}.

(Of course, for output formats other than Texinfo, you usually
want to prefer the @code{imageobject},
but Info is a text-only format.)

In addition to the values true and false, this parameter
may be set to @samp{2} to indicate that
both the text and the images should be output.
You may want to do this because some Texinfo viewers
can read images.  Note that the Texinfo @code{@@image}
command has its own mechanism for switching between text
and image output --- but we do not use this here.

The default is true.

@node [P] semantic-decorations, [P] custom-localization-file, [P] prefer-textobjects, param
@section [P] semantic-decorations
@subheading Name

[P] semantic-decorations --- Use Texinfo semantic inline markup?
@subheading Synopsis

@example
<xsl:param name="semantic-decorations" select="true()" />
@end example
@subheading Description

If true, the semantic inline markup of DocBook is translated into
(the closest) Texinfo equivalent.  This is the default.

However, because the Info format is limited to plain text,
the semantic inline markup is often distinguished by using 
explicit quotes, which may not look good.  
You can set this option to false to suppress these.
(For finer control over the inline formatting, you can
use your own stylesheet.)

@node [P] custom-localization-file, [P] custom-l10n-data, [P] semantic-decorations, param
@section [P] custom-localization-file
@subheading Name

[P] custom-localization-file --- URI of XML document containing custom localization data
@subheading Synopsis

@example
<xsl:param name="custom-localization-file" select="''" />
@end example
@subheading Description

This parameter specifies the URI of a XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.

The text translations pointed to by this parameter always
override the default text translations 
(from the internal parameter @code{localization-file}).
If a particular translation is not present here,
the corresponding default translation 
is used as a fallback.

This parameter is primarily for changing certain
punctuation characters used in formatting the source document.
The settings for punctuation characters are often specific
to the source document, but can also be dependent on the locale.

To not use custom text translations, leave this parameter 
as the empty string.

@node [P] custom-l10n-data, [P] author-othername-in-middle, [P] custom-localization-file, param
@section [P] custom-l10n-data
@subheading Name

[P] custom-l10n-data --- XML document containing custom localization data
@subheading Synopsis

@example
<xsl:param name="custom-l10n-data" select="document($custom-localization-file)" />
@end example
@subheading Description

This parameter specifies the XML document
that describes text translations (and other locale-specific information)
that is needed by the stylesheet to process the DocBook document.

This parameter is internal to the stylesheet.
To point to an external XML document with a URI or a file name, 
you should use the @code{custom-localization-file}
parameter instead.

However, inside a custom stylesheet 
(@emph{not on the command-line})
this paramter can be set to the XPath expression
@samp{document('')},
which will cause the custom translations 
directly embedded inside the custom stylesheet to be read.

@node [P] author-othername-in-middle, [P] output-file, [P] custom-l10n-data, param
@section [P] author-othername-in-middle
@subheading Name

[P] author-othername-in-middle --- Is @code{othername} in @code{author} a
middle name?
@subheading Synopsis

@example
<xsl:param name="author-othername-in-middle" select="1" />
@end example
@subheading Description

If true, the @code{othername} of an @code{author}
appears between the @code{firstname} and
@code{surname}.  Otherwise, @code{othername}
is suppressed.

@node [P] output-file, [P] directory-category, [P] author-othername-in-middle, param
@section [P] output-file
@subheading Name

[P] output-file --- Name of the Info file
@subheading Synopsis

@example
<xsl:param name="output-file" select="''" />
@end example
@subheading Description
@cindex Texinfo metadata

This parameter specifies the name of the final Info file,
overriding the setting in the document itself and the automatic
selection in the stylesheet.  If the document is a @code{set}, this parameter has no effect. 

@quotation

@strong{Important}

Do @emph{not} include the @samp{.info}
extension in the name.
@end quotation

(Note that this parameter has nothing to do with the name of
the @emph{Texi-XML output} by the XSLT processor you 
are running this stylesheet from.)

@node [P] directory-category, [P] directory-description, [P] output-file, param
@section [P] directory-category
@subheading Name

[P] directory-category --- The categorization of the document in the Info directory
@subheading Synopsis

@example
<xsl:param name="directory-category" select="''" />
@end example
@subheading Description
@cindex Texinfo metadata

This is set to the category that the document
should go under in the Info directory of installed Info files.
For example, @samp{General Commands}.

@quotation

@strong{Note}

Categories may also be set directly in the source document.
But if this parameter is not empty, then it always overrides the 
setting in the source document.
@end quotation

@node [P] directory-description, [P] index-category, [P] directory-category, param
@section [P] directory-description
@subheading Name

[P] directory-description --- The description of the document in the Info directory
@subheading Synopsis

@example
<xsl:param name="directory-description" select="''" />
@end example
@subheading Description
@cindex Texinfo metadata

This is a short description of the document that appears in
the Info directory of installed Info files.
For example, @samp{An Interactive Plotting Program.}

@quotation

@strong{Note}

Menu descriptions may also be set directly in the source document.
But if this parameter is not empty, then it always overrides the 
setting in the source document.
@end quotation

@node [P] index-category, [P] qanda-defaultlabel, [P] directory-description, param
@section [P] index-category
@subheading Name

[P] index-category --- The Texinfo index to use
@subheading Synopsis

@example
<xsl:param name="index-category" select="'cp'" />
@end example
@subheading Description

The Texinfo index for @code{indexterm}
and @code{index} is specified using the
@code{role} attribute.  If the above
elements do not have a @code{role}, then
the default specified by this parameter is used.

The predefined indices are:

@table @asis

@item @samp{c}
@itemx @samp{cp}
Concept index

@item @samp{f}
@itemx @samp{fn}
Function index

@item @samp{v}
@itemx @samp{vr}
Variable index

@item @samp{k}
@itemx @samp{ky}
Keystroke index

@item @samp{p}
@itemx @samp{pg}
Program index

@item @samp{d}
@itemx @samp{tp}
Data type index
@end table

@noindent
User-defined indices are not yet supported.

@node [P] qanda-defaultlabel, [P] qandaset-generate-toc, [P] index-category, param
@section [P] qanda-defaultlabel
@subheading Name

[P] qanda-defaultlabel --- Sets the default for defaultlabel on QandASet.
@subheading Synopsis

@example
<xsl:param name="qanda-defaultlabel">number</xsl:param>
@end example
@subheading Description

If no defaultlabel attribute is specified on a QandASet, this
value is used. It must be one of the legal values for the defaultlabel
attribute.

@node [P] qandaset-generate-toc, , [P] qanda-defaultlabel, param
@section [P] qandaset-generate-toc
@subheading Name

[P] qandaset-generate-toc --- Is a Table of Contents created for QandASets?
@subheading Synopsis

@example
<xsl:param name="qandaset-generate-toc">1</xsl:param>
@end example
@subheading Description

If true, a ToC is constructed for QandASets.

@node texifile, texinode, param, Top
@chapter texifile
@section texifile

These templates are used when making cross references between the
multiple Texinfo files that are generated from a single DocBook @code{set}.  You probably do not need to modify
anything here.

@menu
* [t texinfo-file-name] *::
* [t texinfo-file-name] text(): [t texinfo-file-name] text[].
* [t for-texinfo-file-name] set/book::
* [t for-texinfo-file-name] /refentry::
* [t for-texinfo-file-name] /*::
* [t for-texinfo-file-name] /set/book//*::
* [t for-texinfo-file-name] node(): [t for-texinfo-file-name] node[].
* [T] get-texinfo-file-name::   Find the file that contains the result
@end menu

@node [t texinfo-file-name] *, [t texinfo-file-name] text[], , texifile
@section [t texinfo-file-name] *
@subheading Name

[t texinfo-file-name] *
@subheading Synopsis

@example
<xsl:template match="*" mode="texinfo-file-name" />
@end example

@node [t texinfo-file-name] text[], [t for-texinfo-file-name] set/book, [t texinfo-file-name] *, texifile
@section [t texinfo-file-name] text()
@subheading Name

[t texinfo-file-name] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="texinfo-file-name" />
@end example

@node [t for-texinfo-file-name] set/book, [t for-texinfo-file-name] /refentry, [t texinfo-file-name] text[], texifile
@section [t for-texinfo-file-name] set/book
@subheading Name

[t for-texinfo-file-name] set/book
@subheading Synopsis

@example
<xsl:template match="set/book" mode="for-texinfo-file-name" priority="2.0" />
@end example

@node [t for-texinfo-file-name] /refentry, [t for-texinfo-file-name] /*, [t for-texinfo-file-name] set/book, texifile
@section [t for-texinfo-file-name] /refentry
@subheading Name

[t for-texinfo-file-name] /refentry
@subheading Synopsis

@example
<xsl:template match="/refentry" mode="for-texinfo-file-name" priority="3.0" />
@end example

@node [t for-texinfo-file-name] /*, [t for-texinfo-file-name] /set/book//*, [t for-texinfo-file-name] /refentry, texifile
@section [t for-texinfo-file-name] /*
@subheading Name

[t for-texinfo-file-name] /*
@subheading Synopsis

@example
<xsl:template match="/*" mode="for-texinfo-file-name" priority="2.0" />
@end example

@node [t for-texinfo-file-name] /set/book//*, [t for-texinfo-file-name] node[], [t for-texinfo-file-name] /*, texifile
@section [t for-texinfo-file-name] /set/book//*
@subheading Name

[t for-texinfo-file-name] /set/book//*
@subheading Synopsis

@example
<xsl:template match="/set/book//*" priority="1.0" mode="for-texinfo-file-name" />
@end example

@node [t for-texinfo-file-name] node[], [T] get-texinfo-file-name, [t for-texinfo-file-name] /set/book//*, texifile
@section [t for-texinfo-file-name] node()
@subheading Name

[t for-texinfo-file-name] node()
@subheading Synopsis

@example
<xsl:template match="node()" mode="for-texinfo-file-name" />
@end example

@node [T] get-texinfo-file-name, , [t for-texinfo-file-name] node[], texifile
@section [T] get-texinfo-file-name
@subheading Name

[T] get-texinfo-file-name --- Find the file that contains the result
@subheading Synopsis

@example
<xsl:template name="get-texinfo-file-name">
  <xsl:param name="node" select="." /></xsl:template>
@end example
@subheading Description

Returns the Texinfo file that contains the result when transforming
the context node.

In this implementation, every document element starts a new file, unless
the document element is @code{set}, in which
case each child @code{book} starts a new
file.
@subheading Parameters

@table @asis

@item @code{node}
The node to find information for.  Default is the context node.
@end table

@node texinode, texinode-base, texifile, Top
@chapter texinode
@section texinode

These templates determine which elements get transformed into Texinfo
nodes, and how to derive a Texinfo node name for these nodes.
@subsection Texinfo node names: processing expectations

The templates try to derive a Texinfo node name of a nodal section from
the content of the following, in order of preference:

@enumerate 

@item
@code{titleabbrev} with @code{role}="texinfo-node" in the @code{@var{*}info}
wrapper.

@item
The @code{xreflabel}

@item
The @code{titleabbrev}

@item
The @code{title}
@end enumerate

@menu
* [M] is-texinfo-node::         Determine if given element is a Texinfo
                                  node
* [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article::
* [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect::
* [t is-texinfo-node] refentry::
* [t is-texinfo-node] *::
* [t is-texinfo-node] part::
* [t is-texinfo-node] partintro|partintro//*::
* [t is-texinfo-node] book::
* [t is-texinfo-node] index|bibliography|glossary::
* [M] for-texinfo-node-name::   Return a suggested nodename
* [t for-texinfo-node-name] *[@@xreflabel]::
* [t for-texinfo-node-name] *[child;;title]::
* [t for-texinfo-node-name] *::
* [t for-texinfo-node-name] book|/*::
* [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3::
* [t for-texinfo-node-name] article::
* [t for-texinfo-node-name] refentry::
* [t for-texinfo-node-name] part::
* [t for-texinfo-node-name] varlistentry::
* [t for-texinfo-node-name] index::
* [t is-texinfo-top-node] book|/*::
* [t is-texinfo-top-node] *::
* [t texinfo-node-name] *::
* [t texinfo-node-name] text(): [t texinfo-node-name] text[].
@end menu

@node [M] is-texinfo-node, [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article, , texinode
@section [M] is-texinfo-node
@subheading Name

[M] is-texinfo-node --- Determine if given element is a Texinfo node
@subheading Description

This mode defines which elements are to be transformed into Texinfo
node.  Elements that generate anchors are not considered nodes by this mode.

The set of nodal elements can be changed, but only sectioning elements
can be nodes and the stylesheets do not support any fancy interleaving
of nodal sections and non-nodal sections.

Return empty string for an element that is not a node,
and the string @samp{1} if it is.

@node [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article, [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect, [M] is-texinfo-node, texinode
@section [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article
@subheading Name

[t is-texinfo-node] dedication|preface|chapter|appendix|reference|article
@subheading Synopsis

@example
<xsl:template match="dedication|preface|chapter|appendix|reference|article" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect, [t is-texinfo-node] refentry, [t is-texinfo-node] dedication|preface|chapter|appendix|reference|article, texinode
@section [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect
@subheading Name

[t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect
@subheading Synopsis

@example
<xsl:template match="sect1|sect2|sect3|sect4|sect5|section|simplesect" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] refentry, [t is-texinfo-node] *, [t is-texinfo-node] sect1|sect2|sect3|sect4|sect5|section|simplesect, texinode
@section [t is-texinfo-node] refentry
@subheading Name

[t is-texinfo-node] refentry
@subheading Synopsis

@example
<xsl:template match="refentry" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] *, [t is-texinfo-node] part, [t is-texinfo-node] refentry, texinode
@section [t is-texinfo-node] *
@subheading Name

[t is-texinfo-node] *
@subheading Synopsis

@example
<xsl:template match="*" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] part, [t is-texinfo-node] partintro|partintro//*, [t is-texinfo-node] *, texinode
@section [t is-texinfo-node] part
@subheading Name

[t is-texinfo-node] part
@subheading Synopsis

@example
<xsl:template match="part" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] partintro|partintro//*, [t is-texinfo-node] book, [t is-texinfo-node] part, texinode
@section [t is-texinfo-node] partintro|partintro//*
@subheading Name

[t is-texinfo-node] partintro|partintro//*
@subheading Synopsis

@example
<xsl:template match="partintro|partintro//*" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] book, [t is-texinfo-node] index|bibliography|glossary, [t is-texinfo-node] partintro|partintro//*, texinode
@section [t is-texinfo-node] book
@subheading Name

[t is-texinfo-node] book
@subheading Synopsis

@example
<xsl:template match="book" mode="is-texinfo-node" />
@end example

@node [t is-texinfo-node] index|bibliography|glossary, [M] for-texinfo-node-name, [t is-texinfo-node] book, texinode
@section [t is-texinfo-node] index|bibliography|glossary
@subheading Name

[t is-texinfo-node] index|bibliography|glossary
@subheading Synopsis

@example
<xsl:template match="index|bibliography|glossary" mode="is-texinfo-node" />
@end example

@node [M] for-texinfo-node-name, [t for-texinfo-node-name] *[@@xreflabel], [t is-texinfo-node] index|bibliography|glossary, texinode
@section [M] for-texinfo-node-name
@subheading Name

[M] for-texinfo-node-name --- Return a suggested nodename
@subheading Description

Processing an element using for-texinfo-node-name returns a suggested
nodename (or anchor name) for that element.

@node [t for-texinfo-node-name] *[@@xreflabel], [t for-texinfo-node-name] *[child;;title], [M] for-texinfo-node-name, texinode
@section [t for-texinfo-node-name] *[@@xreflabel]
@subheading Name

[t for-texinfo-node-name] *[@@xreflabel]
@subheading Synopsis

@example
<xsl:template match="*[@@xreflabel]" mode="for-texinfo-node-name" priority="2.0" />
@end example

@node [t for-texinfo-node-name] *[child;;title], [t for-texinfo-node-name] *, [t for-texinfo-node-name] *[@@xreflabel], texinode
@section [t for-texinfo-node-name] *[child::title]
@subheading Name

[t for-texinfo-node-name] *[child::title]
@subheading Synopsis

@example
<xsl:template match="*[child::title]" mode="for-texinfo-node-name" priority="-1.0" />
@end example

@node [t for-texinfo-node-name] *, [t for-texinfo-node-name] book|/*, [t for-texinfo-node-name] *[child;;title], texinode
@section [t for-texinfo-node-name] *
@subheading Name

[t for-texinfo-node-name] *
@subheading Synopsis

@example
<xsl:template match="*" mode="for-texinfo-node-name" priority="-2.0" />
@end example

@node [t for-texinfo-node-name] book|/*, [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3, [t for-texinfo-node-name] *, texinode
@section [t for-texinfo-node-name] book|/*
@subheading Name

[t for-texinfo-node-name] book|/*
@subheading Synopsis

@example
<xsl:template match="book|/*" mode="for-texinfo-node-name" priority="5.0" />
@end example

@node [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3, [t for-texinfo-node-name] article, [t for-texinfo-node-name] book|/*, texinode
@section [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3
@subheading Name

[t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography|                      sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3
@subheading Synopsis

@example
<xsl:template match="reference|preface|chapter|appendix|glossary|bibliography|                      sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3" mode="for-texinfo-node-name" />
@end example

@node [t for-texinfo-node-name] article, [t for-texinfo-node-name] refentry, [t for-texinfo-node-name] reference|preface|chapter|appendix|glossary|bibliography| sect1|sect2|sect3|sect4|sect5|section|refsect1|refsect2|refsect3, texinode
@section [t for-texinfo-node-name] article
@subheading Name

[t for-texinfo-node-name] article
@subheading Synopsis

@example
<xsl:template match="article" mode="for-texinfo-node-name" />
@end example

@node [t for-texinfo-node-name] refentry, [t for-texinfo-node-name] part, [t for-texinfo-node-name] article, texinode
@section [t for-texinfo-node-name] refentry
@subheading Name

[t for-texinfo-node-name] refentry
@subheading Synopsis

@example
<xsl:template match="refentry" mode="for-texinfo-node-name" />
@end example

@node [t for-texinfo-node-name] part, [t for-texinfo-node-name] varlistentry, [t for-texinfo-node-name] refentry, texinode
@section [t for-texinfo-node-name] part
@subheading Name

[t for-texinfo-node-name] part
@subheading Synopsis

@example
<xsl:template match="part" mode="for-texinfo-node-name" />
@end example

@node [t for-texinfo-node-name] varlistentry, [t for-texinfo-node-name] index, [t for-texinfo-node-name] part, texinode
@section [t for-texinfo-node-name] varlistentry
@subheading Name

[t for-texinfo-node-name] varlistentry
@subheading Synopsis

@example
<xsl:template match="varlistentry" mode="for-texinfo-node-name" />
@end example

@node [t for-texinfo-node-name] index, [t is-texinfo-top-node] book|/*, [t for-texinfo-node-name] varlistentry, texinode
@section [t for-texinfo-node-name] index
@subheading Name

[t for-texinfo-node-name] index
@subheading Synopsis

@example
<xsl:template match="index" mode="for-texinfo-node-name" />
@end example

@node [t is-texinfo-top-node] book|/*, [t is-texinfo-top-node] *, [t for-texinfo-node-name] index, texinode
@section [t is-texinfo-top-node] book|/*
@subheading Name

[t is-texinfo-top-node] book|/*
@subheading Synopsis

@example
<xsl:template match="book|/*" mode="is-texinfo-top-node" priority="5.0" />
@end example

@node [t is-texinfo-top-node] *, [t texinfo-node-name] *, [t is-texinfo-top-node] book|/*, texinode
@section [t is-texinfo-top-node] *
@subheading Name

[t is-texinfo-top-node] *
@subheading Synopsis

@example
<xsl:template match="*" mode="is-texinfo-top-node" />
@end example

@node [t texinfo-node-name] *, [t texinfo-node-name] text[], [t is-texinfo-top-node] *, texinode
@section [t texinfo-node-name] *
@subheading Name

[t texinfo-node-name] *
@subheading Synopsis

@example
<xsl:template match="*" mode="texinfo-node-name" />
@end example

@node [t texinfo-node-name] text[], , [t texinfo-node-name] *, texinode
@section [t texinfo-node-name] text()
@subheading Name

[t texinfo-node-name] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="texinfo-node-name" />
@end example

@node texinode-base, chunk, texinode, Top
@chapter texinode-base

@menu
* [T] make-nodenamemap::        Undocumented
* [t nodenamemap] *::
* [t nodenamemap] text(): [t nodenamemap] text[].
* [T] make-texinfo-node::       Output node element
* [T] make-texinfo-nontop-node::   Undocumented
* [T] make-texinfo-top-node::   Undocumented
* [T] make-texinfo-top-node-firstchild::   Undocumented
@end menu

@node [T] make-nodenamemap, [t nodenamemap] *, , texinode-base
@section [T] make-nodenamemap
@subheading Name

[T] make-nodenamemap --- Undocumented
@subheading Synopsis

@example
<xsl:template name="make-nodenamemap" />
@end example

@node [t nodenamemap] *, [t nodenamemap] text[], [T] make-nodenamemap, texinode-base
@section [t nodenamemap] *
@subheading Name

[t nodenamemap] *
@subheading Synopsis

@example
<xsl:template match="*" mode="nodenamemap" />
@end example

@node [t nodenamemap] text[], [T] make-texinfo-node, [t nodenamemap] *, texinode-base
@section [t nodenamemap] text()
@subheading Name

[t nodenamemap] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="nodenamemap" />
@end example

@node [T] make-texinfo-node, [T] make-texinfo-nontop-node, [t nodenamemap] text[], texinode-base
@section [T] make-texinfo-node
@subheading Name

[T] make-texinfo-node --- Output node element
@subheading Synopsis

@example
<xsl:template name="make-texinfo-node" />
@end example
@subheading Description

This named template creates a node element in the result tree, 
which corresponds to the Texinfo @samp{@@node} command.

@node [T] make-texinfo-nontop-node, [T] make-texinfo-top-node, [T] make-texinfo-node, texinode-base
@section [T] make-texinfo-nontop-node
@subheading Name

[T] make-texinfo-nontop-node --- Undocumented
@subheading Synopsis

@example
<xsl:template name="make-texinfo-nontop-node" />
@end example

@node [T] make-texinfo-top-node, [T] make-texinfo-top-node-firstchild, [T] make-texinfo-nontop-node, texinode-base
@section [T] make-texinfo-top-node
@subheading Name

[T] make-texinfo-top-node --- Undocumented
@subheading Synopsis

@example
<xsl:template name="make-texinfo-top-node" />
@end example

@node [T] make-texinfo-top-node-firstchild, , [T] make-texinfo-top-node, texinode-base
@section [T] make-texinfo-top-node-firstchild
@subheading Name

[T] make-texinfo-top-node-firstchild --- Undocumented
@subheading Synopsis

@example
<xsl:template name="make-texinfo-top-node-firstchild">
  <xsl:param name="node" /></xsl:template>
@end example

@node chunk, autotoc, texinode-base, Top
@chapter chunk

@menu
* [t] /::
* [M] top-chunk::               Process a top-level chunk
* [t top-chunk] *::
@end menu

@node [t] /, [M] top-chunk, , chunk
@section [t] /
@subheading Name

[t] /
@subheading Synopsis

@example
<xsl:template match="/" />
@end example

@node [M] top-chunk, [t top-chunk] *, [t] /, chunk
@section [M] top-chunk
@subheading Name

[M] top-chunk --- Process a top-level chunk
@subheading Description

This mode is supposed to output all the Texi-XML markup
required for the beginning of the Texinfo file,
e.g. @code{settitle}, 
Texinfo directories, etc.   After that, it goes onto
normal processing.

@node [t top-chunk] *, , [M] top-chunk, chunk
@section [t top-chunk] *
@subheading Name

[t top-chunk] *
@subheading Synopsis

@example
<xsl:template match="*" mode="top-chunk" />
@end example

@node autotoc, menudescrip, chunk, Top
@chapter autotoc
@section autotoc

Generate Texinfo menus for each node.  Also optionally generate
directory entries used by @code{install-info}.  The user
generally does not modify these templates.

Menus are created by the first child sectioning element, so that the
@code{@@menu} comes just after the text content of the parent
sectioning element, where Texinfo expects them to be.  This approach may
not be the most elegant, but it works, and its operation is hidden by
@code{make-texinfo-node}.

@menu
* [M] texinfo-menu::            Make Texinfo menus
* [V] make-detailed-menus::     Undocumented
* [t texinfo-menu] *::
* [t texinfo-menu] book|/*::
* [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*::
* [t texinfo-detail-menu-entry] book/part::
* [t texinfo-detail-menu-entry] *::
* [t texinfo-menu-entry] part::
* [T] make-texinfo-menu-entry:: Undocumented
* [T] make-texinfo-directory::  Make a Texinfo directory entry
* [t for-menu-title] node(): [t for-menu-title] node[].
@end menu

@node [M] texinfo-menu, [V] make-detailed-menus, , autotoc
@section [M] texinfo-menu
@subheading Name

[M] texinfo-menu --- Make Texinfo menus
@subheading Description

Any DocBook element that generates a Texinfo node
can be processed with this mode to generate
a menu for it.

If the element that is processed happens to be the Top node,
the @code{@@detailmenu} is generated also.

@node [V] make-detailed-menus, [t texinfo-menu] *, [M] texinfo-menu, autotoc
@section [V] make-detailed-menus
@subheading Name

[V] make-detailed-menus --- Undocumented
@subheading Synopsis

@example
<xsl:variable name="make-detailed-menus" select="true()" />
@end example

@node [t texinfo-menu] *, [t texinfo-menu] book|/*, [V] make-detailed-menus, autotoc
@section [t texinfo-menu] *
@subheading Name

[t texinfo-menu] *
@subheading Synopsis

@example
<xsl:template match="*" mode="texinfo-menu" />
@end example

@node [t texinfo-menu] book|/*, [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*, [t texinfo-menu] *, autotoc
@section [t texinfo-menu] book|/*
@subheading Name

[t texinfo-menu] book|/*
@subheading Synopsis

@example
<xsl:template match="book|/*" mode="texinfo-menu" />
@end example

@node [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*, [t texinfo-detail-menu-entry] book/part, [t texinfo-menu] book|/*, autotoc
@section [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*
@subheading Name

[t texinfo-detail-menu-entry] book/*|/*/*|book/part/*
@subheading Synopsis

@example
<xsl:template match="book/*|/*/*|book/part/*" mode="texinfo-detail-menu-entry" />
@end example

@node [t texinfo-detail-menu-entry] book/part, [t texinfo-detail-menu-entry] *, [t texinfo-detail-menu-entry] book/*|/*/*|book/part/*, autotoc
@section [t texinfo-detail-menu-entry] book/part
@subheading Name

[t texinfo-detail-menu-entry] book/part
@subheading Synopsis

@example
<xsl:template match="book/part" mode="texinfo-detail-menu-entry" />
@end example

@node [t texinfo-detail-menu-entry] *, [t texinfo-menu-entry] part, [t texinfo-detail-menu-entry] book/part, autotoc
@section [t texinfo-detail-menu-entry] *
@subheading Name

[t texinfo-detail-menu-entry] *
@subheading Synopsis

@example
<xsl:template match="*" mode="texinfo-detail-menu-entry" />
@end example

@node [t texinfo-menu-entry] part, [T] make-texinfo-menu-entry, [t texinfo-detail-menu-entry] *, autotoc
@section [t texinfo-menu-entry] part
@subheading Name

[t texinfo-menu-entry] part
@subheading Synopsis

@example
<xsl:template match="part" mode="texinfo-menu-entry" />
@end example

@node [T] make-texinfo-menu-entry, [T] make-texinfo-directory, [t texinfo-menu-entry] part, autotoc
@section [T] make-texinfo-menu-entry
@subheading Name

[T] make-texinfo-menu-entry --- Undocumented
@subheading Synopsis

@example
<xsl:template name="make-texinfo-menu-entry" match="*" mode="texinfo-menu-entry" />
@end example

@node [T] make-texinfo-directory, [t for-menu-title] node[], [T] make-texinfo-menu-entry, autotoc
@section [T] make-texinfo-directory
@subheading Name

[T] make-texinfo-directory --- Make a Texinfo directory entry
@subheading Synopsis

@example
<xsl:template name="make-texinfo-directory" />
@end example
@subheading Description

Output commands so that install-info can automatically add a directory entry
when installing the document.

@node [t for-menu-title] node[], , [T] make-texinfo-directory, autotoc
@section [t for-menu-title] node()
@subheading Name

[t for-menu-title] node()
@subheading Synopsis

@example
<xsl:template match="node()" mode="for-menu-title" />
@end example

@node menudescrip, index, autotoc, Top
@chapter menudescrip
@section menudescrip

Make descriptions for Texinfo menu entries, if available.
@subsection Menu descriptions: processing expectations

If an @code{abstract} with a @code{role} of @samp{texinfo-node}
is found, that is rendered as the menu description for the node.

Descriptions should be one sentence or phrase long, since
space is limited in a Texinfo menu.  For the same reason,
only the first paragraph of such an 
@code{abstract} is rendered.

Menu descriptions also appear for the Info directory entry
for an Info file; these descriptions are handled just the same
as normal menus, with the @code{abstract}
apparatus.  On the other hand, the Info directory category
is specified using a @code{subjectset}
with a @code{scheme} of
@samp{texinfo-directory}.

@strong{Menu descriptions in the source document}

@example
<article>
  <articleinfo>
    <titleabbrev role="texinfo-node">wget</titleabbrev>
    <abstract role="texinfo-node">
      The non-interactive network downloader.
    </abstract>
    <subjectset scheme="texinfo-directory">
      <subject><subjectterm>Network Applications</subjectterm></subject>
    </subjectset>
  </articleinfo>

  @dots{} article content goes here @dots{}

</article>
@end example

You may prefer to put the Texinfo descriptions outside of the source document.
This is possible with a custom stylesheet:

@strong{Specifying Texinfo directory entries in a stylesheet}

@example
<xsl:param name="directory-category">
  <xsl:text>General Commands</xsl:text>
</xsl:param>

<xsl:param name="directory-description">
  <xsl:text>Make hard links between files.</xsl:text>
</xsl:param>

<xsl:template match="id('invoking')" mode="for-menu-description">
  <xsl:text>Command-line options</xsl:text>
</xsl:template>

<xsl:template match="id('os')" mode="for-menu-description">
  <xsl:text>Restrictions on linking imposed by the OS</xsl:text>
</xsl:template>

@dots{} more entries @dots{}
@end example

@menu
* [M] for-menu-description::    Return description for Texinfo node
* [t for-menu-description] refentry::
* [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book::
* [t for-menu-description] *::
* [T] get-texinfo-directory-description::   Undocumented
* [M] for-directory-category::  Return Info directory category
* [T] get-texinfo-directory-category::   Undocumented
* [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry::
* [t for-directory-category] *::
@end menu

@node [M] for-menu-description, [t for-menu-description] refentry, , menudescrip
@section [M] for-menu-description
@subheading Name

[M] for-menu-description --- Return description for Texinfo node
@subheading Description

Processing an element using menu-description-mode returns a result tree
fragment that is the description for its menu entry.

@node [t for-menu-description] refentry, [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book, [M] for-menu-description, menudescrip
@section [t for-menu-description] refentry
@subheading Name

[t for-menu-description] refentry
@subheading Synopsis

@example
<xsl:template match="refentry" mode="for-menu-description" />
@end example

@node [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book, [t for-menu-description] *, [t for-menu-description] refentry, menudescrip
@section [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book
@subheading Name

[t for-menu-description] reference|preface|chapter|appendix|glossary|                      bibliography|article|part|                      sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3|                      partintro|section|book
@subheading Synopsis

@example
<xsl:template match="reference|preface|chapter|appendix|glossary|                      bibliography|article|part|                      sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3|                      partintro|section|book" mode="for-menu-description" />
@end example

@node [t for-menu-description] *, [T] get-texinfo-directory-description, [t for-menu-description] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book, menudescrip
@section [t for-menu-description] *
@subheading Name

[t for-menu-description] *
@subheading Synopsis

@example
<xsl:template match="*" mode="for-menu-description" />
@end example

@node [T] get-texinfo-directory-description, [M] for-directory-category, [t for-menu-description] *, menudescrip
@section [T] get-texinfo-directory-description
@subheading Name

[T] get-texinfo-directory-description --- Undocumented
@subheading Synopsis

@example
<xsl:template name="get-texinfo-directory-description">
  <xsl:param name="node" select="." /></xsl:template>
@end example

@node [M] for-directory-category, [T] get-texinfo-directory-category, [T] get-texinfo-directory-description, menudescrip
@section [M] for-directory-category
@subheading Name

[M] for-directory-category --- Return Info directory category
@subheading Description

Processing an element (normally the root element, but also 
@code{book}s) using menu-description-mode 
returns a result tree fragment that is the Info categorization
for the Texinfo file.

@node [T] get-texinfo-directory-category, [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry, [M] for-directory-category, menudescrip
@section [T] get-texinfo-directory-category
@subheading Name

[T] get-texinfo-directory-category --- Undocumented
@subheading Synopsis

@example
<xsl:template name="get-texinfo-directory-category">
  <xsl:param name="node" select="." /></xsl:template>
@end example

@node [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry, [t for-directory-category] *, [T] get-texinfo-directory-category, menudescrip
@section [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry
@subheading Name

[t for-directory-category] reference|preface|chapter|appendix|glossary|                      bibliography|article|part|                      sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3|                      partintro|section|book|refentry
@subheading Synopsis

@example
<xsl:template match="reference|preface|chapter|appendix|glossary|                      bibliography|article|part|                      sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3|                      partintro|section|book|refentry" mode="for-directory-category" />
@end example

@node [t for-directory-category] *, , [t for-directory-category] reference|preface|chapter|appendix|glossary| bibliography|article|part| sect1|sect2|sect3|sect4|sect5|refsect1|refsect2|refsect3| partintro|section|book|refentry, menudescrip
@section [t for-directory-category] *
@subheading Name

[t for-directory-category] *
@subheading Synopsis

@example
<xsl:template match="*" mode="for-directory-category" />
@end example

@node index, sectioning, menudescrip, Top
@chapter index

@menu
* [t] index::
* [t] indexdiv::
* [t] indexterm::
* [t] primary::
* [t] secondary|tertiary::
* [t] see|seealso::
* [t] indexentry::
* [t] primaryie|secondaryie|tertiaryie|seeie|seealsoie::
@end menu

@node [t] index, [t] indexdiv, , index
@section [t] index
@subheading Name

[t] index
@subheading Synopsis

@example
<xsl:template match="index" />
@end example

@node [t] indexdiv, [t] indexterm, [t] index, index
@section [t] indexdiv
@subheading Name

[t] indexdiv
@subheading Synopsis

@example
<xsl:template match="indexdiv" />
@end example

@node [t] indexterm, [t] primary, [t] indexdiv, index
@section [t] indexterm
@subheading Name

[t] indexterm
@subheading Synopsis

@example
<xsl:template match="indexterm" />
@end example

@node [t] primary, [t] secondary|tertiary, [t] indexterm, index
@section [t] primary
@subheading Name

[t] primary
@subheading Synopsis

@example
<xsl:template match="primary" />
@end example

@node [t] secondary|tertiary, [t] see|seealso, [t] primary, index
@section [t] secondary|tertiary
@subheading Name

[t] secondary|tertiary
@subheading Synopsis

@example
<xsl:template match="secondary|tertiary" />
@end example

@node [t] see|seealso, [t] indexentry, [t] secondary|tertiary, index
@section [t] see|seealso
@subheading Name

[t] see|seealso
@subheading Synopsis

@example
<xsl:template match="see|seealso" />
@end example

@node [t] indexentry, [t] primaryie|secondaryie|tertiaryie|seeie|seealsoie, [t] see|seealso, index
@section [t] indexentry
@subheading Name

[t] indexentry
@subheading Synopsis

@example
<xsl:template match="indexentry" />
@end example

@node [t] primaryie|secondaryie|tertiaryie|seeie|seealsoie, , [t] indexentry, index
@section [t] primaryie|secondaryie|tertiaryie|seeie|seealsoie
@subheading Name

[t] primaryie|secondaryie|tertiaryie|seeie|seealsoie
@subheading Synopsis

@example
<xsl:template match="primaryie|secondaryie|tertiaryie|seeie|seealsoie" />
@end example

@node sectioning, division, index, Top
@chapter sectioning

@menu
* [T] get-texinfo-section-level::   Give Texinfo structuring command for
                                      given section level 
* [T] make-texinfo-section::    Make Texinfo section
* [T] section::                 Standard template for section structures
@end menu

@node [T] get-texinfo-section-level, [T] make-texinfo-section, , sectioning
@section [T] get-texinfo-section-level
@subheading Name

[T] get-texinfo-section-level --- 
Give Texinfo structuring command for given section level
@subheading Synopsis

@example
<xsl:template name="get-texinfo-section-level">
  <xsl:param name="node" select="." />
  <xsl:param name="heading-class" select="'chapter'" /></xsl:template>
@end example
@subheading Description

This template returns the name of the Texinfo command that is mapped to
the given DocBook element.

This implementation internally uses numbers that reflect the DocBook
hierarchy, like Norm's @code{section.level} template.
However, @code{section.level} only maps the DocBook 
sectioning elements (@code{sect@var{n}}
and @code{section}).

This simplistic mapping of numbers to Texinfo commands sometimes yield
results that do not make a lot of sense; e.g. if the document element is
@code{section}, then the first section is
mapped to @code{@@top}, but the next nested section would be a
Texinfo @code{chapter}.  I have thought about letting each
template specify their own structuring element, but from my testing,
jumping around the hierarchy breaks at least the TeX portion of Texinfo.
Besides, this neccessitated writing a @code{xsl:choose}s
with non-trivial cases in many templates.

The only thing I can say is that if you use 'weird' document elements,
you can't reasonably transform to Texinfo (whose top level is
semantically similar to @code{book}).  
@code{docbook2texixml} takes the same approach.

I also have a suspicion that calling this template will be slow, but 
there's nothing we can do about it :-(
@subheading Parameters

@table @asis

@item @code{node}
The node to get the Texinfo structuring command mapping for.
Default is the context node.

@item @code{heading-class}
The class of heading commands to use:
@samp{chapter}, @samp{unnumbered}, @samp{appendix}, @samp{chapheading}
See the chart in the Texinfo manual for the meanings of each class.
The default is @samp{chapter}
@end table

@node [T] make-texinfo-section, [T] section, [T] get-texinfo-section-level, sectioning
@section [T] make-texinfo-section
@subheading Name

[T] make-texinfo-section --- Make Texinfo section
@subheading Synopsis

@example
<xsl:template name="make-texinfo-section">
  <xsl:param name="level">
    <xsl:call-template name="get-texinfo-section-level" />
  </xsl:param>
  <xsl:param name="title">
    <xsl:apply-templates select="." mode="for-title" />
  </xsl:param></xsl:template>
@end example
@subheading Description

This template outputs the corresponding Texinfo sectioning
command for the DocBook sectioning elements.

Logically speaking, this template might better be
called @code{make-texinfo-heading},
as it only output the Texinfo sectioning command, but not
the actual content of the section.
@subheading Parameters

@table @asis

@item @code{level}
The name of the Texinfo structuring command.  If not specified,
automatically uses @code{get-texinfo-section-level}.

@item @code{title}
The title to use for the section.  The default is found by applying
@code{title} mode templates to the context node.
@end table

@node [T] section, , [T] make-texinfo-section, sectioning
@section [T] section
@subheading Name

[T] section --- Standard template for section structures
@subheading Synopsis

@example
<xsl:template name="section">
  <xsl:param name="level">
    <xsl:call-template name="get-texinfo-section-level" />
  </xsl:param>
  <xsl:param name="title">
    <xsl:apply-templates select="." mode="for-title" />
  </xsl:param>
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example
@subheading Description

For the given element, it creates a node for it if is.node=1, otherwise
an anchor, and calls @code{make-texinfo-section} for the actual
sectioning command.  Finally templates are applied for the child
elements.

With this, the user can easily decide what elements are to be converted
to nodes with a simple change to @file{texinode.xsl}.
@subheading Parameters

The arguments are the same as the ones for
@code{make-texinfo-section}, plus
@code{content}.

@table @asis

@item @code{content}
The result tree fragment of the section.  Defaults to applying
templates.
@end table

@node division, sections, sectioning, Top
@chapter division

@menu
* [t top-chunk] set::
* [t] book::
* [t] part::
* [t] partintro::
@end menu

@node [t top-chunk] set, [t] book, , division
@section [t top-chunk] set
@subheading Name

[t top-chunk] set
@subheading Synopsis

@example
<xsl:template match="set" mode="top-chunk" />
@end example

@node [t] book, [t] part, [t top-chunk] set, division
@section [t] book
@subheading Name

[t] book
@subheading Synopsis

@example
<xsl:template match="book" />
@end example

@node [t] part, [t] partintro, [t] book, division
@section [t] part
@subheading Name

[t] part
@subheading Synopsis

@example
<xsl:template match="part" />
@end example

@node [t] partintro, , [t] part, division
@section [t] partintro
@subheading Name

[t] partintro
@subheading Synopsis

@example
<xsl:template match="partintro" />
@end example

@node sections, refentry, division, Top
@chapter sections

@menu
* [t] sect1|sect2|sect3|sect4|sect5|simplesect|section::
* [t] bridgehead::
* [t] title::
* [t] titleabbrev::
* [t] subtitle::
@end menu

@node [t] sect1|sect2|sect3|sect4|sect5|simplesect|section, [t] bridgehead, , sections
@section [t] sect1|sect2|sect3|sect4|sect5|simplesect|section
@subheading Name

[t] sect1|sect2|sect3|sect4|sect5|simplesect|section
@subheading Synopsis

@example
<xsl:template match="sect1|sect2|sect3|sect4|sect5|simplesect|section" />
@end example

@node [t] bridgehead, [t] title, [t] sect1|sect2|sect3|sect4|sect5|simplesect|section, sections
@section [t] bridgehead
@subheading Name

[t] bridgehead
@subheading Synopsis

@example
<xsl:template match="bridgehead" />
@end example

@node [t] title, [t] titleabbrev, [t] bridgehead, sections
@section [t] title
@subheading Name

[t] title
@subheading Synopsis

@example
<xsl:template match="title" />
@end example

@node [t] titleabbrev, [t] subtitle, [t] title, sections
@section [t] titleabbrev
@subheading Name

[t] titleabbrev
@subheading Synopsis

@example
<xsl:template match="titleabbrev" />
@end example

@node [t] subtitle, , [t] titleabbrev, sections
@section [t] subtitle
@subheading Name

[t] subtitle
@subheading Synopsis

@example
<xsl:template match="subtitle" />
@end example

@node refentry, admon, sections, Top
@chapter refentry

@menu
* [t] reference::
* [t] refentry::
* [t] refmeta::
* [t] manvolnum::
* [t no-inline-markup] manvolnum::
* [t] refmiscinfo::
* [t] refentrytitle::
* [t] refnamediv::
* [t] refname::
* [t] refpurpose::
* [t] refdescriptor::
* [t] refclass::
* [t] refsynopsisdiv::
* [t] refsect1|refsect2|refsect3::
@end menu

@node [t] reference, [t] refentry, , refentry
@section [t] reference
@subheading Name

[t] reference
@subheading Synopsis

@example
<xsl:template match="reference" />
@end example

@node [t] refentry, [t] refmeta, [t] reference, refentry
@section [t] refentry
@subheading Name

[t] refentry
@subheading Synopsis

@example
<xsl:template match="refentry" />
@end example

@node [t] refmeta, [t] manvolnum, [t] refentry, refentry
@section [t] refmeta
@subheading Name

[t] refmeta
@subheading Synopsis

@example
<xsl:template match="refmeta" />
@end example

@node [t] manvolnum, [t no-inline-markup] manvolnum, [t] refmeta, refentry
@section [t] manvolnum
@subheading Name

[t] manvolnum
@subheading Synopsis

@example
<xsl:template match="manvolnum" />
@end example

@node [t no-inline-markup] manvolnum, [t] refmiscinfo, [t] manvolnum, refentry
@section [t no-inline-markup] manvolnum
@subheading Name

[t no-inline-markup] manvolnum
@subheading Synopsis

@example
<xsl:template match="manvolnum" mode="no-inline-markup" />
@end example

@node [t] refmiscinfo, [t] refentrytitle, [t no-inline-markup] manvolnum, refentry
@section [t] refmiscinfo
@subheading Name

[t] refmiscinfo
@subheading Synopsis

@example
<xsl:template match="refmiscinfo" />
@end example

@node [t] refentrytitle, [t] refnamediv, [t] refmiscinfo, refentry
@section [t] refentrytitle
@subheading Name

[t] refentrytitle
@subheading Synopsis

@example
<xsl:template match="refentrytitle" />
@end example

@node [t] refnamediv, [t] refname, [t] refentrytitle, refentry
@section [t] refnamediv
@subheading Name

[t] refnamediv
@subheading Synopsis

@example
<xsl:template match="refnamediv" />
@end example

@node [t] refname, [t] refpurpose, [t] refnamediv, refentry
@section [t] refname
@subheading Name

[t] refname
@subheading Synopsis

@example
<xsl:template match="refname" />
@end example

@node [t] refpurpose, [t] refdescriptor, [t] refname, refentry
@section [t] refpurpose
@subheading Name

[t] refpurpose
@subheading Synopsis

@example
<xsl:template match="refpurpose" />
@end example

@node [t] refdescriptor, [t] refclass, [t] refpurpose, refentry
@section [t] refdescriptor
@subheading Name

[t] refdescriptor
@subheading Synopsis

@example
<xsl:template match="refdescriptor" />
@end example

@node [t] refclass, [t] refsynopsisdiv, [t] refdescriptor, refentry
@section [t] refclass
@subheading Name

[t] refclass
@subheading Synopsis

@example
<xsl:template match="refclass" />
@end example

@node [t] refsynopsisdiv, [t] refsect1|refsect2|refsect3, [t] refclass, refentry
@section [t] refsynopsisdiv
@subheading Name

[t] refsynopsisdiv
@subheading Synopsis

@example
<xsl:template match="refsynopsisdiv" />
@end example

@node [t] refsect1|refsect2|refsect3, , [t] refsynopsisdiv, refentry
@section [t] refsect1|refsect2|refsect3
@subheading Name

[t] refsect1|refsect2|refsect3
@subheading Synopsis

@example
<xsl:template match="refsect1|refsect2|refsect3" />
@end example

@node admon, block, refentry, Top
@chapter admon

@menu
* [T] admonition-title::        Undocumented
* [t] note|important|warning|caution|tip::
@end menu

@node [T] admonition-title, [t] note|important|warning|caution|tip, , admon
@section [T] admonition-title
@subheading Name

[T] admonition-title --- Undocumented
@subheading Synopsis

@example
<xsl:template name="admonition-title" />
@end example

@node [t] note|important|warning|caution|tip, , [T] admonition-title, admon
@section [t] note|important|warning|caution|tip
@subheading Name

[t] note|important|warning|caution|tip
@subheading Synopsis

@example
<xsl:template match="note|important|warning|caution|tip" />
@end example

@node block, caption, admon, Top
@chapter block

@menu
* [T] block-object::            Undocumented
* [t] para|simpara::
* [t] formalpara::
* [t] formalpara/title::
* [t] formalpara/para::
* [t] blockquote::
* [t] blockquote/title::
* [t] attribution::
* [t blockquote-attribution] attribution::
* [t] epigraph::
* [t] sidebar::
* [t] abstract::
* [t] msgset::
* [t] msgentry::
* [t] simplemsgentry::
* [t] msg::
* [t] msgmain::
* [t] msgmain/title::
* [t] msgsub::
* [t] msgsub/title::
* [t] msgrel::
* [t] msgrel/title::
* [t] msgtext::
* [t] msginfo::
* [t] msglevel|msgorig|msgaud::
* [t] msgexplan::
* [t] msgexplan/title::
* [t] revhistory::
* [t] revhistory/revision::
* [t] revision/revnumber::
* [t] revision/date::
* [t] revision/authorinitials::
* [t] revision/authorinitials[1]::
* [t] revision/revremark::
* [t] revision/revdescription::
* [t] ackno::
@end menu

@node [T] block-object, [t] para|simpara, , block
@section [T] block-object
@subheading Name

[T] block-object --- Undocumented
@subheading Synopsis

@example
<xsl:template name="block-object" />
@end example

@node [t] para|simpara, [t] formalpara, [T] block-object, block
@section [t] para|simpara
@subheading Name

[t] para|simpara
@subheading Synopsis

@example
<xsl:template match="para|simpara" />
@end example

@node [t] formalpara, [t] formalpara/title, [t] para|simpara, block
@section [t] formalpara
@subheading Name

[t] formalpara
@subheading Synopsis

@example
<xsl:template match="formalpara" />
@end example

@node [t] formalpara/title, [t] formalpara/para, [t] formalpara, block
@section [t] formalpara/title
@subheading Name

[t] formalpara/title
@subheading Synopsis

@example
<xsl:template match="formalpara/title" />
@end example

@node [t] formalpara/para, [t] blockquote, [t] formalpara/title, block
@section [t] formalpara/para
@subheading Name

[t] formalpara/para
@subheading Synopsis

@example
<xsl:template match="formalpara/para" />
@end example

@node [t] blockquote, [t] blockquote/title, [t] formalpara/para, block
@section [t] blockquote
@subheading Name

[t] blockquote
@subheading Synopsis

@example
<xsl:template match="blockquote" />
@end example

@node [t] blockquote/title, [t] attribution, [t] blockquote, block
@section [t] blockquote/title
@subheading Name

[t] blockquote/title
@subheading Synopsis

@example
<xsl:template match="blockquote/title" />
@end example

@node [t] attribution, [t blockquote-attribution] attribution, [t] blockquote/title, block
@section [t] attribution
@subheading Name

[t] attribution
@subheading Synopsis

@example
<xsl:template match="attribution" />
@end example

@node [t blockquote-attribution] attribution, [t] epigraph, [t] attribution, block
@section [t blockquote-attribution] attribution
@subheading Name

[t blockquote-attribution] attribution
@subheading Synopsis

@example
<xsl:template match="attribution" mode="blockquote-attribution" />
@end example

@node [t] epigraph, [t] sidebar, [t blockquote-attribution] attribution, block
@section [t] epigraph
@subheading Name

[t] epigraph
@subheading Synopsis

@example
<xsl:template match="epigraph" />
@end example

@node [t] sidebar, [t] abstract, [t] epigraph, block
@section [t] sidebar
@subheading Name

[t] sidebar
@subheading Synopsis

@example
<xsl:template match="sidebar" />
@end example

@node [t] abstract, [t] msgset, [t] sidebar, block
@section [t] abstract
@subheading Name

[t] abstract
@subheading Synopsis

@example
<xsl:template match="abstract" />
@end example

@node [t] msgset, [t] msgentry, [t] abstract, block
@section [t] msgset
@subheading Name

[t] msgset
@subheading Synopsis

@example
<xsl:template match="msgset" />
@end example

@node [t] msgentry, [t] simplemsgentry, [t] msgset, block
@section [t] msgentry
@subheading Name

[t] msgentry
@subheading Synopsis

@example
<xsl:template match="msgentry" />
@end example

@node [t] simplemsgentry, [t] msg, [t] msgentry, block
@section [t] simplemsgentry
@subheading Name

[t] simplemsgentry
@subheading Synopsis

@example
<xsl:template match="simplemsgentry" />
@end example

@node [t] msg, [t] msgmain, [t] simplemsgentry, block
@section [t] msg
@subheading Name

[t] msg
@subheading Synopsis

@example
<xsl:template match="msg" />
@end example

@node [t] msgmain, [t] msgmain/title, [t] msg, block
@section [t] msgmain
@subheading Name

[t] msgmain
@subheading Synopsis

@example
<xsl:template match="msgmain" />
@end example

@node [t] msgmain/title, [t] msgsub, [t] msgmain, block
@section [t] msgmain/title
@subheading Name

[t] msgmain/title
@subheading Synopsis

@example
<xsl:template match="msgmain/title" />
@end example

@node [t] msgsub, [t] msgsub/title, [t] msgmain/title, block
@section [t] msgsub
@subheading Name

[t] msgsub
@subheading Synopsis

@example
<xsl:template match="msgsub" />
@end example

@node [t] msgsub/title, [t] msgrel, [t] msgsub, block
@section [t] msgsub/title
@subheading Name

[t] msgsub/title
@subheading Synopsis

@example
<xsl:template match="msgsub/title" />
@end example

@node [t] msgrel, [t] msgrel/title, [t] msgsub/title, block
@section [t] msgrel
@subheading Name

[t] msgrel
@subheading Synopsis

@example
<xsl:template match="msgrel" />
@end example

@node [t] msgrel/title, [t] msgtext, [t] msgrel, block
@section [t] msgrel/title
@subheading Name

[t] msgrel/title
@subheading Synopsis

@example
<xsl:template match="msgrel/title" />
@end example

@node [t] msgtext, [t] msginfo, [t] msgrel/title, block
@section [t] msgtext
@subheading Name

[t] msgtext
@subheading Synopsis

@example
<xsl:template match="msgtext" />
@end example

@node [t] msginfo, [t] msglevel|msgorig|msgaud, [t] msgtext, block
@section [t] msginfo
@subheading Name

[t] msginfo
@subheading Synopsis

@example
<xsl:template match="msginfo" />
@end example

@node [t] msglevel|msgorig|msgaud, [t] msgexplan, [t] msginfo, block
@section [t] msglevel|msgorig|msgaud
@subheading Name

[t] msglevel|msgorig|msgaud
@subheading Synopsis

@example
<xsl:template match="msglevel|msgorig|msgaud" />
@end example

@node [t] msgexplan, [t] msgexplan/title, [t] msglevel|msgorig|msgaud, block
@section [t] msgexplan
@subheading Name

[t] msgexplan
@subheading Synopsis

@example
<xsl:template match="msgexplan" />
@end example

@node [t] msgexplan/title, [t] revhistory, [t] msgexplan, block
@section [t] msgexplan/title
@subheading Name

[t] msgexplan/title
@subheading Synopsis

@example
<xsl:template match="msgexplan/title" />
@end example

@node [t] revhistory, [t] revhistory/revision, [t] msgexplan/title, block
@section [t] revhistory
@subheading Name

[t] revhistory
@subheading Synopsis

@example
<xsl:template match="revhistory" />
@end example

@node [t] revhistory/revision, [t] revision/revnumber, [t] revhistory, block
@section [t] revhistory/revision
@subheading Name

[t] revhistory/revision
@subheading Synopsis

@example
<xsl:template match="revhistory/revision" />
@end example

@node [t] revision/revnumber, [t] revision/date, [t] revhistory/revision, block
@section [t] revision/revnumber
@subheading Name

[t] revision/revnumber
@subheading Synopsis

@example
<xsl:template match="revision/revnumber" />
@end example

@node [t] revision/date, [t] revision/authorinitials, [t] revision/revnumber, block
@section [t] revision/date
@subheading Name

[t] revision/date
@subheading Synopsis

@example
<xsl:template match="revision/date" />
@end example

@node [t] revision/authorinitials, [t] revision/authorinitials[1], [t] revision/date, block
@section [t] revision/authorinitials
@subheading Name

[t] revision/authorinitials
@subheading Synopsis

@example
<xsl:template match="revision/authorinitials" />
@end example

@node [t] revision/authorinitials[1], [t] revision/revremark, [t] revision/authorinitials, block
@section [t] revision/authorinitials[1]
@subheading Name

[t] revision/authorinitials[1]
@subheading Synopsis

@example
<xsl:template match="revision/authorinitials[1]" />
@end example

@node [t] revision/revremark, [t] revision/revdescription, [t] revision/authorinitials[1], block
@section [t] revision/revremark
@subheading Name

[t] revision/revremark
@subheading Synopsis

@example
<xsl:template match="revision/revremark" />
@end example

@node [t] revision/revdescription, [t] ackno, [t] revision/revremark, block
@section [t] revision/revdescription
@subheading Name

[t] revision/revdescription
@subheading Synopsis

@example
<xsl:template match="revision/revdescription" />
@end example

@node [t] ackno, , [t] revision/revdescription, block
@section [t] ackno
@subheading Name

[t] ackno
@subheading Synopsis

@example
<xsl:template match="ackno" />
@end example

@node caption, formal, block, Top
@chapter caption

@menu
* [T] make-caption::            Render as a `caption'
@end menu

@node [T] make-caption, , , caption
@section [T] make-caption
@subheading Name

[T] make-caption --- Render as a `caption'
@subheading Synopsis

@example
<xsl:template name="make-caption">
  <xsl:param name="content">
    <xsl:apply-templates select="." mode="for-title" />
  </xsl:param></xsl:template>
@end example
@subheading Description

This template renders content (usually titles in certain block objects) 
as a `caption'.  What this exactly means depends on the value 
of the @code{captions-display-as-headings} parameter.
@subheading Parameters

@table @asis

@item @code{content}
The result tree fragment to render.  If not specified, defaults to
applying @code{for-title} mode to the 
@emph{context} node.
@end table

@node formal, synop, caption, Top
@chapter formal

@menu
* [T] formal-object::           Undocumented
* [T] formal-object-title::     Undocumented
* [T] informal-object::         Undocumented
* [T] semiformal-object::       Undocumented
* [t] figure|table|example::
* [t] equation::
* [t] informalfigure::
* [t] informalexample::
* [t] informaltable::
* [t] informalequation::
@end menu

@node [T] formal-object, [T] formal-object-title, , formal
@section [T] formal-object
@subheading Name

[T] formal-object --- Undocumented
@subheading Synopsis

@example
<xsl:template name="formal-object" />
@end example

@node [T] formal-object-title, [T] informal-object, [T] formal-object, formal
@section [T] formal-object-title
@subheading Name

[T] formal-object-title --- Undocumented
@subheading Synopsis

@example
<xsl:template name="formal-object-title" />
@end example

@node [T] informal-object, [T] semiformal-object, [T] formal-object-title, formal
@section [T] informal-object
@subheading Name

[T] informal-object --- Undocumented
@subheading Synopsis

@example
<xsl:template name="informal-object" />
@end example

@node [T] semiformal-object, [t] figure|table|example, [T] informal-object, formal
@section [T] semiformal-object
@subheading Name

[T] semiformal-object --- Undocumented
@subheading Synopsis

@example
<xsl:template name="semiformal-object" />
@end example

@node [t] figure|table|example, [t] equation, [T] semiformal-object, formal
@section [t] figure|table|example
@subheading Name

[t] figure|table|example
@subheading Synopsis

@example
<xsl:template match="figure|table|example" />
@end example

@node [t] equation, [t] informalfigure, [t] figure|table|example, formal
@section [t] equation
@subheading Name

[t] equation
@subheading Synopsis

@example
<xsl:template match="equation" />
@end example

@node [t] informalfigure, [t] informalexample, [t] equation, formal
@section [t] informalfigure
@subheading Name

[t] informalfigure
@subheading Synopsis

@example
<xsl:template match="informalfigure" />
@end example

@node [t] informalexample, [t] informaltable, [t] informalfigure, formal
@section [t] informalexample
@subheading Name

[t] informalexample
@subheading Synopsis

@example
<xsl:template match="informalexample" />
@end example

@node [t] informaltable, [t] informalequation, [t] informalexample, formal
@section [t] informaltable
@subheading Name

[t] informaltable
@subheading Synopsis

@example
<xsl:template match="informaltable" />
@end example

@node [t] informalequation, , [t] informaltable, formal
@section [t] informalequation
@subheading Name

[t] informalequation
@subheading Synopsis

@example
<xsl:template match="informalequation" />
@end example

@node synop, verbatim, formal, Top
@chapter synop

@menu
* [M] no-inline-markup::        Plain text synopses
* [t] synopsis::
* [t no-inline-markup] *::
* [t no-inline-markup] text(): [t no-inline-markup] text[].
* [t] cmdsynopsis::
* [t cmdsynopsis] *::
* [t cmdsynopsis] sbr::
* [t cmdsynopsis] command::
* [t cmdsynopsis] group|arg::
* [t cmdsynopsis] group/*::
* [t cmdsynopsis] group/group::
* [t cmdsynopsis] group/option::
* [t cmdsynopsis] group/arg::
* [t cmdsynopsis] synopfragment|synopfragmentref::
* [t] funcsynopsis::
* [t funcsynopsis] *::
* [t funcsynopsis] funcsynopsisinfo::
* [T] funcprototype::           Undocumented
* [t funcsynopsis] modifier::
* [t funcsynopsis] funcdef::
* [t funcsynopsis] function::
* [t funcsynopsis] void::
* [t funcsynopsis] varargs::
* [t funcsynopsis] paramdef::
* [t funcsynopsis] paramdef/parameter::
* [t funcsynopsis] funcparams::
@end menu

@node [M] no-inline-markup, [t] synopsis, , synop
@section [M] no-inline-markup
@subheading Name

[M] no-inline-markup --- Plain text synopses
@subheading Description

Info uses decorations to represent semantic markup, which
is undesirable in a verbatim synopsis.  So we use
@code{verbatim} to not use Texinfo's semantic markup. 

However, we lose the ability to make links :(

@node [t] synopsis, [t no-inline-markup] *, [M] no-inline-markup, synop
@section [t] synopsis
@subheading Name

[t] synopsis
@subheading Synopsis

@example
<xsl:template match="synopsis" />
@end example

@node [t no-inline-markup] *, [t no-inline-markup] text[], [t] synopsis, synop
@section [t no-inline-markup] *
@subheading Name

[t no-inline-markup] *
@subheading Synopsis

@example
<xsl:template match="*" mode="no-inline-markup" />
@end example

@node [t no-inline-markup] text[], [t] cmdsynopsis, [t no-inline-markup] *, synop
@section [t no-inline-markup] text()
@subheading Name

[t no-inline-markup] text()
@subheading Synopsis

@example
<xsl:template match="text()" mode="no-inline-markup" />
@end example

@node [t] cmdsynopsis, [t cmdsynopsis] *, [t no-inline-markup] text[], synop
@section [t] cmdsynopsis
@subheading Name

[t] cmdsynopsis
@subheading Synopsis

@example
<xsl:template match="cmdsynopsis" />
@end example

@node [t cmdsynopsis] *, [t cmdsynopsis] sbr, [t] cmdsynopsis, synop
@section [t cmdsynopsis] *
@subheading Name

[t cmdsynopsis] *
@subheading Synopsis

@example
<xsl:template match="*" mode="cmdsynopsis" />
@end example

@node [t cmdsynopsis] sbr, [t cmdsynopsis] command, [t cmdsynopsis] *, synop
@section [t cmdsynopsis] sbr
@subheading Name

[t cmdsynopsis] sbr
@subheading Synopsis

@example
<xsl:template match="sbr" mode="cmdsynopsis" />
@end example

@node [t cmdsynopsis] command, [t cmdsynopsis] group|arg, [t cmdsynopsis] sbr, synop
@section [t cmdsynopsis] command
@subheading Name

[t cmdsynopsis] command
@subheading Synopsis

@example
<xsl:template match="command" mode="cmdsynopsis" />
@end example

@node [t cmdsynopsis] group|arg, [t cmdsynopsis] group/*, [t cmdsynopsis] command, synop
@section [t cmdsynopsis] group|arg
@subheading Name

[t cmdsynopsis] group|arg
@subheading Synopsis

@example
<xsl:template match="group|arg" mode="cmdsynopsis" />
@end example

@node [t cmdsynopsis] group/*, [t cmdsynopsis] group/group, [t cmdsynopsis] group|arg, synop
@section [t cmdsynopsis] group/*
@subheading Name

[t cmdsynopsis] group/*
@subheading Synopsis

@example
<xsl:template match="group/*" mode="cmdsynopsis" priority="2.0" />
@end example

@node [t cmdsynopsis] group/group, [t cmdsynopsis] group/option, [t cmdsynopsis] group/*, synop
@section [t cmdsynopsis] group/group
@subheading Name

[t cmdsynopsis] group/group
@subheading Synopsis

@example
<xsl:template match="group/group" mode="cmdsynopsis" priority="2.5" />
@end example

@node [t cmdsynopsis] group/option, [t cmdsynopsis] group/arg, [t cmdsynopsis] group/group, synop
@section [t cmdsynopsis] group/option
@subheading Name

[t cmdsynopsis] group/option
@subheading Synopsis

@example
<xsl:template match="group/option" mode="cmdsynopsis" priority="2.5" />
@end example

@node [t cmdsynopsis] group/arg, [t cmdsynopsis] synopfragment|synopfragmentref, [t cmdsynopsis] group/option, synop
@section [t cmdsynopsis] group/arg
@subheading Name

[t cmdsynopsis] group/arg
@subheading Synopsis

@example
<xsl:template match="group/arg" mode="cmdsynopsis" priority="2.5" />
@end example

@node [t cmdsynopsis] synopfragment|synopfragmentref, [t] funcsynopsis, [t cmdsynopsis] group/arg, synop
@section [t cmdsynopsis] synopfragment|synopfragmentref
@subheading Name

[t cmdsynopsis] synopfragment|synopfragmentref
@subheading Synopsis

@example
<xsl:template match="synopfragment|synopfragmentref" mode="cmdsynopsis" />
@end example

@node [t] funcsynopsis, [t funcsynopsis] *, [t cmdsynopsis] synopfragment|synopfragmentref, synop
@section [t] funcsynopsis
@subheading Name

[t] funcsynopsis
@subheading Synopsis

@example
<xsl:template match="funcsynopsis" />
@end example

@node [t funcsynopsis] *, [t funcsynopsis] funcsynopsisinfo, [t] funcsynopsis, synop
@section [t funcsynopsis] *
@subheading Name

[t funcsynopsis] *
@subheading Synopsis

@example
<xsl:template match="*" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] funcsynopsisinfo, [T] funcprototype, [t funcsynopsis] *, synop
@section [t funcsynopsis] funcsynopsisinfo
@subheading Name

[t funcsynopsis] funcsynopsisinfo
@subheading Synopsis

@example
<xsl:template match="funcsynopsisinfo" mode="funcsynopsis" />
@end example

@node [T] funcprototype, [t funcsynopsis] modifier, [t funcsynopsis] funcsynopsisinfo, synop
@section [T] funcprototype
@subheading Name

[T] funcprototype --- Undocumented
@subheading Synopsis

@example
<xsl:template match="funcprototype" name="funcprototype" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] modifier, [t funcsynopsis] funcdef, [T] funcprototype, synop
@section [t funcsynopsis] modifier
@subheading Name

[t funcsynopsis] modifier
@subheading Synopsis

@example
<xsl:template match="modifier" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] funcdef, [t funcsynopsis] function, [t funcsynopsis] modifier, synop
@section [t funcsynopsis] funcdef
@subheading Name

[t funcsynopsis] funcdef
@subheading Synopsis

@example
<xsl:template match="funcdef" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] function, [t funcsynopsis] void, [t funcsynopsis] funcdef, synop
@section [t funcsynopsis] function
@subheading Name

[t funcsynopsis] function
@subheading Synopsis

@example
<xsl:template match="function" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] void, [t funcsynopsis] varargs, [t funcsynopsis] function, synop
@section [t funcsynopsis] void
@subheading Name

[t funcsynopsis] void
@subheading Synopsis

@example
<xsl:template match="void" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] varargs, [t funcsynopsis] paramdef, [t funcsynopsis] void, synop
@section [t funcsynopsis] varargs
@subheading Name

[t funcsynopsis] varargs
@subheading Synopsis

@example
<xsl:template match="varargs" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] paramdef, [t funcsynopsis] paramdef/parameter, [t funcsynopsis] varargs, synop
@section [t funcsynopsis] paramdef
@subheading Name

[t funcsynopsis] paramdef
@subheading Synopsis

@example
<xsl:template match="paramdef" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] paramdef/parameter, [t funcsynopsis] funcparams, [t funcsynopsis] paramdef, synop
@section [t funcsynopsis] paramdef/parameter
@subheading Name

[t funcsynopsis] paramdef/parameter
@subheading Synopsis

@example
<xsl:template match="paramdef/parameter" mode="funcsynopsis" />
@end example

@node [t funcsynopsis] funcparams, , [t funcsynopsis] paramdef/parameter, synop
@section [t funcsynopsis] funcparams
@subheading Name

[t funcsynopsis] funcparams
@subheading Synopsis

@example
<xsl:template match="funcparams" mode="funcsynopsis" />
@end example

@node verbatim, footnote, synop, Top
@chapter verbatim
@section verbatim

These templates transform DocBook verbatim environments to their
Texinfo equivalents.
@subsection Verbatim environments: processing expectations

The verbatim environments in the printed output (TeX) are not very wide,
and TeX will choke on lines that ordinarily fit comfortably on the screen
in Info and HTML output (an `overfull @code{@@hbox}').  
So if you want Texinfo printed output, trim down the offending lines in the 
verbatim environments.  The stylesheets cannot do that for you.

@menu
* [t] literallayout[@@class='monospaced']::
* [t] literallayout::
* [t] programlisting|screen::
* [t] address::
@end menu

@node [t] literallayout[@@class='monospaced'], [t] literallayout, , verbatim
@section [t] literallayout[@@class='monospaced']
@subheading Name

[t] literallayout[@@class='monospaced']
@subheading Synopsis

@example
<xsl:template match="literallayout[@@class='monospaced']" />
@end example

@node [t] literallayout, [t] programlisting|screen, [t] literallayout[@@class='monospaced'], verbatim
@section [t] literallayout
@subheading Name

[t] literallayout
@subheading Synopsis

@example
<xsl:template match="literallayout" />
@end example

@node [t] programlisting|screen, [t] address, [t] literallayout, verbatim
@section [t] programlisting|screen
@subheading Name

[t] programlisting|screen
@subheading Synopsis

@example
<xsl:template match="programlisting|screen" />
@end example

@node [t] address, , [t] programlisting|screen, verbatim
@section [t] address
@subheading Name

[t] address
@subheading Synopsis

@example
<xsl:template match="address" />
@end example

@node footnote, force-inline, verbatim, Top
@chapter footnote

@menu
* [t] footnote::
* [t] footnoteref::
@end menu

@node [t] footnote, [t] footnoteref, , footnote
@section [t] footnote
@subheading Name

[t] footnote
@subheading Synopsis

@example
<xsl:template match="footnote" />
@end example

@node [t] footnoteref, , [t] footnote, footnote
@section [t] footnoteref
@subheading Name

[t] footnoteref
@subheading Synopsis

@example
<xsl:template match="footnoteref" />
@end example

@node force-inline, inline, footnote, Top
@chapter force-inline

@menu
* [M] coerce-into-inline::      Process only inline content
* [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset::
* [t coerce-into-inline] para|simpara::
* [t coerce-into-inline] *|text(): [t coerce-into-inline] *|text[].
@end menu

@node [M] coerce-into-inline, [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset, , force-inline
@section [M] coerce-into-inline
@subheading Name

[M] coerce-into-inline --- Process only inline content
@subheading Description

A few elements in DocBook, namely @code{entry}
and @code{footnote}, have content models
that allow block-level content (as well as inline-level content), but
the mapping to Texinfo does not allow block-level content.
This mode selects only the inline content and loudly complains to the
user if block-level elements are found.

Additionally, simple paragraphs are converted to inline content.

@node [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset, [t coerce-into-inline] para|simpara, [M] coerce-into-inline, force-inline
@section [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset
@subheading Name

[t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist|          simplelist|variablelist|          caution|important|note|tip|warning|          literallayout|programlisting|programlistingco|          screen|screenco|screenshot|          synopsis|cmdsynopsis|funcsynopsis|          classsynopsis|fieldsynopsis|          constructorsynopsis|destructorsynopsis|methodsynopsis|          formalpara|          address|blockquote|          graphic|graphicco|mediaobject|mediaobjectco|          informalequation|informalexample|informalfigure|informaltable|          equation|example|figure|table|          msgset|procedure|qandaset
@subheading Synopsis

@example
<xsl:template match="calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist|          simplelist|variablelist|          caution|important|note|tip|warning|          literallayout|programlisting|programlistingco|          screen|screenco|screenshot|          synopsis|cmdsynopsis|funcsynopsis|          classsynopsis|fieldsynopsis|          constructorsynopsis|destructorsynopsis|methodsynopsis|          formalpara|          address|blockquote|          graphic|graphicco|mediaobject|mediaobjectco|          informalequation|informalexample|informalfigure|informaltable|          equation|example|figure|table|          msgset|procedure|qandaset" mode="coerce-into-inline" />
@end example

@node [t coerce-into-inline] para|simpara, [t coerce-into-inline] *|text[], [t coerce-into-inline] calloutlist|glosslist|itemizedlist|orderedlist|segmentedlist| simplelist|variablelist| caution|important|note|tip|warning| literallayout|programlisting|programlistingco| screen|screenco|screenshot| synopsis|cmdsynopsis|funcsynopsis| classsynopsis|fieldsynopsis| constructorsynopsis|destructorsynopsis|methodsynopsis| formalpara| address|blockquote| graphic|graphicco|mediaobject|mediaobjectco| informalequation|informalexample|informalfigure|informaltable| equation|example|figure|table| msgset|procedure|qandaset, force-inline
@section [t coerce-into-inline] para|simpara
@subheading Name

[t coerce-into-inline] para|simpara
@subheading Synopsis

@example
<xsl:template match="para|simpara" mode="coerce-into-inline" />
@end example

@node [t coerce-into-inline] *|text[], , [t coerce-into-inline] para|simpara, force-inline
@section [t coerce-into-inline] *|text()
@subheading Name

[t coerce-into-inline] *|text()
@subheading Synopsis

@example
<xsl:template match="*|text()" mode="coerce-into-inline" />
@end example

@node inline, math, force-inline, Top
@chapter inline
@section inline

These are the templates for character inline-level markup.

@menu
* [T] inline-plain::            Undocumented
* [T] inline-monospace::        Undocumented
* [T] inline-bold::             Undocumented
* [T] inline-italic::           Undocumented
* [T] inline-roman::            Undocumented
* [T] inline-superscript::      Undocumented
* [T] inline-subscript::        Undocumented
* [T] inline-markup-emph::      Undocumented
* [T] inline-markup-code::      Undocumented
* [T] inline-markup-samp::      Undocumented
* [T] inline-markup-cite::      Undocumented
* [T] inline-markup-email::     Undocumented
* [T] inline-markup-dfn::       Undocumented
* [T] inline-markup-env::       Undocumented
* [T] inline-markup-file::      Undocumented
* [T] inline-markup-sc::        Undocumented
* [T] inline-markup-acronym::   Undocumented
* [T] inline-markup-strong::    Undocumented
* [T] inline-markup-key::       Undocumented
* [T] inline-markup-kbd::       Undocumented
* [T] inline-markup-var::       Undocumented
* [t] personname::
* [t] author|editor|othercredit|authorinitials::
* [t] accel::
* [t] action::
* [t] application::
* [t] classname::
* [t] exceptionname::
* [t] interfacename::
* [t] methodname::
* [t] command::
* [t] computeroutput::
* [t] constant::
* [t] database::
* [t] errorcode::
* [t] errorname::
* [t] errortype::
* [t] errortext::
* [t] envar::
* [t] filename::
* [t] refentrytitle/function::
* [t] function::
* [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu::
* [t] hardware::
* [t] interface::
* [t] interfacedefinition::
* [t] keycap::
* [t] keycode::
* [t] keysym::
* [t] literal::
* [t] medialabel::
* [t] shortcut::
* [t] mousebutton::
* [t] option::
* [t] parameter::
* [t] property::
* [t] prompt::
* [t] replaceable::
* [t] returnvalue::
* [t] structfield::
* [t] structname::
* [t] symbol::
* [t] systemitem::
* [t] token::
* [t] type::
* [t] userinput::
* [t] abbrev::
* [t] acronym::
* [t] citerefentry::
* [t] citetitle::
* [t] code::
* [t] emphasis[@@role='strong' or @@role='bold' or parent;;emphasis]::
* [t] emphasis::
* [t] foreignphrase::
* [t] markup::
* [t] phrase::
* [t] quote::
* [t] varname::
* [t] wordasword::
* [t] lineannotation::
* [t] superscript::
* [t] subscript::
* [t] trademark::
* [t] firstterm::
* [t] glossterm::
* [t] sgmltag::
* [T] format-sgmltag::          Undocumented
* [t] email::
* [t] keycombo::
* [t] menuchoice::
* [T] format-menuchoice::       Undocumented
* [t] optional::
* [t] citation::
* [t] comment|remark::
* [t] productname|productnumber::
* [t] pob|street|city|state|postcode|country|phone|fax|otheraddr::
* [t] firstname|surname|lineage|othername|honorific::
@end menu

@node [T] inline-plain, [T] inline-monospace, , inline
@section [T] inline-plain
@subheading Name

[T] inline-plain --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-plain">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-monospace, [T] inline-bold, [T] inline-plain, inline
@section [T] inline-monospace
@subheading Name

[T] inline-monospace --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-monospace">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-bold, [T] inline-italic, [T] inline-monospace, inline
@section [T] inline-bold
@subheading Name

[T] inline-bold --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-bold">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-italic, [T] inline-roman, [T] inline-bold, inline
@section [T] inline-italic
@subheading Name

[T] inline-italic --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-italic">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-roman, [T] inline-superscript, [T] inline-italic, inline
@section [T] inline-roman
@subheading Name

[T] inline-roman --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-roman">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-superscript, [T] inline-subscript, [T] inline-roman, inline
@section [T] inline-superscript
@subheading Name

[T] inline-superscript --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-superscript">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-subscript, [T] inline-markup-emph, [T] inline-superscript, inline
@section [T] inline-subscript
@subheading Name

[T] inline-subscript --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-subscript">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-emph, [T] inline-markup-code, [T] inline-subscript, inline
@section [T] inline-markup-emph
@subheading Name

[T] inline-markup-emph --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-emph">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-code, [T] inline-markup-samp, [T] inline-markup-emph, inline
@section [T] inline-markup-code
@subheading Name

[T] inline-markup-code --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-code">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-samp, [T] inline-markup-cite, [T] inline-markup-code, inline
@section [T] inline-markup-samp
@subheading Name

[T] inline-markup-samp --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-samp">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-cite, [T] inline-markup-email, [T] inline-markup-samp, inline
@section [T] inline-markup-cite
@subheading Name

[T] inline-markup-cite --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-cite">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-email, [T] inline-markup-dfn, [T] inline-markup-cite, inline
@section [T] inline-markup-email
@subheading Name

[T] inline-markup-email --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-email">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-dfn, [T] inline-markup-env, [T] inline-markup-email, inline
@section [T] inline-markup-dfn
@subheading Name

[T] inline-markup-dfn --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-dfn">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-env, [T] inline-markup-file, [T] inline-markup-dfn, inline
@section [T] inline-markup-env
@subheading Name

[T] inline-markup-env --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-env">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-file, [T] inline-markup-sc, [T] inline-markup-env, inline
@section [T] inline-markup-file
@subheading Name

[T] inline-markup-file --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-file">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-sc, [T] inline-markup-acronym, [T] inline-markup-file, inline
@section [T] inline-markup-sc
@subheading Name

[T] inline-markup-sc --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-sc">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-acronym, [T] inline-markup-strong, [T] inline-markup-sc, inline
@section [T] inline-markup-acronym
@subheading Name

[T] inline-markup-acronym --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-acronym">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-strong, [T] inline-markup-key, [T] inline-markup-acronym, inline
@section [T] inline-markup-strong
@subheading Name

[T] inline-markup-strong --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-strong">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-key, [T] inline-markup-kbd, [T] inline-markup-strong, inline
@section [T] inline-markup-key
@subheading Name

[T] inline-markup-key --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-key">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-kbd, [T] inline-markup-var, [T] inline-markup-key, inline
@section [T] inline-markup-kbd
@subheading Name

[T] inline-markup-kbd --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-kbd">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [T] inline-markup-var, [t] personname, [T] inline-markup-kbd, inline
@section [T] inline-markup-var
@subheading Name

[T] inline-markup-var --- Undocumented
@subheading Synopsis

@example
<xsl:template name="inline-markup-var">
  <xsl:param name="content">
    <xsl:apply-templates />
  </xsl:param></xsl:template>
@end example

@node [t] personname, [t] author|editor|othercredit|authorinitials, [T] inline-markup-var, inline
@section [t] personname
@subheading Name

[t] personname
@subheading Synopsis

@example
<xsl:template match="personname" />
@end example

@node [t] author|editor|othercredit|authorinitials, [t] accel, [t] personname, inline
@section [t] author|editor|othercredit|authorinitials
@subheading Name

[t] author|editor|othercredit|authorinitials
@subheading Synopsis

@example
<xsl:template match="author|editor|othercredit|authorinitials" />
@end example

@node [t] accel, [t] action, [t] author|editor|othercredit|authorinitials, inline
@section [t] accel
@subheading Name

[t] accel
@subheading Synopsis

@example
<xsl:template match="accel" />
@end example

@node [t] action, [t] application, [t] accel, inline
@section [t] action
@subheading Name

[t] action
@subheading Synopsis

@example
<xsl:template match="action" />
@end example

@node [t] application, [t] classname, [t] action, inline
@section [t] application
@subheading Name

[t] application
@subheading Synopsis

@example
<xsl:template match="application" />
@end example

@node [t] classname, [t] exceptionname, [t] application, inline
@section [t] classname
@subheading Name

[t] classname
@subheading Synopsis

@example
<xsl:template match="classname" />
@end example

@node [t] exceptionname, [t] interfacename, [t] classname, inline
@section [t] exceptionname
@subheading Name

[t] exceptionname
@subheading Synopsis

@example
<xsl:template match="exceptionname" />
@end example

@node [t] interfacename, [t] methodname, [t] exceptionname, inline
@section [t] interfacename
@subheading Name

[t] interfacename
@subheading Synopsis

@example
<xsl:template match="interfacename" />
@end example

@node [t] methodname, [t] command, [t] interfacename, inline
@section [t] methodname
@subheading Name

[t] methodname
@subheading Synopsis

@example
<xsl:template match="methodname" />
@end example

@node [t] command, [t] computeroutput, [t] methodname, inline
@section [t] command
@subheading Name

[t] command
@subheading Synopsis

@example
<xsl:template match="command" />
@end example

@node [t] computeroutput, [t] constant, [t] command, inline
@section [t] computeroutput
@subheading Name

[t] computeroutput
@subheading Synopsis

@example
<xsl:template match="computeroutput" />
@end example

@node [t] constant, [t] database, [t] computeroutput, inline
@section [t] constant
@subheading Name

[t] constant
@subheading Synopsis

@example
<xsl:template match="constant" />
@end example

@node [t] database, [t] errorcode, [t] constant, inline
@section [t] database
@subheading Name

[t] database
@subheading Synopsis

@example
<xsl:template match="database" />
@end example

@node [t] errorcode, [t] errorname, [t] database, inline
@section [t] errorcode
@subheading Name

[t] errorcode
@subheading Synopsis

@example
<xsl:template match="errorcode" />
@end example

@node [t] errorname, [t] errortype, [t] errorcode, inline
@section [t] errorname
@subheading Name

[t] errorname
@subheading Synopsis

@example
<xsl:template match="errorname" />
@end example

@node [t] errortype, [t] errortext, [t] errorname, inline
@section [t] errortype
@subheading Name

[t] errortype
@subheading Synopsis

@example
<xsl:template match="errortype" />
@end example

@node [t] errortext, [t] envar, [t] errortype, inline
@section [t] errortext
@subheading Name

[t] errortext
@subheading Synopsis

@example
<xsl:template match="errortext" />
@end example

@node [t] envar, [t] filename, [t] errortext, inline
@section [t] envar
@subheading Name

[t] envar
@subheading Synopsis

@example
<xsl:template match="envar" />
@end example

@node [t] filename, [t] refentrytitle/function, [t] envar, inline
@section [t] filename
@subheading Name

[t] filename
@subheading Synopsis

@example
<xsl:template match="filename" />
@end example

@node [t] refentrytitle/function, [t] function, [t] filename, inline
@section [t] refentrytitle/function
@subheading Name

[t] refentrytitle/function
@subheading Synopsis

@example
<xsl:template match="refentrytitle/function" />
@end example

@node [t] function, [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu, [t] refentrytitle/function, inline
@section [t] function
@subheading Name

[t] function
@subheading Synopsis

@example
<xsl:template match="function" />
@end example

@node [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu, [t] hardware, [t] function, inline
@section [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu
@subheading Name

[t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu
@subheading Synopsis

@example
<xsl:template match="guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu" />
@end example

@node [t] hardware, [t] interface, [t] guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu, inline
@section [t] hardware
@subheading Name

[t] hardware
@subheading Synopsis

@example
<xsl:template match="hardware" />
@end example

@node [t] interface, [t] interfacedefinition, [t] hardware, inline
@section [t] interface
@subheading Name

[t] interface
@subheading Synopsis

@example
<xsl:template match="interface" />
@end example

@node [t] interfacedefinition, [t] keycap, [t] interface, inline
@section [t] interfacedefinition
@subheading Name

[t] interfacedefinition
@subheading Synopsis

@example
<xsl:template match="interfacedefinition" />
@end example

@node [t] keycap, [t] keycode, [t] interfacedefinition, inline
@section [t] keycap
@subheading Name

[t] keycap
@subheading Synopsis

@example
<xsl:template match="keycap" />
@end example

@node [t] keycode, [t] keysym, [t] keycap, inline
@section [t] keycode
@subheading Name

[t] keycode
@subheading Synopsis

@example
<xsl:template match="keycode" />
@end example

@node [t] keysym, [t] literal, [t] keycode, inline
@section [t] keysym
@subheading Name

[t] keysym
@subheading Synopsis

@example
<xsl:template match="keysym" />
@end example

@node [t] literal, [t] medialabel, [t] keysym, inline
@section [t] literal
@subheading Name

[t] literal
@subheading Synopsis

@example
<xsl:template match="literal" />
@end example

@node [t] medialabel, [t] shortcut, [t] literal, inline
@section [t] medialabel
@subheading Name

[t] medialabel
@subheading Synopsis

@example
<xsl:template match="medialabel" />
@end example

@node [t] shortcut, [t] mousebutton, [t] medialabel, inline
@section [t] shortcut
@subheading Name

[t] shortcut
@subheading Synopsis

@example
<xsl:template match="shortcut" />
@end example

@node [t] mousebutton, [t] option, [t] shortcut, inline
@section [t] mousebutton
@subheading Name

[t] mousebutton
@subheading Synopsis

@example
<xsl:template match="mousebutton" />
@end example

@node [t] option, [t] parameter, [t] mousebutton, inline
@section [t] option
@subheading Name

[t] option
@subheading Synopsis

@example
<xsl:template match="option" />
@end example

@node [t] parameter, [t] property, [t] option, inline
@section [t] parameter
@subheading Name

[t] parameter
@subheading Synopsis

@example
<xsl:template match="parameter" />
@end example

@node [t] property, [t] prompt, [t] parameter, inline
@section [t] property
@subheading Name

[t] property
@subheading Synopsis

@example
<xsl:template match="property" />
@end example

@node [t] prompt, [t] replaceable, [t] property, inline
@section [t] prompt
@subheading Name

[t] prompt
@subheading Synopsis

@example
<xsl:template match="prompt" />
@end example

@node [t] replaceable, [t] returnvalue, [t] prompt, inline
@section [t] replaceable
@subheading Name

[t] replaceable
@subheading Synopsis

@example
<xsl:template match="replaceable" />
@end example

@node [t] returnvalue, [t] structfield, [t] replaceable, inline
@section [t] returnvalue
@subheading Name

[t] returnvalue
@subheading Synopsis

@example
<xsl:template match="returnvalue" />
@end example

@node [t] structfield, [t] structname, [t] returnvalue, inline
@section [t] structfield
@subheading Name

[t] structfield
@subheading Synopsis

@example
<xsl:template match="structfield" />
@end example

@node [t] structname, [t] symbol, [t] structfield, inline
@section [t] structname
@subheading Name

[t] structname
@subheading Synopsis

@example
<xsl:template match="structname" />
@end example

@node [t] symbol, [t] systemitem, [t] structname, inline
@section [t] symbol
@subheading Name

[t] symbol
@subheading Synopsis

@example
<xsl:template match="symbol" />
@end example

@node [t] systemitem, [t] token, [t] symbol, inline
@section [t] systemitem
@subheading Name

[t] systemitem
@subheading Synopsis

@example
<xsl:template match="systemitem" />
@end example

@node [t] token, [t] type, [t] systemitem, inline
@section [t] token
@subheading Name

[t] token
@subheading Synopsis

@example
<xsl:template match="token" />
@end example

@node [t] type, [t] userinput, [t] token, inline
@section [t] type
@subheading Name

[t] type
@subheading Synopsis

@example
<xsl:template match="type" />
@end example

@node [t] userinput, [t] abbrev, [t] type, inline
@section [t] userinput
@subheading Name

[t] userinput
@subheading Synopsis

@example
<xsl:template match="userinput" />
@end example

@node [t] abbrev, [t] acronym, [t] userinput, inline
@section [t] abbrev
@subheading Name

[t] abbrev
@subheading Synopsis

@example
<xsl:template match="abbrev" />
@end example

@node [t] acronym, [t] citerefentry, [t] abbrev, inline
@section [t] acronym
@subheading Name

[t] acronym
@subheading Synopsis

@example
<xsl:template match="acronym" />
@end example

@node [t] citerefentry, [t] citetitle, [t] acronym, inline
@section [t] citerefentry
@subheading Name

[t] citerefentry
@subheading Synopsis

@example
<xsl:template match="citerefentry" />
@end example

@node [t] citetitle, [t] code, [t] citerefentry, inline
@section [t] citetitle
@subheading Name

[t] citetitle
@subheading Synopsis

@example
<xsl:template match="citetitle" />
@end example

@node [t] code, [t] emphasis[@@role='strong' or @@role='bold' or parent;;emphasis], [t] citetitle, inline
@section [t] code
@subheading Name

[t] code
@subheading Synopsis

@example
<xsl:template match="code" />
@end example

@node [t] emphasis[@@role='strong' or @@role='bold' or parent;;emphasis], [t] emphasis, [t] code, inline
@section [t] emphasis[@@role='strong' or @@role='bold' or parent::emphasis]
@subheading Name

[t] emphasis[@@role='strong' or @@role='bold' or parent::emphasis]
@subheading Synopsis

@example
<xsl:template match="emphasis[@@role='strong' or @@role='bold' or parent::emphasis]" />
@end example

@node [t] emphasis, [t] foreignphrase, [t] emphasis[@@role='strong' or @@role='bold' or parent;;emphasis], inline
@section [t] emphasis
@subheading Name

[t] emphasis
@subheading Synopsis

@example
<xsl:template match="emphasis" />
@end example

@node [t] foreignphrase, [t] markup, [t] emphasis, inline
@section [t] foreignphrase
@subheading Name

[t] foreignphrase
@subheading Synopsis

@example
<xsl:template match="foreignphrase" />
@end example

@node [t] markup, [t] phrase, [t] foreignphrase, inline
@section [t] markup
@subheading Name

[t] markup
@subheading Synopsis

@example
<xsl:template match="markup" />
@end example

@node [t] phrase, [t] quote, [t] markup, inline
@section [t] phrase
@subheading Name

[t] phrase
@subheading Synopsis

@example
<xsl:template match="phrase" />
@end example

@node [t] quote, [t] varname, [t] phrase, inline
@section [t] quote
@subheading Name

[t] quote
@subheading Synopsis

@example
<xsl:template match="quote" />
@end example

@node [t] varname, [t] wordasword, [t] quote, inline
@section [t] varname
@subheading Name

[t] varname
@subheading Synopsis

@example
<xsl:template match="varname" />
@end example

@node [t] wordasword, [t] lineannotation, [t] varname, inline
@section [t] wordasword
@subheading Name

[t] wordasword
@subheading Synopsis

@example
<xsl:template match="wordasword" />
@end example

@node [t] lineannotation, [t] superscript, [t] wordasword, inline
@section [t] lineannotation
@subheading Name

[t] lineannotation
@subheading Synopsis

@example
<xsl:template match="lineannotation" />
@end example

@node [t] superscript, [t] subscript, [t] lineannotation, inline
@section [t] superscript
@subheading Name

[t] superscript
@subheading Synopsis

@example
<xsl:template match="superscript" />
@end example

@node [t] subscript, [t] trademark, [t] superscript, inline
@section [t] subscript
@subheading Name

[t] subscript
@subheading Synopsis

@example
<xsl:template match="subscript" />
@end example

@node [t] trademark, [t] firstterm, [t] subscript, inline
@section [t] trademark
@subheading Name

[t] trademark
@subheading Synopsis

@example
<xsl:template match="trademark" />
@end example

@node [t] firstterm, [t] glossterm, [t] trademark, inline
@section [t] firstterm
@subheading Name

[t] firstterm
@subheading Synopsis

@example
<xsl:template match="firstterm" />
@end example

@node [t] glossterm, [t] sgmltag, [t] firstterm, inline
@section [t] glossterm
@subheading Name

[t] glossterm
@subheading Synopsis

@example
<xsl:template match="glossterm" />
@end example

@node [t] sgmltag, [T] format-sgmltag, [t] glossterm, inline
@section [t] sgmltag
@subheading Name

[t] sgmltag
@subheading Synopsis

@example
<xsl:template match="sgmltag" />
@end example

@node [T] format-sgmltag, [t] email, [t] sgmltag, inline
@section [T] format-sgmltag
@subheading Name

[T] format-sgmltag --- Undocumented
@subheading Synopsis

@example
<xsl:template name="format-sgmltag">
  <xsl:param name="class">
    <xsl:choose>
      <xsl:when test="@@class">
        <xsl:value-of select="@@class" />
      </xsl:when>
      <xsl:otherwise>element</xsl:otherwise>
    </xsl:choose>
  </xsl:param></xsl:template>
@end example

@node [t] email, [t] keycombo, [T] format-sgmltag, inline
@section [t] email
@subheading Name

[t] email
@subheading Synopsis

@example
<xsl:template match="email" />
@end example

@node [t] keycombo, [t] menuchoice, [t] email, inline
@section [t] keycombo
@subheading Name

[t] keycombo
@subheading Synopsis

@example
<xsl:template match="keycombo" />
@end example

@node [t] menuchoice, [T] format-menuchoice, [t] keycombo, inline
@section [t] menuchoice
@subheading Name

[t] menuchoice
@subheading Synopsis

@example
<xsl:template match="menuchoice" />
@end example

@node [T] format-menuchoice, [t] optional, [t] menuchoice, inline
@section [T] format-menuchoice
@subheading Name

[T] format-menuchoice --- Undocumented
@subheading Synopsis

@example
<xsl:template name="format-menuchoice">
  <xsl:param name="nodelist" select="guibutton|guiicon|guilabel|guimenu|guimenuitem|guisubmenu|interface" />
  <xsl:param name="count" select="1" /></xsl:template>
@end example

@node [t] optional, [t] citation, [T] format-menuchoice, inline
@section [t] optional
@subheading Name

[t] optional
@subheading Synopsis

@example
<xsl:template match="optional" />
@end example

@node [t] citation, [t] comment|remark, [t] optional, inline
@section [t] citation
@subheading Name

[t] citation
@subheading Synopsis

@example
<xsl:template match="citation" />
@end example

@node [t] comment|remark, [t] productname|productnumber, [t] citation, inline
@section [t] comment|remark
@subheading Name

[t] comment|remark
@subheading Synopsis

@example
<xsl:template match="comment|remark" />
@end example

@node [t] productname|productnumber, [t] pob|street|city|state|postcode|country|phone|fax|otheraddr, [t] comment|remark, inline
@section [t] productname|productnumber
@subheading Name

[t] productname|productnumber
@subheading Synopsis

@example
<xsl:template match="productname|productnumber" />
@end example

@node [t] pob|street|city|state|postcode|country|phone|fax|otheraddr, [t] firstname|surname|lineage|othername|honorific, [t] productname|productnumber, inline
@section [t] pob|street|city|state|postcode|country|phone|fax|otheraddr
@subheading Name

[t] pob|street|city|state|postcode|country|phone|fax|otheraddr
@subheading Synopsis

@example
<xsl:template match="pob|street|city|state|postcode|country|phone|fax|otheraddr" />
@end example

@node [t] firstname|surname|lineage|othername|honorific, , [t] pob|street|city|state|postcode|country|phone|fax|otheraddr, inline
@section [t] firstname|surname|lineage|othername|honorific
@subheading Name

[t] firstname|surname|lineage|othername|honorific
@subheading Synopsis

@example
<xsl:template match="firstname|surname|lineage|othername|honorific" />
@end example

@node math, qandaset, inline, Top
@chapter math
@section math

Currently we do not support the use of TeX for mathematics.

@menu
* [t] inlineequation::
* [t] alt::
@end menu

@node [t] inlineequation, [t] alt, , math
@section [t] inlineequation
@subheading Name

[t] inlineequation
@subheading Synopsis

@example
<xsl:template match="inlineequation" />
@end example

@node [t] alt, , [t] inlineequation, math
@section [t] alt
@subheading Name

[t] alt
@subheading Synopsis

@example
<xsl:template match="alt" />
@end example

@node qandaset, table, math, Top
@chapter qandaset

@menu
* [t] question|answer::
* [t] qandaentry::
* [t] qandaset|qandadiv::
* [t] label::
@end menu

@node [t] question|answer, [t] qandaentry, , qandaset
@section [t] question|answer
@subheading Name

[t] question|answer
@subheading Synopsis

@example
<xsl:template match="question|answer" />
@end example

@node [t] qandaentry, [t] qandaset|qandadiv, [t] question|answer, qandaset
@section [t] qandaentry
@subheading Name

[t] qandaentry
@subheading Synopsis

@example
<xsl:template match="qandaentry" />
@end example

@node [t] qandaset|qandadiv, [t] label, [t] qandaentry, qandaset
@section [t] qandaset|qandadiv
@subheading Name

[t] qandaset|qandadiv
@subheading Synopsis

@example
<xsl:template match="qandaset|qandadiv" />
@end example

@node [t] label, , [t] qandaset|qandadiv, qandaset
@section [t] label
@subheading Name

[t] label
@subheading Synopsis

@example
<xsl:template match="label" />
@end example

@node table, xref, qandaset, Top
@chapter table

@menu
* [t] tgroup::
* [t] colspec::
* [t] spanspec::
* [t] thead|tfoot|tbody::
* [t] thead/colspec::
* [t] tfoot/colspec::
* [t] row::
* [t] entry::
* [T] get-proportional-colwidth::   Get the proportional width as specified
                                      in the given colspec 
@end menu

@node [t] tgroup, [t] colspec, , table
@section [t] tgroup
@subheading Name

[t] tgroup
@subheading Synopsis

@example
<xsl:template match="tgroup" />
@end example

@node [t] colspec, [t] spanspec, [t] tgroup, table
@section [t] colspec
@subheading Name

[t] colspec
@subheading Synopsis

@example
<xsl:template match="colspec" />
@end example

@node [t] spanspec, [t] thead|tfoot|tbody, [t] colspec, table
@section [t] spanspec
@subheading Name

[t] spanspec
@subheading Synopsis

@example
<xsl:template match="spanspec" />
@end example

@node [t] thead|tfoot|tbody, [t] thead/colspec, [t] spanspec, table
@section [t] thead|tfoot|tbody
@subheading Name

[t] thead|tfoot|tbody
@subheading Synopsis

@example
<xsl:template match="thead|tfoot|tbody" />
@end example

@node [t] thead/colspec, [t] tfoot/colspec, [t] thead|tfoot|tbody, table
@section [t] thead/colspec
@subheading Name

[t] thead/colspec
@subheading Synopsis

@example
<xsl:template match="thead/colspec" />
@end example

@node [t] tfoot/colspec, [t] row, [t] thead/colspec, table
@section [t] tfoot/colspec
@subheading Name

[t] tfoot/colspec
@subheading Synopsis

@example
<xsl:template match="tfoot/colspec" />
@end example

@node [t] row, [t] entry, [t] tfoot/colspec, table
@section [t] row
@subheading Name

[t] row
@subheading Synopsis

@example
<xsl:template match="row" />
@end example

@node [t] entry, [T] get-proportional-colwidth, [t] row, table
@section [t] entry
@subheading Name

[t] entry
@subheading Synopsis

@example
<xsl:template match="entry" />
@end example

@node [T] get-proportional-colwidth, , [t] entry, table
@section [T] get-proportional-colwidth
@subheading Name

[T] get-proportional-colwidth --- 
Get the proportional width as specified in the given @code{colspec}
@subheading Synopsis

@example
<xsl:template name="get-proportional-colwidth">
  <xsl:param name="colspec" select="." /></xsl:template>
@end example
@subheading Description

In CALS tables, the @code{colspec} has
the attribute @code{colwidth}
which can specify either absolute column widths, relative column widths,
or a mixture of both measures.  Texinfo only supports relative column widths.
This template coerces all absolute column widths into relative ones, 
as follows:

@table @asis

@item No width is specified
Then the column is assumed to have a relative column width of one.

@item Absolute widths
These are simply translated to a relative column width of one.

@item Mixture
These are of the form @samp{@var{P}*+@var{M}}, where @var{P} is the relative column width, and @var{M} is an absolute column width.
The sign may also be minus instead of plus, with the obvious meaning.
This template drops the @var{M} part and its sign.
@end table
@subheading Parameters

@table @asis

@item @code{colspec}
A node-set that is the @code{colspec}
element to determine widths for.
@end table

@node xref, glossary, table, Top
@chapter xref

@menu
* [T] anchor::                  Undocumented
* [t] anchor::
* [T] check-xref::              Undocumented
* [t] xref::
* [t] link::
* [t] ulink::
* [t] olink::
* [M] xref-to::                 Give cross-reference markup
* [t xref-to] *::
* [t xref-to] co::
@end menu

@node [T] anchor, [t] anchor, , xref
@section [T] anchor
@subheading Name

[T] anchor --- Undocumented
@subheading Synopsis

@example
<xsl:template name="anchor" />
@end example

@node [t] anchor, [T] check-xref, [T] anchor, xref
@section [t] anchor
@subheading Name

[t] anchor
@subheading Synopsis

@example
<xsl:template match="anchor" />
@end example

@node [T] check-xref, [t] xref, [t] anchor, xref
@section [T] check-xref
@subheading Name

[T] check-xref --- Undocumented
@subheading Synopsis

@example
<xsl:template name="check-xref">
  <xsl:param name="target" />
  <xsl:param name="content" />
  <xsl:param name="bad-content" /></xsl:template>
@end example

@node [t] xref, [t] link, [T] check-xref, xref
@section [t] xref
@subheading Name

[t] xref
@subheading Synopsis

@example
<xsl:template match="xref" />
@end example

@node [t] link, [t] ulink, [t] xref, xref
@section [t] link
@subheading Name

[t] link
@subheading Synopsis

@example
<xsl:template match="link" />
@end example

@node [t] ulink, [t] olink, [t] link, xref
@section [t] ulink
@subheading Name

[t] ulink
@subheading Synopsis

@example
<xsl:template match="ulink" />
@end example

@node [t] olink, [M] xref-to, [t] ulink, xref
@section [t] olink
@subheading Name

[t] olink
@subheading Synopsis

@example
<xsl:template match="olink" />
@end example

@node [M] xref-to, [t xref-to] *, [t] olink, xref
@section [M] xref-to
@subheading Name

[M] xref-to --- Give cross-reference markup
@subheading Description

Processing an element with this mode returns the markup/text that should
be used for referring to it in cross-references.

Since Texinfo already handles cross references to nodes, this mode
does mostly nothing.  FIXME: However we need something for anchors...

@node [t xref-to] *, [t xref-to] co, [M] xref-to, xref
@section [t xref-to] *
@subheading Name

[t xref-to] *
@subheading Synopsis

@example
<xsl:template match="*" mode="xref-to" />
@end example

@node [t xref-to] co, , [t xref-to] *, xref
@section [t xref-to] co
@subheading Name

[t xref-to] co
@subheading Synopsis

@example
<xsl:template match="co" mode="xref-to" />
@end example

@node glossary, lists, xref, Top
@chapter glossary

@menu
* [t] glossary::
* [t] glosslist::
* [t] glossdiv::
* [t] glossentry::
* [t] glossentry/glossterm::
* [t] glossentry/acronym::
* [t] glossentry/abbrev::
* [t] glossentry/revhistory::
* [t] glossentry/glossdef::
* [t] glossentry/glosssee|glossseealso::
* [t glosssee-xref] glossentry::
* [t glosssee-xref] glossentry/glossterm[1]::
* [t glosssee-xref] *::
@end menu

@node [t] glossary, [t] glosslist, , glossary
@section [t] glossary
@subheading Name

[t] glossary
@subheading Synopsis

@example
<xsl:template match="glossary" />
@end example

@node [t] glosslist, [t] glossdiv, [t] glossary, glossary
@section [t] glosslist
@subheading Name

[t] glosslist
@subheading Synopsis

@example
<xsl:template match="glosslist" />
@end example

@node [t] glossdiv, [t] glossentry, [t] glosslist, glossary
@section [t] glossdiv
@subheading Name

[t] glossdiv
@subheading Synopsis

@example
<xsl:template match="glossdiv" />
@end example

@node [t] glossentry, [t] glossentry/glossterm, [t] glossdiv, glossary
@section [t] glossentry
@subheading Name

[t] glossentry
@subheading Synopsis

@example
<xsl:template match="glossentry" />
@end example

@node [t] glossentry/glossterm, [t] glossentry/acronym, [t] glossentry, glossary
@section [t] glossentry/glossterm
@subheading Name

[t] glossentry/glossterm
@subheading Synopsis

@example
<xsl:template match="glossentry/glossterm" />
@end example

@node [t] glossentry/acronym, [t] glossentry/abbrev, [t] glossentry/glossterm, glossary
@section [t] glossentry/acronym
@subheading Name

[t] glossentry/acronym
@subheading Synopsis

@example
<xsl:template match="glossentry/acronym" />
@end example

@node [t] glossentry/abbrev, [t] glossentry/revhistory, [t] glossentry/acronym, glossary
@section [t] glossentry/abbrev
@subheading Name

[t] glossentry/abbrev
@subheading Synopsis

@example
<xsl:template match="glossentry/abbrev" />
@end example

@node [t] glossentry/revhistory, [t] glossentry/glossdef, [t] glossentry/abbrev, glossary
@section [t] glossentry/revhistory
@subheading Name

[t] glossentry/revhistory
@subheading Synopsis

@example
<xsl:template match="glossentry/revhistory" />
@end example

@node [t] glossentry/glossdef, [t] glossentry/glosssee|glossseealso, [t] glossentry/revhistory, glossary
@section [t] glossentry/glossdef
@subheading Name

[t] glossentry/glossdef
@subheading Synopsis

@example
<xsl:template match="glossentry/glossdef" />
@end example

@node [t] glossentry/glosssee|glossseealso, [t glosssee-xref] glossentry, [t] glossentry/glossdef, glossary
@section [t] glossentry/glosssee|glossseealso
@subheading Name

[t] glossentry/glosssee|glossseealso
@subheading Synopsis

@example
<xsl:template match="glossentry/glosssee|glossseealso" />
@end example

@node [t glosssee-xref] glossentry, [t glosssee-xref] glossentry/glossterm[1], [t] glossentry/glosssee|glossseealso, glossary
@section [t glosssee-xref] glossentry
@subheading Name

[t glosssee-xref] glossentry
@subheading Synopsis

@example
<xsl:template match="glossentry" mode="glosssee-xref" />
@end example

@node [t glosssee-xref] glossentry/glossterm[1], [t glosssee-xref] *, [t glosssee-xref] glossentry, glossary
@section [t glosssee-xref] glossentry/glossterm[1]
@subheading Name

[t glosssee-xref] glossentry/glossterm[1]
@subheading Synopsis

@example
<xsl:template match="glossentry/glossterm[1]" mode="glosssee-xref" />
@end example

@node [t glosssee-xref] *, , [t glosssee-xref] glossentry/glossterm[1], glossary
@section [t glosssee-xref] *
@subheading Name

[t glosssee-xref] *
@subheading Synopsis

@example
<xsl:template match="*" mode="glosssee-xref" />
@end example

@node lists, callout, glossary, Top
@chapter lists

@menu
* [t] itemizedlist::
* [t] orderedlist::
* [t] variablelist::
* [t] listitem::
* [t] varlistentry::
* [t] varlistentry/term::
* [t] varlistentry/listitem::
* [t] simplelist[@@type='horiz']::
* [t] simplelist::
* [t] simplelist[@@type='inline']::
* [T] simplelist-horiz::        Undocumented
* [T] simplelist-horiz-row::    Undocumented
* [T] simplelist-vert::         Undocumented
* [T] simplelist-vert-row::     Undocumented
* [t] member::
* [t] simplelist[@@type='inline']/member::
* [t] simplelist[@@type='inline']/member[1]::
* [t] procedure::
* [t] substeps::
* [t] step::
* [t] segmentedlist::
* [t] segtitle::
* [t segtitle-in-seg] segtitle::
* [t] seglistitem::
* [t] seg::
@end menu

@node [t] itemizedlist, [t] orderedlist, , lists
@section [t] itemizedlist
@subheading Name

[t] itemizedlist
@subheading Synopsis

@example
<xsl:template match="itemizedlist" />
@end example

@node [t] orderedlist, [t] variablelist, [t] itemizedlist, lists
@section [t] orderedlist
@subheading Name

[t] orderedlist
@subheading Synopsis

@example
<xsl:template match="orderedlist" />
@end example

@node [t] variablelist, [t] listitem, [t] orderedlist, lists
@section [t] variablelist
@subheading Name

[t] variablelist
@subheading Synopsis

@example
<xsl:template match="variablelist" />
@end example

@node [t] listitem, [t] varlistentry, [t] variablelist, lists
@section [t] listitem
@subheading Name

[t] listitem
@subheading Synopsis

@example
<xsl:template match="listitem" />
@end example

@node [t] varlistentry, [t] varlistentry/term, [t] listitem, lists
@section [t] varlistentry
@subheading Name

[t] varlistentry
@subheading Synopsis

@example
<xsl:template match="varlistentry" />
@end example

@node [t] varlistentry/term, [t] varlistentry/listitem, [t] varlistentry, lists
@section [t] varlistentry/term
@subheading Name

[t] varlistentry/term
@subheading Synopsis

@example
<xsl:template match="varlistentry/term" />
@end example

@node [t] varlistentry/listitem, [t] simplelist[@@type='horiz'], [t] varlistentry/term, lists
@section [t] varlistentry/listitem
@subheading Name

[t] varlistentry/listitem
@subheading Synopsis

@example
<xsl:template match="varlistentry/listitem" />
@end example

@node [t] simplelist[@@type='horiz'], [t] simplelist, [t] varlistentry/listitem, lists
@section [t] simplelist[@@type='horiz']
@subheading Name

[t] simplelist[@@type='horiz']
@subheading Synopsis

@example
<xsl:template match="simplelist[@@type='horiz']" />
@end example

@node [t] simplelist, [t] simplelist[@@type='inline'], [t] simplelist[@@type='horiz'], lists
@section [t] simplelist
@subheading Name

[t] simplelist
@subheading Synopsis

@example
<xsl:template match="simplelist" />
@end example

@node [t] simplelist[@@type='inline'], [T] simplelist-horiz, [t] simplelist, lists
@section [t] simplelist[@@type='inline']
@subheading Name

[t] simplelist[@@type='inline']
@subheading Synopsis

@example
<xsl:template match="simplelist[@@type='inline']" />
@end example

@node [T] simplelist-horiz, [T] simplelist-horiz-row, [t] simplelist[@@type='inline'], lists
@section [T] simplelist-horiz
@subheading Name

[T] simplelist-horiz --- Undocumented
@subheading Synopsis

@example
<xsl:template name="simplelist-horiz">
  <xsl:param name="cols">1</xsl:param>
  <xsl:param name="cell">1</xsl:param>
  <xsl:param name="members" select="./member" /></xsl:template>
@end example

@node [T] simplelist-horiz-row, [T] simplelist-vert, [T] simplelist-horiz, lists
@section [T] simplelist-horiz-row
@subheading Name

[T] simplelist-horiz-row --- Undocumented
@subheading Synopsis

@example
<xsl:template name="simplelist-horiz-row">
  <xsl:param name="cols">1</xsl:param>
  <xsl:param name="cell">1</xsl:param>
  <xsl:param name="members" select="./member" />
  <xsl:param name="curcol">1</xsl:param></xsl:template>
@end example

@node [T] simplelist-vert, [T] simplelist-vert-row, [T] simplelist-horiz-row, lists
@section [T] simplelist-vert
@subheading Name

[T] simplelist-vert --- Undocumented
@subheading Synopsis

@example
<xsl:template name="simplelist-vert">
  <xsl:param name="cols">1</xsl:param>
  <xsl:param name="cell">1</xsl:param>
  <xsl:param name="members" select="./member" />
  <xsl:param name="rows" select="floor((count($members)+$cols - 1) div $cols)" /></xsl:template>
@end example

@node [T] simplelist-vert-row, [t] member, [T] simplelist-vert, lists
@section [T] simplelist-vert-row
@subheading Name

[T] simplelist-vert-row --- Undocumented
@subheading Synopsis

@example
<xsl:template name="simplelist-vert-row">
  <xsl:param name="cols">1</xsl:param>
  <xsl:param name="rows">1</xsl:param>
  <xsl:param name="cell">1</xsl:param>
  <xsl:param name="members" select="./member" />
  <xsl:param name="curcol">1</xsl:param></xsl:template>
@end example

@node [t] member, [t] simplelist[@@type='inline']/member, [T] simplelist-vert-row, lists
@section [t] member
@subheading Name

[t] member
@subheading Synopsis

@example
<xsl:template match="member" />
@end example

@node [t] simplelist[@@type='inline']/member, [t] simplelist[@@type='inline']/member[1], [t] member, lists
@section [t] simplelist[@@type='inline']/member
@subheading Name

[t] simplelist[@@type='inline']/member
@subheading Synopsis

@example
<xsl:template match="simplelist[@@type='inline']/member" />
@end example

@node [t] simplelist[@@type='inline']/member[1], [t] procedure, [t] simplelist[@@type='inline']/member, lists
@section [t] simplelist[@@type='inline']/member[1]
@subheading Name

[t] simplelist[@@type='inline']/member[1]
@subheading Synopsis

@example
<xsl:template match="simplelist[@@type='inline']/member[1]" priority="1" />
@end example

@node [t] procedure, [t] substeps, [t] simplelist[@@type='inline']/member[1], lists
@section [t] procedure
@subheading Name

[t] procedure
@subheading Synopsis

@example
<xsl:template match="procedure" />
@end example

@node [t] substeps, [t] step, [t] procedure, lists
@section [t] substeps
@subheading Name

[t] substeps
@subheading Synopsis

@example
<xsl:template match="substeps" />
@end example

@node [t] step, [t] segmentedlist, [t] substeps, lists
@section [t] step
@subheading Name

[t] step
@subheading Synopsis

@example
<xsl:template match="step" />
@end example

@node [t] segmentedlist, [t] segtitle, [t] step, lists
@section [t] segmentedlist
@subheading Name

[t] segmentedlist
@subheading Synopsis

@example
<xsl:template match="segmentedlist" />
@end example

@node [t] segtitle, [t segtitle-in-seg] segtitle, [t] segmentedlist, lists
@section [t] segtitle
@subheading Name

[t] segtitle
@subheading Synopsis

@example
<xsl:template match="segtitle" />
@end example

@node [t segtitle-in-seg] segtitle, [t] seglistitem, [t] segtitle, lists
@section [t segtitle-in-seg] segtitle
@subheading Name

[t segtitle-in-seg] segtitle
@subheading Synopsis

@example
<xsl:template match="segtitle" mode="segtitle-in-seg" />
@end example

@node [t] seglistitem, [t] seg, [t segtitle-in-seg] segtitle, lists
@section [t] seglistitem
@subheading Name

[t] seglistitem
@subheading Synopsis

@example
<xsl:template match="seglistitem" />
@end example

@node [t] seg, , [t] seglistitem, lists
@section [t] seg
@subheading Name

[t] seg
@subheading Synopsis

@example
<xsl:template match="seg" />
@end example

@node callout, graphics, lists, Top
@chapter callout
@section callout

@quotation

@strong{Note}

Out-of-line call-outs (i.e. those specified with @code{
arearef}) are not supported properly (currently only the coordinates
are printed, with no bug placed in the specified location).
@end quotation

@menu
* [t] programlistingco|screenco::
* [t] areaspec|areaset|area::
* [t no-inline-markup] co::
* [t] co::
* [t co] co::
* [T] callout-bug::             Undocumented
* [t] coref::
* [T] check-co::                Undocumented
* [t] calloutlist::
* [t] callout::
* [T] callout-process-arearefs::   Undocumented
* [T] callout-arearef::         Undocumented
@end menu

@node [t] programlistingco|screenco, [t] areaspec|areaset|area, , callout
@section [t] programlistingco|screenco
@subheading Name

[t] programlistingco|screenco
@subheading Synopsis

@example
<xsl:template match="programlistingco|screenco" />
@end example

@node [t] areaspec|areaset|area, [t no-inline-markup] co, [t] programlistingco|screenco, callout
@section [t] areaspec|areaset|area
@subheading Name

[t] areaspec|areaset|area
@subheading Synopsis

@example
<xsl:template match="areaspec|areaset|area" />
@end example

@node [t no-inline-markup] co, [t] co, [t] areaspec|areaset|area, callout
@section [t no-inline-markup] co
@subheading Name

[t no-inline-markup] co
@subheading Synopsis

@example
<xsl:template match="co" mode="no-inline-markup" />
@end example

@node [t] co, [t co] co, [t no-inline-markup] co, callout
@section [t] co
@subheading Name

[t] co
@subheading Synopsis

@example
<xsl:template match="co">
  <xsl:param name="label" select="@@label" /></xsl:template>
@end example

@node [t co] co, [T] callout-bug, [t] co, callout
@section [t co] co
@subheading Name

[t co] co
@subheading Synopsis

@example
<xsl:template match="co" mode="co" />
@end example

@node [T] callout-bug, [t] coref, [t co] co, callout
@section [T] callout-bug
@subheading Name

[T] callout-bug --- Undocumented
@subheading Synopsis

@example
<xsl:template name="callout-bug">
  <xsl:param name="conum" select="1" /></xsl:template>
@end example

@node [t] coref, [T] check-co, [T] callout-bug, callout
@section [t] coref
@subheading Name

[t] coref
@subheading Synopsis

@example
<xsl:template match="coref" />
@end example

@node [T] check-co, [t] calloutlist, [t] coref, callout
@section [T] check-co
@subheading Name

[T] check-co --- Undocumented
@subheading Synopsis

@example
<xsl:template name="check-co">
  <xsl:param name="target" />
  <xsl:param name="content" />
  <xsl:param name="bad-content" /></xsl:template>
@end example

@node [t] calloutlist, [t] callout, [T] check-co, callout
@section [t] calloutlist
@subheading Name

[t] calloutlist
@subheading Synopsis

@example
<xsl:template match="calloutlist" />
@end example

@node [t] callout, [T] callout-process-arearefs, [t] calloutlist, callout
@section [t] callout
@subheading Name

[t] callout
@subheading Synopsis

@example
<xsl:template match="callout" />
@end example

@node [T] callout-process-arearefs, [T] callout-arearef, [t] callout, callout
@section [T] callout-process-arearefs
@subheading Name

[T] callout-process-arearefs --- Undocumented
@subheading Synopsis

@example
<xsl:template name="callout-process-arearefs">
  <xsl:param name="arearefs" select="@@arearefs" /></xsl:template>
@end example

@node [T] callout-arearef, , [T] callout-process-arearefs, callout
@section [T] callout-arearef
@subheading Name

[T] callout-arearef --- Undocumented
@subheading Synopsis

@example
<xsl:template name="callout-arearef">
  <xsl:param name="arearef" /></xsl:template>
@end example

@node graphics, biblio, callout, Top
@chapter graphics

@menu
* [t] screenshot::
* [t] screeninfo::
* [T] imagedata::               Undocumented
* [t] graphic::
* [t] inlinegraphic::
* [T] select-mediaobject::      Undocumented
* [t] mediaobject::
* [t] inlinemediaobject::
* [t] objectinfo::
* [t] imageobject::
* [t] textobject::
* [t] caption::
@end menu

@node [t] screenshot, [t] screeninfo, , graphics
@section [t] screenshot
@subheading Name

[t] screenshot
@subheading Synopsis

@example
<xsl:template match="screenshot" />
@end example

@node [t] screeninfo, [T] imagedata, [t] screenshot, graphics
@section [t] screeninfo
@subheading Name

[t] screeninfo
@subheading Synopsis

@example
<xsl:template match="screeninfo" />
@end example

@node [T] imagedata, [t] graphic, [t] screeninfo, graphics
@section [T] imagedata
@subheading Name

[T] imagedata --- Undocumented
@subheading Synopsis

@example
<xsl:template name="imagedata" />
@end example

@node [t] graphic, [t] inlinegraphic, [T] imagedata, graphics
@section [t] graphic
@subheading Name

[t] graphic
@subheading Synopsis

@example
<xsl:template match="graphic" />
@end example

@node [t] inlinegraphic, [T] select-mediaobject, [t] graphic, graphics
@section [t] inlinegraphic
@subheading Name

[t] inlinegraphic
@subheading Synopsis

@example
<xsl:template match="inlinegraphic" />
@end example

@node [T] select-mediaobject, [t] mediaobject, [t] inlinegraphic, graphics
@section [T] select-mediaobject
@subheading Name

[T] select-mediaobject --- Undocumented
@subheading Synopsis

@example
<xsl:template name="select-mediaobject" />
@end example

@node [t] mediaobject, [t] inlinemediaobject, [T] select-mediaobject, graphics
@section [t] mediaobject
@subheading Name

[t] mediaobject
@subheading Synopsis

@example
<xsl:template match="mediaobject" />
@end example

@node [t] inlinemediaobject, [t] objectinfo, [t] mediaobject, graphics
@section [t] inlinemediaobject
@subheading Name

[t] inlinemediaobject
@subheading Synopsis

@example
<xsl:template match="inlinemediaobject" />
@end example

@node [t] objectinfo, [t] imageobject, [t] inlinemediaobject, graphics
@section [t] objectinfo
@subheading Name

[t] objectinfo
@subheading Synopsis

@example
<xsl:template match="objectinfo" />
@end example

@node [t] imageobject, [t] textobject, [t] objectinfo, graphics
@section [t] imageobject
@subheading Name

[t] imageobject
@subheading Synopsis

@example
<xsl:template match="imageobject" />
@end example

@node [t] textobject, [t] caption, [t] imageobject, graphics
@section [t] textobject
@subheading Name

[t] textobject
@subheading Synopsis

@example
<xsl:template match="textobject" />
@end example

@node [t] caption, , [t] textobject, graphics
@section [t] caption
@subheading Name

[t] caption
@subheading Synopsis

@example
<xsl:template match="caption" />
@end example

@node biblio, info, graphics, Top
@chapter biblio
@section biblio

@quotation

@strong{Note}

Bibliographies are probably broken right now.
They may still work for you, but the entire system really needs
an overhaul.
@end quotation

@menu
* [t] bibliography::
* [T] biblio-item-separator::   Undocumented
* [t] bibliodiv::
* [t] biblioentry::
* [t] bibliomixed::
* [t bibliography] *::
* [t bibliography] abbrev::
* [t bibliography] abstract::
* [t bibliography] address::
* [t bibliography] affiliation::
* [t bibliography] shortaffil::
* [t bibliography] jobtitle::
* [t bibliography] artheader::
* [t bibliography] artpagenums::
* [t bibliography] author::
* [t bibliography] authorblurb::
* [t bibliography] authorgroup::
* [t bibliography] authorinitials::
* [t bibliography] bibliomisc::
* [t bibliography] bibliomset::
* [t bibliography] biblioset::
* [t bibliography] biblioset/title|biblioset/citetitle::
* [t bibliography] bookbiblio::
* [t bibliography] citetitle::
* [t bibliography] collab::
* [t bibliography] collabname::
* [t bibliography] confgroup::
* [t bibliography] confdates::
* [t bibliography] conftitle::
* [t bibliography] confnum::
* [t bibliography] confsponsor::
* [t bibliography] contractnum::
* [t bibliography] contractsponsor::
* [t bibliography] contrib::
* [t bibliography] copyright::
* [t bibliography] year::
* [t bibliography] year[position()=last()]: [t bibliography] year[position[]=last[]].
* [t bibliography] holder::
* [t bibliography] corpauthor::
* [t bibliography] corpname::
* [t bibliography] date::
* [t bibliography] edition::
* [t bibliography] editor::
* [t bibliography] personname::
* [t bibliography] firstname::
* [t bibliography] honorific::
* [t bibliography] indexterm::
* [t bibliography] invpartnumber::
* [t bibliography] isbn::
* [t bibliography] issn::
* [t bibliography] issuenum::
* [t bibliography] lineage::
* [t bibliography] orgname::
* [t bibliography] orgdiv::
* [t bibliography] othercredit::
* [t bibliography] othername::
* [t bibliography] pagenums::
* [t bibliography] printhistory::
* [t bibliography] productname::
* [t bibliography] productnumber::
* [t bibliography] pubdate::
* [t bibliography] publisher::
* [t bibliography] publishername::
* [t bibliography] pubsnumber::
* [t bibliography] releaseinfo::
* [t bibliography] revhistory::
* [t bibliography] seriesinfo::
* [t bibliography] seriesvolnums::
* [t bibliography] subtitle::
* [t bibliography] surname::
* [t bibliography] title::
* [t bibliography] titleabbrev::
* [t bibliography] volumenum::
* [t bibliomixed] *::
* [t bibliomixed] abbrev::
* [t bibliomixed] abstract::
* [t bibliomixed] address::
* [t bibliomixed] affiliation::
* [t bibliomixed] artpagenums::
* [t bibliomixed] author::
* [t bibliomixed] authorblurb::
* [t bibliomixed] authorgroup::
* [t bibliomixed] authorinitials::
* [t bibliomixed] bibliomisc::
* [t bibliomixed] bibliomset::
* [t bibliomixed] bibliomset/title|bibliomset/citetitle::
* [t bibliomixed] biblioset::
* [t bibliomixed] citetitle::
* [t bibliomixed] collab::
* [t bibliomixed] confgroup::
* [t bibliomixed] contractnum::
* [t bibliomixed] contractsponsor::
* [t bibliomixed] contrib::
* [t bibliomixed] copyright::
* [t bibliomixed] corpauthor::
* [t bibliomixed] corpname::
* [t bibliomixed] date::
* [t bibliomixed] edition::
* [t bibliomixed] editor::
* [t bibliomixed] firstname::
* [t bibliomixed] honorific::
* [t bibliomixed] indexterm::
* [t bibliomixed] invpartnumber::
* [t bibliomixed] isbn::
* [t bibliomixed] issn::
* [t bibliomixed] issuenum::
* [t bibliomixed] lineage::
* [t bibliomixed] orgname::
* [t bibliomixed] othercredit::
* [t bibliomixed] othername::
* [t bibliomixed] pagenums::
* [t bibliomixed] printhistory::
* [t bibliomixed] productname::
* [t bibliomixed] productnumber::
* [t bibliomixed] pubdate::
* [t bibliomixed] publisher::
* [t bibliomixed] publishername::
* [t bibliomixed] pubsnumber::
* [t bibliomixed] releaseinfo::
* [t bibliomixed] revhistory::
* [t bibliomixed] seriesvolnums::
* [t bibliomixed] subtitle::
* [t bibliomixed] surname::
* [t bibliomixed] title::
* [t bibliomixed] titleabbrev::
* [t bibliomixed] volumenum::
@end menu

@node [t] bibliography, [T] biblio-item-separator, , biblio
@section [t] bibliography
@subheading Name

[t] bibliography
@subheading Synopsis

@example
<xsl:template match="bibliography" />
@end example

@node [T] biblio-item-separator, [t] bibliodiv, [t] bibliography, biblio
@section [T] biblio-item-separator
@subheading Name

[T] biblio-item-separator --- Undocumented
@subheading Synopsis

@example
<xsl:template name="biblio-item-separator" />
@end example

@node [t] bibliodiv, [t] biblioentry, [T] biblio-item-separator, biblio
@section [t] bibliodiv
@subheading Name

[t] bibliodiv
@subheading Synopsis

@example
<xsl:template match="bibliodiv" />
@end example

@node [t] biblioentry, [t] bibliomixed, [t] bibliodiv, biblio
@section [t] biblioentry
@subheading Name

[t] biblioentry
@subheading Synopsis

@example
<xsl:template match="biblioentry" />
@end example

@node [t] bibliomixed, [t bibliography] *, [t] biblioentry, biblio
@section [t] bibliomixed
@subheading Name

[t] bibliomixed
@subheading Synopsis

@example
<xsl:template match="bibliomixed" />
@end example

@node [t bibliography] *, [t bibliography] abbrev, [t] bibliomixed, biblio
@section [t bibliography] *
@subheading Name

[t bibliography] *
@subheading Synopsis

@example
<xsl:template match="*" mode="bibliography" />
@end example

@node [t bibliography] abbrev, [t bibliography] abstract, [t bibliography] *, biblio
@section [t bibliography] abbrev
@subheading Name

[t bibliography] abbrev
@subheading Synopsis

@example
<xsl:template match="abbrev" mode="bibliography" />
@end example

@node [t bibliography] abstract, [t bibliography] address, [t bibliography] abbrev, biblio
@section [t bibliography] abstract
@subheading Name

[t bibliography] abstract
@subheading Synopsis

@example
<xsl:template match="abstract" mode="bibliography" />
@end example

@node [t bibliography] address, [t bibliography] affiliation, [t bibliography] abstract, biblio
@section [t bibliography] address
@subheading Name

[t bibliography] address
@subheading Synopsis

@example
<xsl:template match="address" mode="bibliography" />
@end example

@node [t bibliography] affiliation, [t bibliography] shortaffil, [t bibliography] address, biblio
@section [t bibliography] affiliation
@subheading Name

[t bibliography] affiliation
@subheading Synopsis

@example
<xsl:template match="affiliation" mode="bibliography" />
@end example

@node [t bibliography] shortaffil, [t bibliography] jobtitle, [t bibliography] affiliation, biblio
@section [t bibliography] shortaffil
@subheading Name

[t bibliography] shortaffil
@subheading Synopsis

@example
<xsl:template match="shortaffil" mode="bibliography" />
@end example

@node [t bibliography] jobtitle, [t bibliography] artheader, [t bibliography] shortaffil, biblio
@section [t bibliography] jobtitle
@subheading Name

[t bibliography] jobtitle
@subheading Synopsis

@example
<xsl:template match="jobtitle" mode="bibliography" />
@end example

@node [t bibliography] artheader, [t bibliography] artpagenums, [t bibliography] jobtitle, biblio
@section [t bibliography] artheader
@subheading Name

[t bibliography] artheader
@subheading Synopsis

@example
<xsl:template match="artheader" mode="bibliography" />
@end example

@node [t bibliography] artpagenums, [t bibliography] author, [t bibliography] artheader, biblio
@section [t bibliography] artpagenums
@subheading Name

[t bibliography] artpagenums
@subheading Synopsis

@example
<xsl:template match="artpagenums" mode="bibliography" />
@end example

@node [t bibliography] author, [t bibliography] authorblurb, [t bibliography] artpagenums, biblio
@section [t bibliography] author
@subheading Name

[t bibliography] author
@subheading Synopsis

@example
<xsl:template match="author" mode="bibliography" />
@end example

@node [t bibliography] authorblurb, [t bibliography] authorgroup, [t bibliography] author, biblio
@section [t bibliography] authorblurb
@subheading Name

[t bibliography] authorblurb
@subheading Synopsis

@example
<xsl:template match="authorblurb" mode="bibliography" />
@end example

@node [t bibliography] authorgroup, [t bibliography] authorinitials, [t bibliography] authorblurb, biblio
@section [t bibliography] authorgroup
@subheading Name

[t bibliography] authorgroup
@subheading Synopsis

@example
<xsl:template match="authorgroup" mode="bibliography" />
@end example

@node [t bibliography] authorinitials, [t bibliography] bibliomisc, [t bibliography] authorgroup, biblio
@section [t bibliography] authorinitials
@subheading Name

[t bibliography] authorinitials
@subheading Synopsis

@example
<xsl:template match="authorinitials" mode="bibliography" />
@end example

@node [t bibliography] bibliomisc, [t bibliography] bibliomset, [t bibliography] authorinitials, biblio
@section [t bibliography] bibliomisc
@subheading Name

[t bibliography] bibliomisc
@subheading Synopsis

@example
<xsl:template match="bibliomisc" mode="bibliography" />
@end example

@node [t bibliography] bibliomset, [t bibliography] biblioset, [t bibliography] bibliomisc, biblio
@section [t bibliography] bibliomset
@subheading Name

[t bibliography] bibliomset
@subheading Synopsis

@example
<xsl:template match="bibliomset" mode="bibliography" />
@end example

@node [t bibliography] biblioset, [t bibliography] biblioset/title|biblioset/citetitle, [t bibliography] bibliomset, biblio
@section [t bibliography] biblioset
@subheading Name

[t bibliography] biblioset
@subheading Synopsis

@example
<xsl:template match="biblioset" mode="bibliography" />
@end example

@node [t bibliography] biblioset/title|biblioset/citetitle, [t bibliography] bookbiblio, [t bibliography] biblioset, biblio
@section [t bibliography] biblioset/title|biblioset/citetitle
@subheading Name

[t bibliography] biblioset/title|biblioset/citetitle
@subheading Synopsis

@example
<xsl:template match="biblioset/title|biblioset/citetitle" mode="bibliography" />
@end example

@node [t bibliography] bookbiblio, [t bibliography] citetitle, [t bibliography] biblioset/title|biblioset/citetitle, biblio
@section [t bibliography] bookbiblio
@subheading Name

[t bibliography] bookbiblio
@subheading Synopsis

@example
<xsl:template match="bookbiblio" mode="bibliography" />
@end example

@node [t bibliography] citetitle, [t bibliography] collab, [t bibliography] bookbiblio, biblio
@section [t bibliography] citetitle
@subheading Name

[t bibliography] citetitle
@subheading Synopsis

@example
<xsl:template match="citetitle" mode="bibliography" />
@end example

@node [t bibliography] collab, [t bibliography] collabname, [t bibliography] citetitle, biblio
@section [t bibliography] collab
@subheading Name

[t bibliography] collab
@subheading Synopsis

@example
<xsl:template match="collab" mode="bibliography" />
@end example

@node [t bibliography] collabname, [t bibliography] confgroup, [t bibliography] collab, biblio
@section [t bibliography] collabname
@subheading Name

[t bibliography] collabname
@subheading Synopsis

@example
<xsl:template match="collabname" mode="bibliography" />
@end example

@node [t bibliography] confgroup, [t bibliography] confdates, [t bibliography] collabname, biblio
@section [t bibliography] confgroup
@subheading Name

[t bibliography] confgroup
@subheading Synopsis

@example
<xsl:template match="confgroup" mode="bibliography" />
@end example

@node [t bibliography] confdates, [t bibliography] conftitle, [t bibliography] confgroup, biblio
@section [t bibliography] confdates
@subheading Name

[t bibliography] confdates
@subheading Synopsis

@example
<xsl:template match="confdates" mode="bibliography" />
@end example

@node [t bibliography] conftitle, [t bibliography] confnum, [t bibliography] confdates, biblio
@section [t bibliography] conftitle
@subheading Name

[t bibliography] conftitle
@subheading Synopsis

@example
<xsl:template match="conftitle" mode="bibliography" />
@end example

@node [t bibliography] confnum, [t bibliography] confsponsor, [t bibliography] conftitle, biblio
@section [t bibliography] confnum
@subheading Name

[t bibliography] confnum
@subheading Synopsis

@example
<xsl:template match="confnum" mode="bibliography" />
@end example

@node [t bibliography] confsponsor, [t bibliography] contractnum, [t bibliography] confnum, biblio
@section [t bibliography] confsponsor
@subheading Name

[t bibliography] confsponsor
@subheading Synopsis

@example
<xsl:template match="confsponsor" mode="bibliography" />
@end example

@node [t bibliography] contractnum, [t bibliography] contractsponsor, [t bibliography] confsponsor, biblio
@section [t bibliography] contractnum
@subheading Name

[t bibliography] contractnum
@subheading Synopsis

@example
<xsl:template match="contractnum" mode="bibliography" />
@end example

@node [t bibliography] contractsponsor, [t bibliography] contrib, [t bibliography] contractnum, biblio
@section [t bibliography] contractsponsor
@subheading Name

[t bibliography] contractsponsor
@subheading Synopsis

@example
<xsl:template match="contractsponsor" mode="bibliography" />
@end example

@node [t bibliography] contrib, [t bibliography] copyright, [t bibliography] contractsponsor, biblio
@section [t bibliography] contrib
@subheading Name

[t bibliography] contrib
@subheading Synopsis

@example
<xsl:template match="contrib" mode="bibliography" />
@end example

@node [t bibliography] copyright, [t bibliography] year, [t bibliography] contrib, biblio
@section [t bibliography] copyright
@subheading Name

[t bibliography] copyright
@subheading Synopsis

@example
<xsl:template match="copyright" mode="bibliography" />
@end example

@node [t bibliography] year, [t bibliography] year[position[]=last[]], [t bibliography] copyright, biblio
@section [t bibliography] year
@subheading Name

[t bibliography] year
@subheading Synopsis

@example
<xsl:template match="year" mode="bibliography" />
@end example

@node [t bibliography] year[position[]=last[]], [t bibliography] holder, [t bibliography] year, biblio
@section [t bibliography] year[position()=last()]
@subheading Name

[t bibliography] year[position()=last()]
@subheading Synopsis

@example
<xsl:template match="year[position()=last()]" mode="bibliography" />
@end example

@node [t bibliography] holder, [t bibliography] corpauthor, [t bibliography] year[position[]=last[]], biblio
@section [t bibliography] holder
@subheading Name

[t bibliography] holder
@subheading Synopsis

@example
<xsl:template match="holder" mode="bibliography" />
@end example

@node [t bibliography] corpauthor, [t bibliography] corpname, [t bibliography] holder, biblio
@section [t bibliography] corpauthor
@subheading Name

[t bibliography] corpauthor
@subheading Synopsis

@example
<xsl:template match="corpauthor" mode="bibliography" />
@end example

@node [t bibliography] corpname, [t bibliography] date, [t bibliography] corpauthor, biblio
@section [t bibliography] corpname
@subheading Name

[t bibliography] corpname
@subheading Synopsis

@example
<xsl:template match="corpname" mode="bibliography" />
@end example

@node [t bibliography] date, [t bibliography] edition, [t bibliography] corpname, biblio
@section [t bibliography] date
@subheading Name

[t bibliography] date
@subheading Synopsis

@example
<xsl:template match="date" mode="bibliography" />
@end example

@node [t bibliography] edition, [t bibliography] editor, [t bibliography] date, biblio
@section [t bibliography] edition
@subheading Name

[t bibliography] edition
@subheading Synopsis

@example
<xsl:template match="edition" mode="bibliography" />
@end example

@node [t bibliography] editor, [t bibliography] personname, [t bibliography] edition, biblio
@section [t bibliography] editor
@subheading Name

[t bibliography] editor
@subheading Synopsis

@example
<xsl:template match="editor" mode="bibliography" />
@end example

@node [t bibliography] personname, [t bibliography] firstname, [t bibliography] editor, biblio
@section [t bibliography] personname
@subheading Name

[t bibliography] personname
@subheading Synopsis

@example
<xsl:template match="personname" mode="bibliography" />
@end example

@node [t bibliography] firstname, [t bibliography] honorific, [t bibliography] personname, biblio
@section [t bibliography] firstname
@subheading Name

[t bibliography] firstname
@subheading Synopsis

@example
<xsl:template match="firstname" mode="bibliography" />
@end example

@node [t bibliography] honorific, [t bibliography] indexterm, [t bibliography] firstname, biblio
@section [t bibliography] honorific
@subheading Name

[t bibliography] honorific
@subheading Synopsis

@example
<xsl:template match="honorific" mode="bibliography" />
@end example

@node [t bibliography] indexterm, [t bibliography] invpartnumber, [t bibliography] honorific, biblio
@section [t bibliography] indexterm
@subheading Name

[t bibliography] indexterm
@subheading Synopsis

@example
<xsl:template match="indexterm" mode="bibliography" />
@end example

@node [t bibliography] invpartnumber, [t bibliography] isbn, [t bibliography] indexterm, biblio
@section [t bibliography] invpartnumber
@subheading Name

[t bibliography] invpartnumber
@subheading Synopsis

@example
<xsl:template match="invpartnumber" mode="bibliography" />
@end example

@node [t bibliography] isbn, [t bibliography] issn, [t bibliography] invpartnumber, biblio
@section [t bibliography] isbn
@subheading Name

[t bibliography] isbn
@subheading Synopsis

@example
<xsl:template match="isbn" mode="bibliography" />
@end example

@node [t bibliography] issn, [t bibliography] issuenum, [t bibliography] isbn, biblio
@section [t bibliography] issn
@subheading Name

[t bibliography] issn
@subheading Synopsis

@example
<xsl:template match="issn" mode="bibliography" />
@end example

@node [t bibliography] issuenum, [t bibliography] lineage, [t bibliography] issn, biblio
@section [t bibliography] issuenum
@subheading Name

[t bibliography] issuenum
@subheading Synopsis

@example
<xsl:template match="issuenum" mode="bibliography" />
@end example

@node [t bibliography] lineage, [t bibliography] orgname, [t bibliography] issuenum, biblio
@section [t bibliography] lineage
@subheading Name

[t bibliography] lineage
@subheading Synopsis

@example
<xsl:template match="lineage" mode="bibliography" />
@end example

@node [t bibliography] orgname, [t bibliography] orgdiv, [t bibliography] lineage, biblio
@section [t bibliography] orgname
@subheading Name

[t bibliography] orgname
@subheading Synopsis

@example
<xsl:template match="orgname" mode="bibliography" />
@end example

@node [t bibliography] orgdiv, [t bibliography] othercredit, [t bibliography] orgname, biblio
@section [t bibliography] orgdiv
@subheading Name

[t bibliography] orgdiv
@subheading Synopsis

@example
<xsl:template match="orgdiv" mode="bibliography" />
@end example

@node [t bibliography] othercredit, [t bibliography] othername, [t bibliography] orgdiv, biblio
@section [t bibliography] othercredit
@subheading Name

[t bibliography] othercredit
@subheading Synopsis

@example
<xsl:template match="othercredit" mode="bibliography" />
@end example

@node [t bibliography] othername, [t bibliography] pagenums, [t bibliography] othercredit, biblio
@section [t bibliography] othername
@subheading Name

[t bibliography] othername
@subheading Synopsis

@example
<xsl:template match="othername" mode="bibliography" />
@end example

@node [t bibliography] pagenums, [t bibliography] printhistory, [t bibliography] othername, biblio
@section [t bibliography] pagenums
@subheading Name

[t bibliography] pagenums
@subheading Synopsis

@example
<xsl:template match="pagenums" mode="bibliography" />
@end example

@node [t bibliography] printhistory, [t bibliography] productname, [t bibliography] pagenums, biblio
@section [t bibliography] printhistory
@subheading Name

[t bibliography] printhistory
@subheading Synopsis

@example
<xsl:template match="printhistory" mode="bibliography" />
@end example

@node [t bibliography] productname, [t bibliography] productnumber, [t bibliography] printhistory, biblio
@section [t bibliography] productname
@subheading Name

[t bibliography] productname
@subheading Synopsis

@example
<xsl:template match="productname" mode="bibliography" />
@end example

@node [t bibliography] productnumber, [t bibliography] pubdate, [t bibliography] productname, biblio
@section [t bibliography] productnumber
@subheading Name

[t bibliography] productnumber
@subheading Synopsis

@example
<xsl:template match="productnumber" mode="bibliography" />
@end example

@node [t bibliography] pubdate, [t bibliography] publisher, [t bibliography] productnumber, biblio
@section [t bibliography] pubdate
@subheading Name

[t bibliography] pubdate
@subheading Synopsis

@example
<xsl:template match="pubdate" mode="bibliography" />
@end example

@node [t bibliography] publisher, [t bibliography] publishername, [t bibliography] pubdate, biblio
@section [t bibliography] publisher
@subheading Name

[t bibliography] publisher
@subheading Synopsis

@example
<xsl:template match="publisher" mode="bibliography" />
@end example

@node [t bibliography] publishername, [t bibliography] pubsnumber, [t bibliography] publisher, biblio
@section [t bibliography] publishername
@subheading Name

[t bibliography] publishername
@subheading Synopsis

@example
<xsl:template match="publishername" mode="bibliography" />
@end example

@node [t bibliography] pubsnumber, [t bibliography] releaseinfo, [t bibliography] publishername, biblio
@section [t bibliography] pubsnumber
@subheading Name

[t bibliography] pubsnumber
@subheading Synopsis

@example
<xsl:template match="pubsnumber" mode="bibliography" />
@end example

@node [t bibliography] releaseinfo, [t bibliography] revhistory, [t bibliography] pubsnumber, biblio
@section [t bibliography] releaseinfo
@subheading Name

[t bibliography] releaseinfo
@subheading Synopsis

@example
<xsl:template match="releaseinfo" mode="bibliography" />
@end example

@node [t bibliography] revhistory, [t bibliography] seriesinfo, [t bibliography] releaseinfo, biblio
@section [t bibliography] revhistory
@subheading Name

[t bibliography] revhistory
@subheading Synopsis

@example
<xsl:template match="revhistory" mode="bibliography" />
@end example

@node [t bibliography] seriesinfo, [t bibliography] seriesvolnums, [t bibliography] revhistory, biblio
@section [t bibliography] seriesinfo
@subheading Name

[t bibliography] seriesinfo
@subheading Synopsis

@example
<xsl:template match="seriesinfo" mode="bibliography" />
@end example

@node [t bibliography] seriesvolnums, [t bibliography] subtitle, [t bibliography] seriesinfo, biblio
@section [t bibliography] seriesvolnums
@subheading Name

[t bibliography] seriesvolnums
@subheading Synopsis

@example
<xsl:template match="seriesvolnums" mode="bibliography" />
@end example

@node [t bibliography] subtitle, [t bibliography] surname, [t bibliography] seriesvolnums, biblio
@section [t bibliography] subtitle
@subheading Name

[t bibliography] subtitle
@subheading Synopsis

@example
<xsl:template match="subtitle" mode="bibliography" />
@end example

@node [t bibliography] surname, [t bibliography] title, [t bibliography] subtitle, biblio
@section [t bibliography] surname
@subheading Name

[t bibliography] surname
@subheading Synopsis

@example
<xsl:template match="surname" mode="bibliography" />
@end example

@node [t bibliography] title, [t bibliography] titleabbrev, [t bibliography] surname, biblio
@section [t bibliography] title
@subheading Name

[t bibliography] title
@subheading Synopsis

@example
<xsl:template match="title" mode="bibliography" />
@end example

@node [t bibliography] titleabbrev, [t bibliography] volumenum, [t bibliography] title, biblio
@section [t bibliography] titleabbrev
@subheading Name

[t bibliography] titleabbrev
@subheading Synopsis

@example
<xsl:template match="titleabbrev" mode="bibliography" />
@end example

@node [t bibliography] volumenum, [t bibliomixed] *, [t bibliography] titleabbrev, biblio
@section [t bibliography] volumenum
@subheading Name

[t bibliography] volumenum
@subheading Synopsis

@example
<xsl:template match="volumenum" mode="bibliography" />
@end example

@node [t bibliomixed] *, [t bibliomixed] abbrev, [t bibliography] volumenum, biblio
@section [t bibliomixed] *
@subheading Name

[t bibliomixed] *
@subheading Synopsis

@example
<xsl:template match="*" mode="bibliomixed" />
@end example

@node [t bibliomixed] abbrev, [t bibliomixed] abstract, [t bibliomixed] *, biblio
@section [t bibliomixed] abbrev
@subheading Name

[t bibliomixed] abbrev
@subheading Synopsis

@example
<xsl:template match="abbrev" mode="bibliomixed" />
@end example

@node [t bibliomixed] abstract, [t bibliomixed] address, [t bibliomixed] abbrev, biblio
@section [t bibliomixed] abstract
@subheading Name

[t bibliomixed] abstract
@subheading Synopsis

@example
<xsl:template match="abstract" mode="bibliomixed" />
@end example

@node [t bibliomixed] address, [t bibliomixed] affiliation, [t bibliomixed] abstract, biblio
@section [t bibliomixed] address
@subheading Name

[t bibliomixed] address
@subheading Synopsis

@example
<xsl:template match="address" mode="bibliomixed" />
@end example

@node [t bibliomixed] affiliation, [t bibliomixed] artpagenums, [t bibliomixed] address, biblio
@section [t bibliomixed] affiliation
@subheading Name

[t bibliomixed] affiliation
@subheading Synopsis

@example
<xsl:template match="affiliation" mode="bibliomixed" />
@end example

@node [t bibliomixed] artpagenums, [t bibliomixed] author, [t bibliomixed] affiliation, biblio
@section [t bibliomixed] artpagenums
@subheading Name

[t bibliomixed] artpagenums
@subheading Synopsis

@example
<xsl:template match="artpagenums" mode="bibliomixed" />
@end example

@node [t bibliomixed] author, [t bibliomixed] authorblurb, [t bibliomixed] artpagenums, biblio
@section [t bibliomixed] author
@subheading Name

[t bibliomixed] author
@subheading Synopsis

@example
<xsl:template match="author" mode="bibliomixed" />
@end example

@node [t bibliomixed] authorblurb, [t bibliomixed] authorgroup, [t bibliomixed] author, biblio
@section [t bibliomixed] authorblurb
@subheading Name

[t bibliomixed] authorblurb
@subheading Synopsis

@example
<xsl:template match="authorblurb" mode="bibliomixed" />
@end example

@node [t bibliomixed] authorgroup, [t bibliomixed] authorinitials, [t bibliomixed] authorblurb, biblio
@section [t bibliomixed] authorgroup
@subheading Name

[t bibliomixed] authorgroup
@subheading Synopsis

@example
<xsl:template match="authorgroup" mode="bibliomixed" />
@end example

@node [t bibliomixed] authorinitials, [t bibliomixed] bibliomisc, [t bibliomixed] authorgroup, biblio
@section [t bibliomixed] authorinitials
@subheading Name

[t bibliomixed] authorinitials
@subheading Synopsis

@example
<xsl:template match="authorinitials" mode="bibliomixed" />
@end example

@node [t bibliomixed] bibliomisc, [t bibliomixed] bibliomset, [t bibliomixed] authorinitials, biblio
@section [t bibliomixed] bibliomisc
@subheading Name

[t bibliomixed] bibliomisc
@subheading Synopsis

@example
<xsl:template match="bibliomisc" mode="bibliomixed" />
@end example

@node [t bibliomixed] bibliomset, [t bibliomixed] bibliomset/title|bibliomset/citetitle, [t bibliomixed] bibliomisc, biblio
@section [t bibliomixed] bibliomset
@subheading Name

[t bibliomixed] bibliomset
@subheading Synopsis

@example
<xsl:template match="bibliomset" mode="bibliomixed" />
@end example

@node [t bibliomixed] bibliomset/title|bibliomset/citetitle, [t bibliomixed] biblioset, [t bibliomixed] bibliomset, biblio
@section [t bibliomixed] bibliomset/title|bibliomset/citetitle
@subheading Name

[t bibliomixed] bibliomset/title|bibliomset/citetitle
@subheading Synopsis

@example
<xsl:template match="bibliomset/title|bibliomset/citetitle" mode="bibliomixed" />
@end example

@node [t bibliomixed] biblioset, [t bibliomixed] citetitle, [t bibliomixed] bibliomset/title|bibliomset/citetitle, biblio
@section [t bibliomixed] biblioset
@subheading Name

[t bibliomixed] biblioset
@subheading Synopsis

@example
<xsl:template match="biblioset" mode="bibliomixed" />
@end example

@node [t bibliomixed] citetitle, [t bibliomixed] collab, [t bibliomixed] biblioset, biblio
@section [t bibliomixed] citetitle
@subheading Name

[t bibliomixed] citetitle
@subheading Synopsis

@example
<xsl:template match="citetitle" mode="bibliomixed" />
@end example

@node [t bibliomixed] collab, [t bibliomixed] confgroup, [t bibliomixed] citetitle, biblio
@section [t bibliomixed] collab
@subheading Name

[t bibliomixed] collab
@subheading Synopsis

@example
<xsl:template match="collab" mode="bibliomixed" />
@end example

@node [t bibliomixed] confgroup, [t bibliomixed] contractnum, [t bibliomixed] collab, biblio
@section [t bibliomixed] confgroup
@subheading Name

[t bibliomixed] confgroup
@subheading Synopsis

@example
<xsl:template match="confgroup" mode="bibliomixed" />
@end example

@node [t bibliomixed] contractnum, [t bibliomixed] contractsponsor, [t bibliomixed] confgroup, biblio
@section [t bibliomixed] contractnum
@subheading Name

[t bibliomixed] contractnum
@subheading Synopsis

@example
<xsl:template match="contractnum" mode="bibliomixed" />
@end example

@node [t bibliomixed] contractsponsor, [t bibliomixed] contrib, [t bibliomixed] contractnum, biblio
@section [t bibliomixed] contractsponsor
@subheading Name

[t bibliomixed] contractsponsor
@subheading Synopsis

@example
<xsl:template match="contractsponsor" mode="bibliomixed" />
@end example

@node [t bibliomixed] contrib, [t bibliomixed] copyright, [t bibliomixed] contractsponsor, biblio
@section [t bibliomixed] contrib
@subheading Name

[t bibliomixed] contrib
@subheading Synopsis

@example
<xsl:template match="contrib" mode="bibliomixed" />
@end example

@node [t bibliomixed] copyright, [t bibliomixed] corpauthor, [t bibliomixed] contrib, biblio
@section [t bibliomixed] copyright
@subheading Name

[t bibliomixed] copyright
@subheading Synopsis

@example
<xsl:template match="copyright" mode="bibliomixed" />
@end example

@node [t bibliomixed] corpauthor, [t bibliomixed] corpname, [t bibliomixed] copyright, biblio
@section [t bibliomixed] corpauthor
@subheading Name

[t bibliomixed] corpauthor
@subheading Synopsis

@example
<xsl:template match="corpauthor" mode="bibliomixed" />
@end example

@node [t bibliomixed] corpname, [t bibliomixed] date, [t bibliomixed] corpauthor, biblio
@section [t bibliomixed] corpname
@subheading Name

[t bibliomixed] corpname
@subheading Synopsis

@example
<xsl:template match="corpname" mode="bibliomixed" />
@end example

@node [t bibliomixed] date, [t bibliomixed] edition, [t bibliomixed] corpname, biblio
@section [t bibliomixed] date
@subheading Name

[t bibliomixed] date
@subheading Synopsis

@example
<xsl:template match="date" mode="bibliomixed" />
@end example

@node [t bibliomixed] edition, [t bibliomixed] editor, [t bibliomixed] date, biblio
@section [t bibliomixed] edition
@subheading Name

[t bibliomixed] edition
@subheading Synopsis

@example
<xsl:template match="edition" mode="bibliomixed" />
@end example

@node [t bibliomixed] editor, [t bibliomixed] firstname, [t bibliomixed] edition, biblio
@section [t bibliomixed] editor
@subheading Name

[t bibliomixed] editor
@subheading Synopsis

@example
<xsl:template match="editor" mode="bibliomixed" />
@end example

@node [t bibliomixed] firstname, [t bibliomixed] honorific, [t bibliomixed] editor, biblio
@section [t bibliomixed] firstname
@subheading Name

[t bibliomixed] firstname
@subheading Synopsis

@example
<xsl:template match="firstname" mode="bibliomixed" />
@end example

@node [t bibliomixed] honorific, [t bibliomixed] indexterm, [t bibliomixed] firstname, biblio
@section [t bibliomixed] honorific
@subheading Name

[t bibliomixed] honorific
@subheading Synopsis

@example
<xsl:template match="honorific" mode="bibliomixed" />
@end example

@node [t bibliomixed] indexterm, [t bibliomixed] invpartnumber, [t bibliomixed] honorific, biblio
@section [t bibliomixed] indexterm
@subheading Name

[t bibliomixed] indexterm
@subheading Synopsis

@example
<xsl:template match="indexterm" mode="bibliomixed" />
@end example

@node [t bibliomixed] invpartnumber, [t bibliomixed] isbn, [t bibliomixed] indexterm, biblio
@section [t bibliomixed] invpartnumber
@subheading Name

[t bibliomixed] invpartnumber
@subheading Synopsis

@example
<xsl:template match="invpartnumber" mode="bibliomixed" />
@end example

@node [t bibliomixed] isbn, [t bibliomixed] issn, [t bibliomixed] invpartnumber, biblio
@section [t bibliomixed] isbn
@subheading Name

[t bibliomixed] isbn
@subheading Synopsis

@example
<xsl:template match="isbn" mode="bibliomixed" />
@end example

@node [t bibliomixed] issn, [t bibliomixed] issuenum, [t bibliomixed] isbn, biblio
@section [t bibliomixed] issn
@subheading Name

[t bibliomixed] issn
@subheading Synopsis

@example
<xsl:template match="issn" mode="bibliomixed" />
@end example

@node [t bibliomixed] issuenum, [t bibliomixed] lineage, [t bibliomixed] issn, biblio
@section [t bibliomixed] issuenum
@subheading Name

[t bibliomixed] issuenum
@subheading Synopsis

@example
<xsl:template match="issuenum" mode="bibliomixed" />
@end example

@node [t bibliomixed] lineage, [t bibliomixed] orgname, [t bibliomixed] issuenum, biblio
@section [t bibliomixed] lineage
@subheading Name

[t bibliomixed] lineage
@subheading Synopsis

@example
<xsl:template match="lineage" mode="bibliomixed" />
@end example

@node [t bibliomixed] orgname, [t bibliomixed] othercredit, [t bibliomixed] lineage, biblio
@section [t bibliomixed] orgname
@subheading Name

[t bibliomixed] orgname
@subheading Synopsis

@example
<xsl:template match="orgname" mode="bibliomixed" />
@end example

@node [t bibliomixed] othercredit, [t bibliomixed] othername, [t bibliomixed] orgname, biblio
@section [t bibliomixed] othercredit
@subheading Name

[t bibliomixed] othercredit
@subheading Synopsis

@example
<xsl:template match="othercredit" mode="bibliomixed" />
@end example

@node [t bibliomixed] othername, [t bibliomixed] pagenums, [t bibliomixed] othercredit, biblio
@section [t bibliomixed] othername
@subheading Name

[t bibliomixed] othername
@subheading Synopsis

@example
<xsl:template match="othername" mode="bibliomixed" />
@end example

@node [t bibliomixed] pagenums, [t bibliomixed] printhistory, [t bibliomixed] othername, biblio
@section [t bibliomixed] pagenums
@subheading Name

[t bibliomixed] pagenums
@subheading Synopsis

@example
<xsl:template match="pagenums" mode="bibliomixed" />
@end example

@node [t bibliomixed] printhistory, [t bibliomixed] productname, [t bibliomixed] pagenums, biblio
@section [t bibliomixed] printhistory
@subheading Name

[t bibliomixed] printhistory
@subheading Synopsis

@example
<xsl:template match="printhistory" mode="bibliomixed" />
@end example

@node [t bibliomixed] productname, [t bibliomixed] productnumber, [t bibliomixed] printhistory, biblio
@section [t bibliomixed] productname
@subheading Name

[t bibliomixed] productname
@subheading Synopsis

@example
<xsl:template match="productname" mode="bibliomixed" />
@end example

@node [t bibliomixed] productnumber, [t bibliomixed] pubdate, [t bibliomixed] productname, biblio
@section [t bibliomixed] productnumber
@subheading Name

[t bibliomixed] productnumber
@subheading Synopsis

@example
<xsl:template match="productnumber" mode="bibliomixed" />
@end example

@node [t bibliomixed] pubdate, [t bibliomixed] publisher, [t bibliomixed] productnumber, biblio
@section [t bibliomixed] pubdate
@subheading Name

[t bibliomixed] pubdate
@subheading Synopsis

@example
<xsl:template match="pubdate" mode="bibliomixed" />
@end example

@node [t bibliomixed] publisher, [t bibliomixed] publishername, [t bibliomixed] pubdate, biblio
@section [t bibliomixed] publisher
@subheading Name

[t bibliomixed] publisher
@subheading Synopsis

@example
<xsl:template match="publisher" mode="bibliomixed" />
@end example

@node [t bibliomixed] publishername, [t bibliomixed] pubsnumber, [t bibliomixed] publisher, biblio
@section [t bibliomixed] publishername
@subheading Name

[t bibliomixed] publishername
@subheading Synopsis

@example
<xsl:template match="publishername" mode="bibliomixed" />
@end example

@node [t bibliomixed] pubsnumber, [t bibliomixed] releaseinfo, [t bibliomixed] publishername, biblio
@section [t bibliomixed] pubsnumber
@subheading Name

[t bibliomixed] pubsnumber
@subheading Synopsis

@example
<xsl:template match="pubsnumber" mode="bibliomixed" />
@end example

@node [t bibliomixed] releaseinfo, [t bibliomixed] revhistory, [t bibliomixed] pubsnumber, biblio
@section [t bibliomixed] releaseinfo
@subheading Name

[t bibliomixed] releaseinfo
@subheading Synopsis

@example
<xsl:template match="releaseinfo" mode="bibliomixed" />
@end example

@node [t bibliomixed] revhistory, [t bibliomixed] seriesvolnums, [t bibliomixed] releaseinfo, biblio
@section [t bibliomixed] revhistory
@subheading Name

[t bibliomixed] revhistory
@subheading Synopsis

@example
<xsl:template match="revhistory" mode="bibliomixed" />
@end example

@node [t bibliomixed] seriesvolnums, [t bibliomixed] subtitle, [t bibliomixed] revhistory, biblio
@section [t bibliomixed] seriesvolnums
@subheading Name

[t bibliomixed] seriesvolnums
@subheading Synopsis

@example
<xsl:template match="seriesvolnums" mode="bibliomixed" />
@end example

@node [t bibliomixed] subtitle, [t bibliomixed] surname, [t bibliomixed] seriesvolnums, biblio
@section [t bibliomixed] subtitle
@subheading Name

[t bibliomixed] subtitle
@subheading Synopsis

@example
<xsl:template match="subtitle" mode="bibliomixed" />
@end example

@node [t bibliomixed] surname, [t bibliomixed] title, [t bibliomixed] subtitle, biblio
@section [t bibliomixed] surname
@subheading Name

[t bibliomixed] surname
@subheading Synopsis

@example
<xsl:template match="surname" mode="bibliomixed" />
@end example

@node [t bibliomixed] title, [t bibliomixed] titleabbrev, [t bibliomixed] surname, biblio
@section [t bibliomixed] title
@subheading Name

[t bibliomixed] title
@subheading Synopsis

@example
<xsl:template match="title" mode="bibliomixed" />
@end example

@node [t bibliomixed] titleabbrev, [t bibliomixed] volumenum, [t bibliomixed] title, biblio
@section [t bibliomixed] titleabbrev
@subheading Name

[t bibliomixed] titleabbrev
@subheading Synopsis

@example
<xsl:template match="titleabbrev" mode="bibliomixed" />
@end example

@node [t bibliomixed] volumenum, , [t bibliomixed] titleabbrev, biblio
@section [t bibliomixed] volumenum
@subheading Name

[t bibliomixed] volumenum
@subheading Synopsis

@example
<xsl:template match="volumenum" mode="bibliomixed" />
@end example

@node info, keywords, biblio, Top
@chapter info

@menu
* [t] corpauthor::
* [t] jobtitle::
* [t] orgname::
* [t] orgdiv::
* [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo::
* [t] bookinfo|setinfo|seriesinfo::
* [t] partinfo::
* [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo::
* [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo::
* [t] objectinfo: [t] objectinfo <1>.
* [t info-wrapper] node(): [t info-wrapper] node[].
@end menu

@node [t] corpauthor, [t] jobtitle, , info
@section [t] corpauthor
@subheading Name

[t] corpauthor
@subheading Synopsis

@example
<xsl:template match="corpauthor" />
@end example

@node [t] jobtitle, [t] orgname, [t] corpauthor, info
@section [t] jobtitle
@subheading Name

[t] jobtitle
@subheading Synopsis

@example
<xsl:template match="jobtitle" />
@end example

@node [t] orgname, [t] orgdiv, [t] jobtitle, info
@section [t] orgname
@subheading Name

[t] orgname
@subheading Synopsis

@example
<xsl:template match="orgname" />
@end example

@node [t] orgdiv, [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo, [t] orgname, info
@section [t] orgdiv
@subheading Name

[t] orgdiv
@subheading Synopsis

@example
<xsl:template match="orgdiv" />
@end example

@node [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo, [t] bookinfo|setinfo|seriesinfo, [t] orgdiv, info
@section [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo
@subheading Name

[t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo
@subheading Synopsis

@example
<xsl:template match="docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo" />
@end example

@node [t] bookinfo|setinfo|seriesinfo, [t] partinfo, [t] docinfo|prefaceinfo|chapterinfo|appendixinfo|articleinfo|artheader|glossaryinfo, info
@section [t] bookinfo|setinfo|seriesinfo
@subheading Name

[t] bookinfo|setinfo|seriesinfo
@subheading Synopsis

@example
<xsl:template match="bookinfo|setinfo|seriesinfo" />
@end example

@node [t] partinfo, [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo, [t] bookinfo|setinfo|seriesinfo, info
@section [t] partinfo
@subheading Name

[t] partinfo
@subheading Synopsis

@example
<xsl:template match="partinfo" />
@end example

@node [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo, [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo, [t] partinfo, info
@section [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo
@subheading Name

[t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo
@subheading Synopsis

@example
<xsl:template match="referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo" />
@end example

@node [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo, [t] objectinfo <1>, [t] referenceinfo|refentryinfo|refsect1info|refsect2info|refsect3info|refsynopsisdivinfo, info
@section [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo
@subheading Name

[t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo
@subheading Synopsis

@example
<xsl:template match="sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo" />
@end example

@node [t] objectinfo <1>, [t info-wrapper] node[], [t] sect1info|sect2info|sect3info|sect4info|sect5info|sectioninfo, info
@section [t] objectinfo
@subheading Name

[t] objectinfo
@subheading Synopsis

@example
<xsl:template match="objectinfo" />
@end example

@node [t info-wrapper] node[], , [t] objectinfo <1>, info
@section [t info-wrapper] node()
@subheading Name

[t info-wrapper] node()
@subheading Synopsis

@example
<xsl:template match="node()" mode="info-wrapper" />
@end example

@node keywords, toc, info, Top
@chapter keywords

@menu
* [t] keywordset::
* [t] subjectset::
@end menu

@node [t] keywordset, [t] subjectset, , keywords
@section [t] keywordset
@subheading Name

[t] keywordset
@subheading Synopsis

@example
<xsl:template match="keywordset" />
@end example

@node [t] subjectset, , [t] keywordset, keywords
@section [t] subjectset
@subheading Name

[t] subjectset
@subheading Synopsis

@example
<xsl:template match="subjectset" />
@end example

@node toc, beginpage, keywords, Top
@chapter toc

@menu
* [t toc] *::
* [t] toc::
* [t] tocpart|tocchap|tocfront|tocback|tocentry::
* [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5::
* [t] lot|lotentry::
@end menu

@node [t toc] *, [t] toc, , toc
@section [t toc] *
@subheading Name

[t toc] *
@subheading Synopsis

@example
<xsl:template match="*" mode="toc" />
@end example

@node [t] toc, [t] tocpart|tocchap|tocfront|tocback|tocentry, [t toc] *, toc
@section [t] toc
@subheading Name

[t] toc
@subheading Synopsis

@example
<xsl:template match="toc" />
@end example

@node [t] tocpart|tocchap|tocfront|tocback|tocentry, [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5, [t] toc, toc
@section [t] tocpart|tocchap|tocfront|tocback|tocentry
@subheading Name

[t] tocpart|tocchap|tocfront|tocback|tocentry
@subheading Synopsis

@example
<xsl:template match="tocpart|tocchap|tocfront|tocback|tocentry" />
@end example

@node [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5, [t] lot|lotentry, [t] tocpart|tocchap|tocfront|tocback|tocentry, toc
@section [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5
@subheading Name

[t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5
@subheading Synopsis

@example
<xsl:template match="toclevel1|toclevel2|toclevel3|toclevel4|toclevel5" />
@end example

@node [t] lot|lotentry, , [t] toclevel1|toclevel2|toclevel3|toclevel4|toclevel5, toc
@section [t] lot|lotentry
@subheading Name

[t] lot|lotentry
@subheading Synopsis

@example
<xsl:template match="lot|lotentry" />
@end example

@node beginpage, pi, toc, Top
@chapter beginpage

@menu
* [t] beginpage::
@end menu

@node [t] beginpage, , , beginpage
@section [t] beginpage
@subheading Name

[t] beginpage
@subheading Synopsis

@example
<xsl:template match="beginpage" />
@end example

@node pi, docbook, beginpage, Top
@chapter pi

@menu
* [t] processing-instruction(): [t] processing-instruction[].
@end menu

@node [t] processing-instruction[], , , pi
@section [t] processing-instruction()
@subheading Name

[t] processing-instruction()
@subheading Synopsis

@example
<xsl:template match="processing-instruction()" />
@end example

@node docbook, , pi, Top
@chapter docbook
@section docbook

This file is the basic driver of the Texinfo XSLT stylesheets.  It
includes all the other stylesheet files.

You can use this stylesheet directly, or create your own custom
stylesheet that imports this one (or one of the other driver files):

@strong{Importing stylesheets}

@example
<xsl:stylesheet
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  version="1.0">

  <xsl:import 
    href="http://docbook2x.sf.net/latest/xslt/texi/docbook.xsl" />

  @dots{} your own stylesheet code goes here @dots{}
    
</xsl:stylesheet>
@end example

@noindent
Importing the stylesheet allows you to specify stylesheet options and
customize the stylesheets without changing the standard stylesheets.

@menu
* [t] *::
* [t] text(): [t] text[].
@end menu

@node [t] *, [t] text[], , docbook
@section [t] *
@subheading Name

[t] *
@subheading Synopsis

@example
<xsl:template match="*" />
@end example

@node [t] text[], , [t] *, docbook
@section [t] text()
@subheading Name

[t] text()
@subheading Synopsis

@example
<xsl:template match="text()" />
@end example

@bye
