
# $Id: roff.charmap,v 1.6 2004/08/13 01:32:23 stevecheng Exp $
# 
# unicodetoroff.xml - map Unicode chars to roff escape sequences.
# 
# Author: Michael Smith <smith@sideshowbarker.net>
# Created: 2004-01-27
# Version: 1.00.0
# Date: $Date: 2004/08/13 01:32:23 $
# RCS Id: $Id: roff.charmap,v 1.6 2004/08/13 01:32:23 stevecheng Exp $
# URL: http://docbook.sf.net/projects/xsl/
# 
# Copyright 2004 Michael Smith
# 
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
# 
# ***************************************************************
# Commentary
# ***************************************************************
# This file maps a small subset of Unicode characters (around 800
# or so) to corresponding roff espace sequences. Use it when you
# need to convert Unicode (UTF-8 or UTF-16) encoded XML content
# to roff (e.g., to generate "portable" man-page output).
# 
# Although the format follows the "character map" format
# specified in the XSLT 2.0 working draft[1], it can be used with
# an appropriate XSLT 1.0 stylesheet and any XSLT 1.0 processor.
# 
# [1] http://www.w3.org/TR/xslt20/#character-maps
# 
# In order to make the character map more readable, it uses the
# following "extension attributes" (in the "unichar" namespace):
# 
# - unichar:name = ISO character name (e.g., "YEN SIGN")
# - unichar:entity = ISO entity name (e.g., "yen")
# 
# Use of such extension attributes is permitted by the XSLT 2.0
# spec; see the "Extension Attributes" section[2].
# 
# [2] http://www.w3.org/TR/xslt20/#extension-attributes
# 
# The initial version of this file (before the "string" mappings
# were added) was generated by taking the "unichars.el" file from
# Norm Walsh's "xmlunicode.el"[3] elisp distro, and running a
# script on it to convert it to XML.
# 
# ***************************************************************
# Acknowledgements
# ***************************************************************
# References used in selecting roff mappings:
# 
# - groff_char(7) man page[3]
# - groff info file[4]; in particular, the "Page Motions" node[5]
# - tables in "Character Sets" chapter of "XML In a Nutshell"[6]
# 
# [3] http://www.linux.se/showMan.php?TITLE=groff_char&SECTION=7
# [4] http://www.fifi.org/cgi-bin/info2www?(groff)
# [5] http://www.fifi.org/cgi-bin/info2www?(groff)Page+Motions
# [6] http://www.ibiblio.org/xml/books/xian2/
# 
# The idea for doing this in XML/XSLT came from working with
# Steve Chengâ€™s docbook2x package[7] - in particular, the
# "utf8trans" utility and character-map system in that package.
# 
# [7] http://docbook2x.sourceforge.net/
# 
# ################################################################# 

# *****************************************************************
# Begin: Latin-1/ISO-8859-1
# x00a0 to x00ff
# **************************************************************** 

# no-break space can be written two ways in roff; the difference,
# according to the "Page Motions" node in the groff info page, is:
# 
# "\ " =
# "An unbreakable and unpaddable (i.e. not expanded during filling)
# space."
# 
# "\~" =
# "An unbreakable space that stretches like a normal
# inter-word space when a line is adjusted." 
# 
# Unfortunately, roff seems to do some weird things with long
# lines that only have words separated by "\~" spaces, so it's
# safer just to stick with the "\ " space
# 
a0 \ 
a1 \(r!
a2 \(ct
a3 \(Po
a4 \(Cs
a5 \(Ye
a6 \(bb
a7 \(sc
a8 \(ad
a9 \(co
aa \(Of
ab \(Fo
ac \(no

# groff_char(7) man page says: "the soft hyphen control character
# (prints as itself).  groff never use this character for output
# (thus it is omitted in the table below); the input character 173
# is onto \%." 
ad \%
ae \(rg
af \(a-
b0 \(de
b1 \(+-
b2 \(S2
b3 \(S3
b4 \(aa
b5 \(mc
b6 \(ps

# according to groff_char(7), I think the escape string \(pc
# "periodcentered" could also be used for middot; not sure which
# is better, but "md" mnemonic is a better fit :-)
# 
b7 \(md
b8 \(ac
b9 \(S1
ba \(Om
bb \(Fc
bc \(14
bd \(12
be \(34
bf \(r?
c0 \(`A
c1 \('A
c2 \(^A
c3 \(~A
c4 \(:A
c5 \(oA
c6 \(AE
c7 \(,C
c8 \(`E
c9 \('E
ca \(^E
cb \(:E
cc \(`I
cd \('I
ce \(^I
cf \(:I
d0 \(-D
d1 \(~N
d2 \(`O
d3 \('O
d4 \(^O
d5 \(~O
d6 \(:O
d7 \(mu
d8 \(/O
d9 \(`U
da \('U
db \(^U
dc \(:U
dd \('Y
de \(TP
df \(ss
e0 \(`a
e1 \('a
e2 \(^a
e3 \(~a
e4 \(:a
e5 \(oa
e6 \(ae
e7 \(,c
e8 \(`e
e9 \('e
ea \(^e
eb \(:e
ec \(`i
ed \('i
ee \(^i
ef \(:i
f0 \(Sd
f1 \(~n
f2 \(`o
f3 \('o
f4 \(^o
f5 \(~o
f6 \(:o
f7 \(di
f8 \(/o
f9 \(`u
fa \('u
fb \(^u
fc \(:u
fd \('y
fe \(Tp
ff \(:y

# ****************************************************************
# End: Latin-1/ISO-8859-1
# **************************************************************** 

# ****************************************************************
# Begin:
# 
# - x0100 to x017f (Latin Extended-A)
# - x0180 to x023f (Latin Extended-B)
# - x0250 to x02ad (IPA Extensions)
# - x02b0 to x02ee (Spacing Modifier Letters)
# - x0300 to x036f (Combining Diacritical Marks)
# 
# Other than the following exceptions, characters in these
# blocks don't have any roff equivalents
# **************************************************************** 
131 \(.i
132 \(IJ
133 \(ij
141 \(/L
142 \(/l
152 \(OE
153 \(oe
192 \(Fn
2c6 \(a^
2c7 \(ac
2c9 \(a-
2d8 \(ab

# there does not seem to by any roff equivalent for "dot above"
# <xsl:output-character
# character="&#x02d9;"
# unichar:name="DOT ABOVE"
# unichar:entity="dot"
# />
# 
2da \(ao
2db \(ho

# groff_char(7) man page calls Unicode x02dd a "Hungarian umlaut"
# 
2dd \(a"

# ****************************************************************
# End:
# - Latin Extended-A
# - Latin Extended-B
# - IPA Extensions
# - Spacing Modifier Letters
# - Combining Diacritical Marks
# **************************************************************** 

# ****************************************************************
# Begin: Greek and Coptic
# x0370 to x03ff
# **************************************************************** 
391 \(*A)
392 \(*B
393 \(*G
394 \(*D
395 \(*E
396 \(*Z
397 \(*Y
398 \(*H
399 \(*I
39a \(*K
39b \(*L
39c \(*M
39d \(*N
39e \(*C
39f \(*O
3a0 \(*P
3a1 \(*R
3a3 \(*S
3a4 \(*T
3a5 \(*U
3a6 \(*F
3a7 \(*X
3a8 \(*Q
3a9 \(*W
3aa \(*I
3ab \(*U
3ac \(*a
3ad \(*e
3ae \(*y
3af \(*i
3b0 \(*u
3b1 \(*a
3b2 \(*b
3b3 \(*g
3b4 \(*d
3b5 \(*e
3b6 \(*z
3b7 \(*y
3b8 \(*h
3b9 \(*i
3ba \(*k
3bb \(*l
3bc \(*m
3bd \(*n
3be \(*c
3bf \(*o
3c0 \(*p
3c1 \(*r
3c2 \(ts
3c3 \(*s
3c4 \(*t
3c5 \(*u
3c6 \(*f
3c7 \(*x
3c8 \(*q
3c9 \(*w
3ca \(*i
3cb \(*u
3cc \(*o
3cd \(*u
3ce \(*w
3d0 \(*B
3d1 \(+h
3d2 \(*U
3d3 \(*U
3d4 \(*U
3d5 \(+f
3d6 \(+p
# no mappings for remaining chars x03d7 to x03ef 
3f0 (*k
3f1 \(*r
3f2 \(*s
3f4 \(*H
3f5 \(*e
3f6 \(*e

# ****************************************************************
# End: Greek and Coptic
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Cyrillic
# x0400 to x04ff
# 
# - do nothing -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

# *****************************************************************
# Begin: General Punctuation
# x2000 to x206f
# **************************************************************** 
# first, Spaces of various widths 

# Note: There does not seem to be either a real em space or en
# space in roff; to approximate them, this character map assumes
# that in most fonts, an en space is about the same as the width of
# a digit (in roff, "\0"), so an em space (which by definition is
# equal to the width of two en spaces) is about the same as the
# width of two digits (thus, in roff, "\0\0") 
2000 \0
2001 \0\0
2002 \0
2003 \0\0
# roughly same width as a normal space 
2004  
# roughly same width as a normal space 
2005  
# roughly same width as a normal space 
2006  
# same as roff "digit" space 
2007 \0

# punctuation space in most fonts is actually closer to a normal
# space than it is to a thin space 
2008  

# Note: Not sure how best to deal with thin space, because the
# roff thin space, "\^", prints as a zero-width space in TTY
# output. However, it seems that, unlike a hair space, a thin
# space, at 1/12 of an em, is still recognizable to most people
# as a space, so treating it as zero-width seems wrong. So, for
# the sake of making TTY output look OK, just substitute with a
# normal space; but real roff escape is "\(\^" 
2009  

# I don't think there's a standard definition of what a hair
# space is; some guides just say it's "less than 1/5 of an em" or
# that it's "narrower than a thin space"; seems like in practice,
# it's *a lot* narrower than a thin space, to the point where
# it's close to being a non-space, so here it's substitute with
# roff equivalent of a zero-width joiner 
200a \&
# map to roff "zero-width break point"  
200b \:
# map to roff "zero-width break point"  
200c \:

# groff docs seem ambiguous about whether \& is a joiner and
# prevents breaks, but, based on testing, seems like it does 
200d \&

# non-visible 
# <xsl:output-character
# character="&#x200e;"
# unichar:name="LEFT-TO-RIGHT MARK"
# />
# <xsl:output-character
# character="&#x200f;"
# unichar:name="RIGHT-TO-LEFT MARK"
# />
# 
# .................................................... 
# next, hyphens and various dashes, bars, underscores  
2010 \(hy
2011 \&-\&
# roughly same width as en dash 
2012 \(en
2013 \(en
2014 \(em
# seems roughly same width as em dash 
2015 \(em
2016 \(bv\(bv

# no double-underscore in roff; so just make it a single
# underscore 
2017 _
# .................................................... 
# various quotation marks 
2018 \(oq
2019 \(cq
201a \(bq
# no roff equiv; treat same as lsquo 
201b \(oq
201c \(lq
201d \(rq
201e \(Bq
# no roff equiv; treat same as rdquo 
201f \(rq
# .................................................... 
# various symbols 
2020 \(dg
2021 \(dd
2022 \(bu
# no roff equiv 
2023 >\&
# no roff equiv 
2024 \&.
# no roff equiv 
2025 \&..
# no roff equiv 
2026 \&...
2027 \%

# Begin x2028 to x202e - no idea what to do with these
# <xsl:output-character
# character="&#x2028;"
# unichar:name="LINE SEPARATOR"
# />
# <xsl:output-character
# character="&#x2029;"
# unichar:name="PARAGRAPH SEPARATOR"
# />
# <xsl:output-character
# character="&#x202a;"
# unichar:name="LEFT-TO-RIGHT EMBEDDING"
# />
# <xsl:output-character
# character="&#x202b;"
# unichar:name="RIGHT-TO-LEFT EMBEDDING"
# />
# <xsl:output-character
# character="&#x202c;"
# unichar:name="POP DIRECTIONAL FORMATTING"
# />
# <xsl:output-character
# character="&#x202d;"
# unichar:name="LEFT-TO-RIGHT OVERRIDE"
# />
# <xsl:output-character
# character="&#x202e;"
# unichar:name="RIGHT-TO-LEFT OVERRIDE"
# />
# End x2028 to x202e - no idea what to do with these 

# seems like "narrow" nbsp is basically the same as a no-break
# space 
202f \ 
2030 \(%0

# no roff equiv; no idea what to do with it
# <xsl:output-character
# character="&#x2031;"
# unichar:name="PER TEN THOUSAND SIGN"
# />
# 
2032 \(fm
2033 \(sd
2034 \(sd\(fm

# no idea for these 
# <xsl:output-character
# character="&#x2035;"
# unichar:name="REVERSED PRIME"
# unichar:entity="bprime"
# />
# <xsl:output-character
# character="&#x2036;"
# unichar:name="REVERSED DOUBLE PRIME"
# />
# <xsl:output-character
# character="&#x2037;"
# unichar:name="REVERSED TRIPLE PRIME"
# />
# 
# there is no low caret in roff 
2038 ^
2039 \(fo
203a \(fc
# not in roff 
203b *
203c !!
203d ?!
203e \(rn
203f \(ul
# not in roff 
2040 \(rn
# not in roff 
2041 ^
# not in roff 
2042 *
# not in roff; just make bold hyphen 
2043 \fB-\fR
2044 \(sl
# not in roff 
2045 [
# not in roff 
2046 ]
2047 ??
2048 ?!
2049 !?
# not in roff 
204a 7
# not in roff; just replace with un-reversed pilcrow 
204b \(ps
# not in roff; just make regular bullet 
204c \(bu
# not in roff; just make regular bullet 
204d \(bu
204e *

# ...............................................................
# Remaining General Punctuation
# from x2050 to x206f
# only map a couple of these
# .............................................................. 
# basically same as a normal space 
205f  
# no idea how this is different than a zero-width joiner 
2060 \&

# *****************************************************************
# End: General Punctuation
# **************************************************************** 

# *****************************************************************
# Begin: Superscripts and Subscripts
# x2070 to x209f
# For superscripts, just do a^n thing
# For subscripts, just do a_n
# **************************************************************** 
2070 ^0
2071 ^i
2074 ^4
2075 ^5
2076 ^6
2077 ^7
2078 ^8
2079 ^9
207a ^+
207b ^-
207c ^=
207d ^(
207e ^)
207f ^n
2080 _0
2081 _1
2082 _2
2083 _3
2084 _4
2085 _5
2086 _6
2087 _7
2088 _8
2089 _9
208a _+
208b _-
208c _=
208d _(
208e _)

# *****************************************************************
# End: Superscripts and Subscripts
# x2070 to x209f
# **************************************************************** 

# *****************************************************************
# Begin: Currency Symbols
# x20a0 to x20b1
# No mappings for any of these; just spell out
# **************************************************************** 
20a0 EUR
20a1 COLON
20a2 CRUZEIRO
20a3 FRANC
20a4 LIRA
20a5 MILL
20a6 NAIRA
20a7 PESETA
20a8 RUPEE
20a9 WON
20aa SHEQEL
20ab DONG
20ac EUR
20ad KIP
20ae TUGRIK
20af DRACHMA
20b0 ?
20b1 PESO

# *****************************************************************
# End: Currency Symbols
# x20a0 to x20b1
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Combining Diacritical Marks for Symbols
# x20do to x20ff
# 
# - do nothing -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

# *****************************************************************
# Begin: Letterlike Symbols
# x2100 to x214b
# 
# No mappings for any of these, and nothing appropriate for most
# of them; so, just spell out the ones that we can
# **************************************************************** 
2103 \(deC
2105 c/o
2109 \(deF
# roff Ifraktur 
2111 \(Im
2113 l
2116 No.
2118 \(wp
211c \(Re
211e Rx
2120 sm
2122 \(tm
2126 \(*W
212a K
212b \(oA
2135 \(Ah

# *****************************************************************
# End: Letterlike Symbols
# x2100 to x214b
# **************************************************************** 

# *****************************************************************
# Begin: Number Forms
# x2150 to x218f
# 
# No mappings for any of these, and nothing appropriate for most
# of them; so, just spell out the ones that we can
# **************************************************************** 
2153 1/3
2154 2/3
2155 1/5
2156 2/5
2157 3/5
2158 4/5
2159 1/6
215a 5/6
215b 1/8
215c 3/8
215d 5/8
215e 7/8
215f 1/
2160 I
2161 II
2162 III
2163 IV
2164 V
2165 VI
2166 VII
2167 VIII
2168 IX
2169 X
216a XI
216b XII
216c L
216d C
216e D
216f M
2170 i
2171 ii
2172 iii
2173 iv
2174 v
2175 vi
2176 vii
2177 viii
2178 ix
2179 x
217a xi
217b xii
217c l
217d c
217e d
217f m
2180 CD

# *****************************************************************
# End: Number Forms
# x2150 to x218f
# **************************************************************** 

# *****************************************************************
# Begin: Arrows
# x2190 to x21ff
# **************************************************************** 
2190 \(<-
2191 \(ua
2192 \(->
2193 \(da
2194 \(<>
2195 \(va
21b5 \(CR
21d0 \(la
21d1 \(uA
21d2 \(rA
21d3 \(dA
21d4 \(hA
# no roff equiv; render same as single arrow 
21d5 \(va

# *****************************************************************
# Begin: Mathematical Operators
# x2200 to x22ff
# **************************************************************** 
2200 \(fa
2201 C
2202 \(pd
2203 \(te

# no roff equiv 
# <xsl:output-character
# character="&#x2204;"
# unichar:name="THERE DOES NOT EXIST"
# unichar:entity="nexist"
# />
# 
2205 \(es
2206 \(*D
2207 \(gr
2208 \(mo
2209 \(nm
220a \(mo
220b \(st

# not in roff 
# <xsl:output-character
# character="&#x220c;"
# unichar:name="DOES NOT CONTAIN AS MEMBER"
# />
# 
220d \(st

# not in roff
# <xsl:output-character
# character="&#x220e;"
# unichar:name="END OF PROOF"
# />
# 
220f \(product

# not in roff
# <xsl:output-character
# character="&#x2210;"
# unichar:name="N-ARY COPRODUCT"
# unichar:entity="coprod"
# />
# 
2211 \(sum
2212 \-
2213 \(+-

# not in roff
# <xsl:output-character
# character="&#x2214;"
# unichar:name="DOT PLUS"
# unichar:entity="plusdo"
# />
# 
2215 \(f/

# not in roff
# <xsl:output-character
# character="&#x2216;"
# unichar:name="SET MINUS"
# unichar:entity="setmn"
# />
# 
2217 \(**

# not in roff
# <xsl:output-character
# character="&#x2218;"
# unichar:name="RING OPERATOR"
# unichar:entity="compfn"
# />
# 
2219 \(bu
221a \(sr

# not in roff
# <xsl:output-character
# character="&#x221b;"
# unichar:name="CUBE ROOT"
# />
# <xsl:output-character
# character="&#x221c;"
# unichar:name="FOURTH ROOT"
# />
# 
221d \(pt
221e \(if

# not in roff
# <xsl:output-character
# character="&#x221f;"
# unichar:name="RIGHT ANGLE"
# unichar:entity="ang90"
# />
# 
2220 \(/_

# 0x2221 to 0x2226 not in roff;
# but fake a parallel sign with vert bars
2225 \(bv\(bv
2227 \(AN
2228 \(OR
2229 \(ca
222a \(cu
222b \(is
222c \(is\(is
222d \(is\(is\(is
# 0x222e to 0x2233 not in roff 
2234 \(tf

# not in roff
# <xsl:output-character
# character="&#x2235;"
# unichar:name="BECAUSE"
# unichar:entity="becaus"
# />
# 
2236 :
2237 ::
# 0x2238 to 0x223b not in roff 
223c \(ti
# 0x223d to 0x224b not in roff 
2245 \(=~

# not in roff
# <xsl:output-character
# character="&#x2246;"
# unichar:name="APPROXIMATELY BUT NOT ACTUALLY EQUAL TO"
# />
# <xsl:output-character
# character="&#x2247;"
# unichar:name="NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO"
# unichar:entity="ncong"
# />
# 
2248 \(~~
# x2249 to x2253 not in roff 
2254 :=
2255 =:
# x2256 to x2255 not in roff 
225f ?=
2260 \(!=
2261 \(==

# not in roff
# <xsl:output-character
# character="&#x2262;"
# unichar:name="NOT IDENTICAL TO"
# unichar:entity="nequiv"
# />
# <xsl:output-character
# character="&#x2263;"
# unichar:name="STRICTLY EQUIVALENT TO"
# />
# 
2264 \(<=
2265 \(>=
# x2266 to x2269 not in roff 
226a <<
226b >>
# x226c to x2281 not in roff 
2282 \(sb
2283 \(sp
2284 \(nb

# not in roff
# <xsl:output-character
# character="&#x2285;"
# unichar:name="NOT A SUPERSET OF"
# unichar:entity="nsup"
# />
# 
2286 \(ib
2287 \(ip
# x2288 to x2294 not in roff 
2295 \(c+
2296 \(c*
2297 \(c*
# x2298 to x22a4 not in roff 
22a5 \(pp
# x22a6 to x22bf not in roff 
22c0 \(AN
22c1 \(OR
22c2 \(ca
22c3 \(cu

# not in roff
# <xsl:output-character
# character="&#x22c4;"
# unichar:name="DIAMOND OPERATOR"
# unichar:entity="diam"
# />
# 
22c5 \(md
22c6 \(**
# x22c7 to x22cd not in roff 
22ce \(OR
22cf \(AN
# x22d0 to x22d7 not in roff 
22d8 <<<
22d9 >>>
# x22da to x22ee not in roff 
22ef \&...
# x22fo to x22ff not in roff 

# *****************************************************************
# End: Mathematical Operators
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Miscellaneous Technical
# x2300 to x23ff
# - do nothing except for angle brackets -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
2329 \(la
232a \(ra

# *****************************************************************
# Begin: Control Pictures
# x2400 to x243f
# **************************************************************** 
2400 NUL
2401 SOH
2402 STX
2403 ETX
2404 EOT
2405 ENQ
2406 ACK
2407 BEL
2408 BS
2409 HT
240a LF
240b VT
240c FF
240d CR
240e SO
240f SI
2410 DLE
2411 DC1
2412 DC2
2413 DC3
2414 DC4
2415 NAK
2416 SYN
2417 ETB
2418 CAN
2419 EM
241a SUB
241b ESC
241c FS
241d GS
241e RS
241f US
2420 SP
2421 DEL
# no roff equiv; just use real space 
2422  
# no roff equiv; just use real space 
2423  
2424 NL

# *****************************************************************
# End: Control Pictures
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Optical Character Recognition
# x2440 to x24ff
# - do nothing -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

# *****************************************************************
# Begin: Enclosed Alphanumerics
# x2460 to x24ff
# **************************************************************** 
2460 1
2461 2
2462 3
2463 4
2464 5
2465 6
2466 7
2467 8
2468 9
2469 10
246a 11
246b 12
246c 13
246d 14
246e 15
246f 16
2470 17
2471 18
2472 19
2473 20
2474 (1)
2475 (2)
2476 (3)
2477 (4)
2478 (5)
2479 (6)
247a (7)
247b (8)
247c (9)
247d (10)
247e (11)
247f (12)
2480 (13)
2481 (14)
2482 (15)
2483 (16)
2484 (17)
2485 (18)
2486 (19)
2487 (20)
2488 1.
2489 2.
248a 3.
248b 4.
248c 5.
248d 6.
248e 7.
248f 8.
2490 9.
2491 10.
2492 11.
2493 12.
2494 13.
2495 14.
2496 15.
2497 16.
2498 17.
2499 18.
249a 19.
249b 20.
249c (a)
249d (b)
249e (c)
249f (d)
24a0 (e)
24a1 (f)
24a2 (g)
24a3 (h)
24a4 (i)
24a5 (j)
24a6 (k)
24a7 (l)
24a8 (m)
24a9 (n)
24aa (o)
24ab (p)
24ac (q)
24ad (r)
24ae (s)
24af (t)
24b0 (u)
24b1 (v)
24b2 (w)
24b3 (x)
24b4 (y)
24b5 (z)
24b6 A
24b7 B
24b8 C
24b9 D
24ba E
24bb F
24bc G
24bd H
24be I
24bf J
24c0 K
24c1 L
24c2 M
24c3 N
24c4 O
24c5 P
24c6 Q
24c7 R
24c8 S
24c9 T
24ca U
24cb V
24cc W
24cd X
24ce Y
24cf Z
24d0 a
24d1 b
24d2 c
24d3 d
24d4 e
24d5 f
24d6 g
24d7 h
24d8 i
24d9 j
24da k
24db l
24dc m
24dd n
24de o
24df p
24e0 q
24e1 r
24e2 s
24e3 t
24e4 u
24e5 b
24e6 w
24e7 x
24e8 y
24e9 z
24ea 0
24eb 11
24ec 12
24ed 13
24ee 14
24ef 15
24f0 16
24f1 17
24f2 18
24f3 19
24f4 20
24f5 1
24f6 2
24f7 3
24f8 4
24f9 5
24fa 6
24fb 7
24fc 8
24fd 9
24fe 10

# *****************************************************************
# End: Enclosed Alphanumerics
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Box Drawing
# x2500 to x257f
# 
# Block Elements
# x2580 to x259f
# 
# - do nothing -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 

# *****************************************************************
# Begin: Geometric Shapes
# x25a0 to x25f7
# **************************************************************** 
25a1 \(sq
25a2 \(sq
25ab \(sq
25ba \fB>\fR
25bb >
25bc \fBv\fR
25bd v
25c4 \fB<\fR
25c5 <
25c6 \(DI
25c7 \(lz
25ca \(lz
25cb \(ci
25cf \(bu
25e6 \(ci
25ef \(ci

# *****************************************************************
# End: Geometric Shapes
# x25a0 to x25f7
# **************************************************************** 

# *****************************************************************
# Begin: Miscellaneous Symbols
# x2600 to x26ff
# **************************************************************** 
261a \(lh
261b \(rh)
261c \(lh
261e \(rh)
2660 \(SP
2661 \(HE
2662 \(DI
2663 \(CL
2664 \(SP
2665 \(HE
2666 \(DI
2667 \(CL

# *****************************************************************
# End: Miscellaneous Symbols
# **************************************************************** 

# *****************************************************************
# Begin: Dingbats
# x2700 to x27be
# No roff equiv. for most of these; just map to something close
# **************************************************************** 
2713 \(OK
2714 \fB\(OK\fR
2715 \(mu
2716 \fB\(mu\fR
2717 \(mu
2718 \fB\(mu\fR
2719 \fB+\fR
271a \fB+\fR
271b \fB+\fR
271c \fB+\fR
271d \fB+\fR
271e \fB+\fR
271f \fB+\fR
2720 \fB+\fR
2721 *
2722 *
2723 *
2724 *
2725 *
2726 *
2727 *
2729 *
272a *
272b *
272c *
272d *
272e *
272f *
2730 *
2731 *
2732 *
2733 *
2734 *
2735 *
2736 *
2737 *
2738 *
2739 *
273a *
273b *
273c *
273d *
273e *
273f *
2740 *
2741 *
2742 *
2743 *
2744 *
2745 *
2746 *
2747 *
2748 *
2749 *
274a *
274b *
274d *
274f \(sq
2750 \(sq
2751 \(sq
2752 \(sq
2756 *
2758 \(bv
2759 \fB\(bv\fR
275a \fB\(bv\fR
275b \fB\(oq\fR
275c \fB\(cq\fR
275d \fB\(lq\fR
275e \fB\(rq\fR
2761 \(ps
2762 \fB!\fR
2763 \fB!\fR
2764 \fB\(HE\fR
2765 \fB\(HE\fR
2766 \fB\(HE\fR
2767 \fB\(HE\fR
2776 1
2777 2
2778 3
2779 4
277a 5
277b 6
277c 7
277d 8
277e 9
277f 10
2780 1
2781 2
2782 3
2783 4
2784 5
2785 6
2786 7
2787 8
2788 9
2789 10
278a 1
278b 2
278c 3
278d 4
278e 5
278f 6
2790 7
2791 8
2792 9
2793 10
2794 \fR\(->\fB
2799 \fR\(->\fB
279b \(->
279c \fR\(->\fB
279d \(->
279e \fR\(->\fB
279f \(->
27a0 \fR\(->\fB
27a1 \fR\(->\fB
27a2 \(->
27a3 \(->
27a4 \(->
27a7 \fR\(->\fB
27a8 \fR\(->\fB
27a9 \(rA
27aa \(rA
27ab \(rA
27ac \(rA
27ad \(rA
27ae \(rA
27af \(rA
27b1 \(rA
27b2 \(rA
27b3 \fR\(->\fB
27b4 \fR\(->\fB
27b5 \fR\(->\fB
27b6 \fR\(->\fB
27b7 \fR\(->\fB
27b8 \fR\(->\fB
27b9 \fR\(->\fB
27ba \fR\(->\fB
27bb \fR\(->\fB
27bc \fR\(->\fB
27bd \fR\(->\fB
27be \fR\(rA\fB

# *****************************************************************
# End: Dingbats
# **************************************************************** 

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Miscellaneous Mathematical Symbols
# x27c0 to x27ef
# 
# Supplemental Arrows
# x27f0 to x297f
# 
# Miscellaneous Mathematical Symbols
# x2980 to x29ff
# 
# Supplemental Mathematical Operators
# x2a00 to x2aff
# 
# - no nothing -
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
3008 \[la]
3009 \[ra]

# *****************************************************************
# Begin: Alphabetic Presentation Forms
# xfb00 to xfb04
# **************************************************************** 
fb00 \(ff
fb01 \(fi
fb02 \(fl
fb03 \(Fi
fb04 \(Fl

# *****************************************************************
# End: Alphabetic Presentation Forms
# **************************************************************** 
